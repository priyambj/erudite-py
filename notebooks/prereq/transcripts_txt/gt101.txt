Welcome to lesson two. In this lesson, we'll learn about the advantages of using R to perform data analyses. We'll install R Studio. And we'll learn the basic data types and commands of R. Before we get started, I want to share with you how one data scientist used R to improve the health outcomes for the citizens of Chicago, Illinois. Data scientist Corey Nissen used the R programming language to analyze tweets from people in the city of Chicago. Corey analyzed tweets in real time by searching for the words food poisoning in each of them. I want you to read more about his analysis and his work by clicking on the link in the instructor notes. Try to find the answers to these next three questions as you read through the article. Textcat was the name of the R package that Corey used. We'll discuss R packages in the next video and what they allow us to do. For the second question, the automated system captures between ten tweets to 20 tweets a day. For each of the tweets, the system will recommend that whoever sent the tweet file a report. Now, for this last question, we accepted any text answer here. I thought that the most interesting part was that Cory showed the open source R code classifier on GitHub. GitHub is a repository for sharing code. You can learn more about GitHub by following the links in the instructor notes. It's the most popular repository for open source projects and it's really easy to get started. R is the leading programming language for statistics and data analysis. One of the main advantages of using R is that we can build up an analysis line by line in code. We can save all of our work in a file and go back to see what we investigated at a later date. Having R scripts allows you to easily share your work with others. And you can see what others are doing with data. R also has over 2,000 user contributed packages that increase its functionality. One example of this is the text analysis package, TextCat, that you just saw. Now, one of the main packages we'll use throughout this course is ggplot2. Ggplot2 is a graphics package that lets us create plots And graphs with just a few commands. We'll learn more about ggplot in the next lesson but just to give you a taste of it, here's an example of a plot you can create. Now, don't worry about memorizing or understanding all of this code. You'll have plenty of practice with this later in the course. I just want to show you how a few lines of code, can create amazing graphics. I'm going to load up the ggplot library and a color library. Then I'm going to load the diamonds data set, and with this function I'll create a scatter plot. Let's check out this plot in detail. This part shows the relationship between price and carat of almost 54,000 round cut diamonds. I'd say R is doing very well for such few lines of code. The last thing I want to mention is that you can use R anywhere. It's free open source software that works on any operating system. And as a result of this, R has a large active and growing community of users. In this video, I'll show you how to install R and R Studio. To get started you want to go to cran.rstudio.com. And then you'll click on the link to download R for Windows. If you never installed the R programming language before, then click on this first link. Since it's your first time downloading it. Now depending on your version of Windows, you might need to see the frequently asked questions. I'm set for my computer, so I'm going to go ahead and download R for Windows. I get a warning message and I want to keep the file. Now this might take some time to download, so just be patient. Then you want to open the file, and then run the program. A set up wizard should appear and now you just want to walk through all the steps. I'll set my language, and then I'll just continue installing by hitting next. I'm just going to accept the defaults here and then install it to R. I'll leave these as is, so that way a desktop icon will be created. And it's going along. Great. Now I'm finished with my setup. So that was just part one of the installation process. That just gave us the programming language R. Now we need to go and install RStudio. RStudio is a graphical user interface for programming in R. It's basically a point and click system that lets us work with data really easily. So first let's just go to download now to get RStudio. We're going to get RStudio for our desktop. So just click this first button. Now there's going to be a lot of links here, and you really just want this first link. It's going to be the version of RStudio that's recommended for your computer, and for your operating system. Notice how this one's for Windows XP, Vista, Windows 7, or Windows 8, so I'll click on that, and then I'll keep the file. And you can see it downloading in the bottom left corner, here. It looks like it's ready, so I'm going to open this up. I'll then install RStudio into this path. And create a Start Menu folder as well. Great. I'm done. And this is what RStudio looks like. Now yours might look slightly different than mine and that might be because the file's open. So if I go to File > New File > RScript this opens a basic RScript which allows me to start programming in R. In this video, I'll show you how to install R Studio, which is a graphical interface for programming with the R language. Simply open up any web browser and go to RStudio.com then you want to go to download now. You are going to run R Studio from your desktop so click on this link. Now here's where I want you to be very careful. R studio requires R first, so if you don't already have the programming language R installed, you need to download it here. Now this is a really easy link to miss so make sure you click here first to install R, before installing R studio. Once you're at cran.rstudio.com, you want to select the download for the Mac OSX version. This will bring up another page and then you can download the latest version of R. It may take some time to download so you might want to take a break and then come back to the computer. Once you've opened up the package, follow the instructions for installing R. You should end up getting a successful message for the installation. Now you're ready to go and install R studio. The website will recommend the best version of RStudio for you so just click on whatever one comes up for you first. Once you've downloaded this, you want to open that package. Now, just drag RStudio into your applications and you'll be good to go. This is R studio, it's an ID or an Integrated Development Environment and it's what we'll be using to create R scripts and to create plots. It's a point and click system that organizes our workspace and it has some nice features for creating and sharing work. Here's a basic tour of it. The main interface contains four panels that can be resized as needed. Now, you may only see three panels when you open R studio. If so, just open a new R script by clicking on the file, and then New File > Rscript. So, in the top left here, we have Rscripts. These are the files in which we will type our R commands. We'll also save these files, so we can alter them or share them at a later time. In the bottom left, we have the R Console. You can type in R commands here. However, these R commands will only be saved in a temporary history. The commands won't be saved to a file like up in here that can be reviewed at a later date. In the top right of R studio, we have two tabs. One called Environment and one called History. The Environment will contain all the objects, functions and values that are in the current working memory for R. History on the other hand will keep a running log of any of the R commands that we run. Now we can run R scripts directly from our files but we can also type them into the console. No matter which way we type them in the History will capture them. And finally, in the lower right, we have the Files, Plots, Packages, Help and Viewer section. You'll learn more about these later but this is where our plots or graphs will first appear when we run an R command that creates a visualization. Now that we've gone over the layout of R Studio, I want you to match some actions that you might do in each panel of R. Remember this first panel is for R files or Rscripts. This second area is for the workspace or the history. This third space is the Console where we get our output. And this fourth panel is for Files, Packages, Plots, and Help. So for example, if I asked you to match the activity to one of these panels, like save an R script that would correspond to box number one. You can save them by clicking on this button. Now we could of course use the main menu, but I'm actually include as any one of your options here. The main purpose of this quiz is just to get you familiar with R studio. So here are your list of actions. And I want you to pair it with the panel where you would do it in R studio. Put the number of the corresponding panel in each of the boxes. You can review the log of command entered by going to the history so that would be panel two. Help documentation appears in the lower right hand side which would be panel four. To clear the work space you can either use panel two or panel three. You can run a command in here to clear the work space or you can use the icon located in panel two. It should look like a sweeping broom. We can run a bunch of commands from a file from panel one. Plots appear down here in the lower right, so that would be panel four, and all of our objects and memory appear up here, in our environment or our work space. So that's panel two. And finally to read the results from functions or from calculations, we simply look at the console, where our output comes, panel three. Now that you know the basic layout of our studio, you're welcome to customize it, by going to Tools, and then Options. From here you can choose the default directory if you'd like. You can change formatting options for editing code, or you can even change the font and the appearance. Here, I'm using the tomorrow theme, but there are of course some others. You can also make adjustments to the panes so, feel free to play around with this to get a configuration that you like. Now, you might not have any idea what you like first so just wait until you play with r a bit, and then you'll find a configuration that suits you. I'm going to leave this as is. Alright, we've got R set up, so let's start using the programming language. To get started, I want you to download the R script from the instructor notes and open it here. When you open the file, it should look like this. This R script contains both comments as plain text and R code. You can run R commands by highlighting a chunk of the code and then hitting Cmd and Enter on a Mac, Or Ctrl+Enter on a PC. The lines of text that start with a hash or a pound symbol are comments. There lines are plain text that we don't want to run as R code. It's the standalone text that you really want for the R code. Now, your task is to read through this file and run and write code when you're prompted to do so. When you get to the end of the file, you'll get to a question, and you'll need to answer this question to move on to the next video in this lesson. Now, if you're already familiar with R, I suggest trying to answer the questions, and then you might want to go back to the files to see if you missed anything. We know you learn best by doing, so it's important that you execute and run this code as you go, and that you make sense of the output. Any output will appear down here in the console. I also hope that you have moments of inspiration. So if something does come to mind I want you to code it up and just run it in R. You won't break anything and the worse thing that would happen would be an error message or a warning message in this box. If you do happen to get stuck at any point post in the discussions so that way your peers or one of the instructors can help. This question should have been pretty simple. You just needed to run this bit of code, mean mtcars mpg, and that would have given you the value to enter. As you go through this course, you might encounter commands that you've never seen before. And we don't expect you to know everything, but we do want you to keep the following in mind when you encounter any sort of challenges or difficulties. First, take an active role in problem solving and be aware of the resources at your disposal. You can type a question mark and the name of any function to bring up help documentation in r. So for example I can look up the documentation for the function mean. Here it will tell me any parameters that mean takes. And it will give me examples usually at the bottom of the documentation. I can copy and paste these into the console. And press enter to see what the function does. Here, I created something called x, and then if I hit x into the console, I can see what this is. This is just the vector of numbers zero to ten, and then the number 50. I can take the mean of x, and print it out. And finally, I have some sort of trend parameter. Maybe you can figure out what this does. Now, if you can't solve your problem using the documentation I would suggest Googling it. StackOverflow is also another great site to browser for help. I've linked to some of the most useful websites in the instructor notes, and you can also find these in the course materials under Our Resources. One of my personal favorites when I learned R was Quick-R, or statmethods.net. This site has excellent examples and short pieces of code that can refresh your memory and get you going on any data analysis. In the next three lessons we will explore a data set that resembles user activity on Facebook but before we get to that data set I need to show you how to read in data that doesn't come with R and how to subset that data. It turns out that not all data sets can be easily loaded like the empty cars data set. In the instructor notes you can find a link to download a new data set. This data set is going to contain information on the fifty states in the US. Most of the data comes from about 1970. Before we can read in the data, we need to set our current working directory. So, to figure out what directory you're in now, you can type in getwd. We can run this command and see the output to the console. It looks like I'm already in the downloads file, and that also appears here in the top of my console. So I don't need to change my directory, but maybe you do. To change your directory, you can type setwd. This will take a string which will be the file path to what ever directory you want to go to. My guess is that your data set is in your downloads file. So I would probably run this command. Now it's important to note that whether or not your on a Mac or Windows machine you still need to separate your paths or your folders with a forward slash. Also be sure that you use quotes around your path. Now in order to load up the data, we can use the read.csv command. This command takes a string, which is the name of the file. And here we're going to pass it to a variable called states info. States info is going to save all of our data into a data frame. When I run this code, I can see that states info appears in my environment. I can double click on the data frame in the work space, and this will let me see the table of values in our studio. Now, let's say I wanted to get information on states located in only the Northeast. Those states would be states like Connecticut and they have a state region of one. I'm going to go back to my R-script and write a command that pulls in this data. This subset command would look like this. Here I'm passing the data frame states info to subset and I'm asking for it to retrieve any states that have a state.region equal to one. When I run this code I can see the output down below. We have Connecticut, Maine, and many others. Now, there is another way to subset this data frame. I didn't want to show you it, just so that way, you don't get confused later if you see it. It uses bracket notation, where we have the name of our data set, followed by two brackets. And we'll have a comma in between. This first spot is for the rows of our data set. That we want to keep. And the second spot is for the column's that we want to keep. So if I want only the states in the Northeast, I would write this code. The name of the data set is states info and then I want the rows that have a state region equal to one. Now I can't just use state region here, I need to access the actual variable, so I have to put states info and the dollar sign. This gives me the actual variable value and I can see if it's equal to one. If it is equal to one, I want to return every single column in the data frame. So for example, with Connecticut if it's state region is equal to one. I want to return every single column in this row. To return all of the columns, I'll just leave this blank. So this code searches for roads that have a state region equal to one. And then it takes all the columns in that row. And all of this will be sent to the console as a new data frame. Now it might not be so helpful to have this output just in the console. So we can save these subsets into new variables. I'm also going to include some functions to print out the first two rows of each data frame, and also their dimensions. Hopefully, I've convinced you that they're the same data set. Now, I really want you to pay careful attention to the syntax in both of these examples. Throughout this course, we tend to make use of the subset command, but there might be instances where we use this. Just know that both methods produce the same result. Now, I recommend that you try subsetting this data frame for other regions of the country on your own. You could also try finding out which states have an illiteracy rate of 0.5%, or which states have high school graduation rates above 50%. Feel free to play around. Let's get some more practice working with data frames. You downloaded an R script earlier and saw how we can save our work and run an R code from it. For your next task, you're going to download an RMD file and run code in it. You can download the RMD file from the link in the instructor notes. The file will look something like this. Notice how this file is slightly different from the file that you saw before. An R script can only have R code and comments. This file, however, the RMD file, allows us to do so much more. It's an R Markdown document, or RMD. Now, you might be wondering what R Markdown is. And basically, it's a simple formatting language that lets us author web pages. If you want to know all you can do with Markdown then go to Help and then go to Markdown Quick Reference. This would bring up the documentation for Markdown, and you can scroll through some of the examples in the formatting. We've also included a video in the instructor notes that will go through Markdown. So far this file only contains text that will be formatted using Markdown. Let's add some R code to this. We can do this by clicking on Chunks and then going to Insert Chunk. Now if you're friendly with the keyboard, you can use the shortcut Cmd+Option+I. There's many other shortcuts in here and you can see them here in this menu. Here I've added some code to see what this data set is. This is the cars data set that also comes with R, and it contains 50 observations of speeding and stopping distances for cars in the 1920s. I'm going to add this text as the title to this document, so that way it's more descriptive of my file. I'll also run the Stir command on this data frame, so that way I can see what's inside of it. It looks like I have two variables, speed and distance, which are measured in miles per hour and feet. Not only can we run R code and get the output from these files, we can also embed images. This plot function comes with a base graphics package in R. But don't worry learning more about it. We'll be using the GG plot two package which is a powerful graphics language in the coming lessons. When I run this code I get a simple plot of speed versus distance. Now, what's really amazing about this document is that we can click the Knit HTML button. This will generate a web page that includes both content, as well as the output of any embedded R code. This simple button allows us to easily share and publish our work. That's enough about RMD files. Let's have you work in one now. Download the RMD file if you haven't already, and run and write code when you're prompted to to so. At the end of the file, you'll come across a question. I want you to answer that question for this next quiz. And then you can continue on with the rest of the lesson. Good luck and have fun. The cars that satisfy either this condition or this condition were the Fiat 128, the Honda Civic, the Lotus Europa, and the Toyota Corolla. Let's see how we can figure this out using "R". Your task was to determine which cars in the "MT cars" data set have MPG greater than or equal to 30 and an HP less than 60. To answer this question you needed to subset the data frame. I'll show you two ways of doing this. In the first method, I'll use the subset command on empty cars, and I want to get the cars whose mpg is greater than or equal to 30 or whose horse power is less than 60. That would be the Fiat, the Honda Civic, the Toyota Corolla, and the Lotus Europa. Using the bracket notion, the coats and tacks would look like this, and there's the same output. Now that you're familiar with the basic R commands, let's look at some more data. This time we'll be looking at data collected from a survey of Reddit users. Reddit's a social and entertainment website where users can post links and comments about trending news. This survey asks users about demographic information such as gender, age, nationality and employment status. It even asks users what type of cheese they would be. And whether they prefer dogs, cats, or turtles. Download the data set from the instructor notes and load it into R. Once you've done that, take a look at the data by using the stir function. Now when I try to read in the file, sometimes I might get an error, and this is pretty common, so I would suggest looking at your current working directory to figure out the problem. Often times your directory isn't where your file is stored. Alright, so I've set my directory, and now I'm going to try this code up here again. And there we go, there's our data. Running the stir command, we can see that there's lots of data here. Most of these variables have a type of factor. Now, a factor's a categorical variable that has different flavors or levels to it. An example of this would be employment status. This variable has many different levels such as employed full time, or employed part time. Or not working. One thing we might be interested in is how many people are in each group of employment status. We can table that variable to see the number in each of these groups. Running this code I can see the table. We can also get these counts and other data points by running the summary function on our data frame. I encourage you to check out the outfit of this for yourself. In addition to factor variables like employment status, the R programming language also has other data types like list and matrices, but we really won't be working with them in this course. We've included a reference for data types in the instructor notes, so if you would like to learn more about those, check it out. Let's look more closely to these factor variables. For now i want to draw your attention to the age.range variable right here. Notice that it says that we have a factor variable with seven different levels. We can examine the levels of a variable, by typing in the command levels and then putting it the variable right here. In the console we can see the seven levels of the age.range variable. Now, instead of creating a table of the age.range variable, let's create a plot that shows how many users are in each bin. That is, we want to figure out how many surveyed respondents are between the ages of 18 and 24, 25 and 34, and so on. I'm going to create this plot using the ggplot2 package, and the qplot function that comes with it. Again, don't worry about understanding this code too much, we'll have practice with this in the next lesson. When I run this code, I get my plot over here. Zooming in on this plot, I want you to notice that the age groups appear to be in order. This is true for everyone except the survey takers who are under the age of 18. Now, it would be really helpful if this bar was really oriented over here. That way we could make comparisons across the groups more easily. Now this is why we would want to have ordered factors. The variable age.range just contains factors with seven levels, but these levels aren't arranged in any particular order. Sometimes you want to introduce order into our data set. So that way we can make more readable plots. So, knowing a little bit about ordered factors, let's see if you can answer this next question. If you haven't already done so, download the Reddit survey data and look at its structure. After you looked at the structure of the variables, try and answer this question. Which of these variables in the data set could also be converted to an ordered factor? Just like H.Range. Check any of the variables that apply. The answer here is just income level. Gender would not be considered an ordered factor, since it doesn't make sense to rank male and female groups. The military service and children variables are binary variables with yes or no values, so these really wouldn't make sense to order either. Using the same thinking, it doesn't really make sense to order the levels of country and state variables, since we wouldn't rank those either. We wouldn't really say one location is better than another. And finally, cheese falls into the same bucket as military service and children, because it's binary, so this one's out too. The income levels actually have a natural order to them where we can group the buckets from lowest to highest, or from highest to lowest. That's what make it an ordered factor. So here's our problem. If we try to see the amount of users in each age group, it's not in order and it's hard to compare immediately. This problem is even more noticeable on a different plot. If we try to create the same plot for users in each income bracket, we see a very similar problem. And here it's much worse. These first two bins are for a 100,000 and over 150,000. And this last bin is for people who make under 20,000. Our eyes tend to read pages from left to right, so this graph is pretty hard to interpret. Or even better said, it'd be very hard to make comparisons naturally with our eye. We have to always scan down to the bottom to figure out what group we're in. So let's order the factors in our age.range variable. What I want you to do is to look up the documentation for the factor function. Or you can read through the example that we've linked in the instructor notes. Once you're ready, try to write the code in order to order the levels of this variable. And just as a reminder, the level should take on these values. For this programming assignment, you needed to have rearranged the levels of the age.range variable, so that way, under 18 appeared first. One way to do this is to use the ordered function on the variable. We'll use the ordered function on age.range, and then we'll set the levels. I can run all this code to set the levels, and then, I can make my plot again. Pretty nice, huh? Another way to achieve the same result would be to use this code. Here, we're using the factor function. We're taking our age.range variable, setting the levels, and then making the order be true since we want these ordered. I'll run this code. And then, I'll make sure that the graph is the same output. And yes, it is. Now, if you want another challenge, try reordering the levels for the income range variable, and see if you can produce this same plot. It's important to note that many of the data sets that we've used so far in this course are what I would call tidy data sets. What I mean is that these data sets were manipulated into a specified format of rows and columns. This is what allowed us to so easily import these data sets into R. You should know that not all data sets are going to be so nice. Sometimes, you may be pulling data from different sources, like webpages, audio files, or even PDFs. Other times, you may need to reshape or rearrange your data into different formats. We're going to cover this later in lesson five. The important thing to know is that this is a necessary step prior to conducting EDA and it's called data munching. There are plenty of tools for doing this kind of work, and if you're interested in learning more about how to wrangle and adjust data, check out our data munching course. You can find a link to it in the instructor notes. Now, this course EDA won't cover data munching, but techniques for doing so are vital for any data scientist. Before we wrap up this lesson, let's hear from Eytan and Sean, who are also two data scientists at Facebook. They'll offer their advice for how to work with data. My advice to data scientists, or future data scientists is find data sets that you're interested in, and, and work with them, and play with the data. And just developed experience with playing with data. Good data science comes from good questions, not from fancy techniques, or from, you know, having the right data. It comes from motivating your research with an idea that you care about, and that you think other people will care about. It's almost, you almost have to think about it like a journalist would. You have this audience and they're going to consume the work that you produce, and you want them to care about it, and be interested. And so, starting with the right questions, in, in particular, something that motivates you as a person is really the right starting point, not, like, you know, some fancy technique that you want to learn. Congratulations on finishing lesson two. In this lesson you learned how to use R Studio and you learned about the basic commands in R. If you found something particularly helpful or if you have ways that we can improve the course, let us know by posting in the forum. In the next lesson, you'll learn how to visualize and summarize single variables within a data set. We hope to see you there. [MUSIC] The first thing you'll probably want to do as a Georgia Tech student is register for classes. You should check the registrar's website for information on when registration is open. To access Oscar itself, you'll go to oscar.gatech.edu and sign in with your Georgia Tech ID, which is the nine digit number that starts with nine zero. You'll use Oscar to register for classes, withdraw from classes, get your grades, and ultimately apply to graduate. To register for classes, you'll use a system called OSCAR. OSCAR stands for Online Student Computer-Assisted Registration. To access OSCAR, go to oscar.gatech.edu. You can also access it through BuzzPort, but it's easier just to go straight to OSCAR. Then, click Secured Access Login. Now log in using your nine-digit ID. And use your six-digit PIN number. The first time you log in, your PIN with be your birthdate. You'll then be asked to change it. If you forget your PIN, you can click Forgot PIN below. After you log in, you'll be in OSCAR. Now, we'll talk about how to find classes. Registration is only open during certain periods of time. So, before you go to register, you should check to see when you're allowed to register. To do this, first click Student Services & Financial Aid, and then click Registration. This will take you to the Registration menu. >From here, click Registration Status, then choose which term to check. Here, you'll be shown during which times you can register. There are two phases to registration. Phase one, a couple of months before the semester starts, and phase two, right at the beginning of the semester. You'll get a time ticket for each. Here you'll also see if you have any holds on your account. A hold will prevent you from registering. If you see any holds, contact the registrar's office for more information. To find classes, we want to return to the registration menu, then click Look Up Classes. Then we'll select our term. This will bring us to a list of every subject offered across the entire university. Right now, the OMS program has classes in two subjects, computer science and computational science and engineering. So we'll scroll down to those and use Shift to select both. Then we'll click Course Search and we'll get a list of all the courses in those subjects that are offered in the semester. You can then click View Sections to see the status of the different sections of that class. We'll talk about this screen in a bit. You might notice that this list is actually pretty overwhelming. You're seeing every class offered on campus for the entire semester as well as the online classes. We can make this a bit easier by going and doing an advanced search. Like before, we're going to select Computational Science and Engineering and Computer Science as our subjects. But then we're going to scroll down to Campus and select Online, and then we'll do our search. Then when I scroll down I'll see only those courses offered in the online campus or in the OMS program for that semester. This way you can focus only on those classes for which you can actually register. So now let's talk about actually registering. No matter which method you use to find your classes you'll end up on a screen like this. Let's talk a little bit about what this information on this screen actually means. Under the Select column you'll see a check mark if you can register for that class or a letter if you can't. If you can't, it might be because the class is full or might be because your registration window isn't open. Next is the CRN column. We'll talk about this in a bit. The next nine columns are just information about the class. This won't generally change from class to class, so don't worry too much about this. The next three columns stands for capacity, active and remaining. Capacity is how many people can take the class. Active is how many students are currently in the class. And remaining is the number of slots left. When a class fills up then students start joining the waitlist, which also has capacity, active, and remaining columns. So now let's talk about actually adding a class. There are two ways to add classes. >From the previous screen, you can just click the check box over here, then click Register. I'm going to go ahead and register for Software Architecture and Design. That will take you to the Schedule screen. Here we'll see your Current Schedule. You'll see here the class for which you just registered. However, you might want to do some advanced planning instead. Remember that CRN column on the previous screen? You can use this to register too. Before your Registration window opens, write down the CRN numbers of the classes for which you want to register. So in this case, I would write down 90097, which is the CRN number for Software Architecture and Design. Back on the Registration screen, I'm going to click Add or Drop Classes. This will take me back to the Schedule screen that you saw earlier. At the bottom, you can enter the CRN numbers for the classes for which you want to register. So I would enter 90097, and then click Submit Changes. Just like before, now you'll see that class in your Current Schedule. That way, when registration opens, you can come directly to this screen and just enter the CRN numbers for the classes for which you want to register. Note that this process might not be successful. If I try to register for more hours than I'm allowed, for example, I'll see an error message. So after registering, make sure that the class appears in your schedule. If not, look for an error. You might decide at some point that you want to drop out of a class for which you're registered. There are two times that you can do this. One is in registration, either in phase one or phase two. During this time, you can add and drop classes whenever you want. >From the home screen, click Add or Drop Classes to get back to your schedule. Then, under the Action column, click the menu for the class you want to drop. Then click Delete. Then click Submit Changes. When the screen refreshes, I'll see that I'm no longer registered for that class. After registration ends, you can still drop a class until the withdrawal deadline. However, if you're withdrawing after registration closes, you'll receive a w on your transcript for that class. To withdraw from a class, go to the same Add or Drop Classes link that we clicked earlier. After registration closes, you'll no longer see this delete option. Instead, you'll see a Withdraw option. Click that, and then click Submit Changes to withdraw from the class. As long as you drop before the registration deadline is over, the drop will not be noted on your transcript. That means that until the end of the first week of class, you can join and leave whatever class you want. After the end of the first week of class, withdrawing from a class will get you a w on your transcript. To check the withdrawal deadline, visit the registrar's website. The withdrawal deadline is typically a little over half way through the semester. Now, let's talk a little bit more about registration and especially what to do when a class you want is full. So here I've looked up a different class. An intro to cognitive science class, but what I find is that this class is full. I know it's full for two different reasons. First, over on the left there is a C. C means closed. That means there's no spots left in this class. Secondly, there are three columns over on the right that represent the current enrollment in the class. The columns are CAP, ACT, and REM. CAP represents the capacity of the class. ACT represents the number of active students currently registered for the class. And REM represents the remaining slots in the class. For this class I know it's full, because it has zero remaining slots. When that happens, what I have to do is join the wait list for the class. There are three similar columns that represent the status of the wait list, WL Cap, WL Act, and WL rem. Just like the columns for regular registration, WL Cap, WL Act, and WL rem, represent the capacity, the active number of students, and the remaining slots. Specifically, on the wait list. So, if I want to join a full class, I have to join the wait list. To join the wait list, I have to use the second of the two registration methods we talked about. First, I have to note the class' CRN number. In this case it's 55110. And then I have to return to the Add/Drop Classes page. Usually, I would do that through the registration menu, but between you and me, you can actually get to it just by clicking Add to WorkSheet, whether or not you have anything selected. That will take you back to the Add/Drop Classes page. Scrolling down, we want to go back to CRN section. You want to enter the five digit CRN number that you noted before and again, click submit changes. Now here what's going to happen is you're going to be given an error like we talked about. Under registration add errors, you'll see closed as the status of your registration. Under the action menu, you can click Wait listed course. Click submit changes again. And the course will now appear as a waitlisted course under your current schedule. In the event that a slot in the waitlisted course becomes available, you'll receive an email and you can return to this page and register for the course the way we did before. You only have a limited window of time to register for the course however, so make sure to do so as soon as possible. For more information on how long you have to register once you receive that email, check the registrar's website, that can change from semester to semester. So it's the end of the year and you want to get your final grades. Let's go back to the Main Menu. Click Student Services & Financial Aid, and then click Student Records. And then click Final Grades, select the Term. At the bottom of the screen, you'll find your grades. Your grades will be on a scale of A to F, or maybe an I if you coordinate with your professor in advance. So now, you're almost at the end of your program. And this is also the system that you'll be using to apply for graduation. Click Student Services and Financial Aid. Then click Student Records. Next, click Apply to Graduate. Select the term in which you want to graduate. And from here, follow the prompts. After, you can view your application to graduate as well. Typically, you should apply to graduate the term before you want to graduate. So, if you want to graduate in spring, you should apply to graduate the previous fall. If it turns out you don't complete the classes necessary, that's all right, you can always postpone graduation. But you need to have applied by the end of the semester before. Check the registrar's website for specific application deadlines. [MUSIC] The tools we've described so far represent the majority of time you'll spend in the program. But there's a handful of others you'll use as well, so we'll go through those real quick as well. The tools we'll talk about here will cover managing your Georgia Tech account, taking proctored exams, interacting with your classmates on social media, attending office hours with your TAs and professors, and participating in a peer review process. Passport is the main account management system for Georgia Tech. To access Passport, we go to passport.gatech.edu. It can also be accessed through Buzzport. Once there, log in. Once you're in, you'll see the Passport home screen. There are a number of things you can do here. You can change your Georgia Tech password, set up password hints, and set up your e-mail alias. You can modify your directory entry and nicknames. And provide emergency contact information. Note that your Georgia Tech password automatically expires every four months. So you'll definitely need to come back here occasionally. Some classes in the OMS program have proctored exams. A proctored exam is similar to one you would take in the classroom. No books, no notes, no resources, just you and the test. Now, of course, in a classroom, that's easy to do. There is a teacher watching. Online, it's not so easy, so we use a tool called Proctortrack, which provides automatic proctoring using cutting edge AI and computer vision. And that's fascinating to me. We're using AI and computer vision to deliver a program where you'll learn about AI and computer vision. To access Proctortrack, you'll go to testing.verificient.com as you see up here. When you first take a class that has a proctored exam, a Proctortrack account will be created for you here. And you'll get the password in your email. Using that login name and password, click here to log in. After logging in, you'll be back at the home page. Click View Tests to view the tests available to you. Generally, the first time you log in, you should see an onboarding test. Click Continue to open the onboarding test. Then walk through the steps to install the software on your computer for the first time and experience what proctoring is like. When you have an upcoming test, it will be listed here as well. Note that even after you've taken the onboarding test, it will continue to appear here just in case you need to set up the software on a new computer in the future. And as with other tools we use, Proctortrack may change over time. So check the notes below this video to see if there's anything new to be aware of. The OMS program has a thriving presence on Google+. Amazingly, the Google+ community is entirely student run. We gather resources, share tips, and ask questions of our fellow students. Enormous credit goes to Nate Payne for setting up the community and the moderators of the community for helping to run it. To access it, go to the link in the instructor notes below. The first time you visit, you'll be prompted with this ask to join link. Click that to join the community. After you join you'll find lots of useful resources here. The box in the top right has common resources that every OMS student will need. Scrolling down you'll find posts, links, questions, and suggestions from your fellow students. There are similar communities on LinkedIn, Facebook and other sites. And you can find links to those in the instructor notes below as well. WebEx is the recommended tool for office hours and teleconferences in the OMS program. Some classes use Hangouts, Hangouts On Air and other tools. But WebEx comes most highly recommended because it supports both one-to-one and one-to-many meetings, and because it supports client-side recording at meetings. To access WebEx go to gatech.webex.com. Click on the top right to log in. To host a teleconference, click this button. Then, send your guest this link. The first time you use the tool, you'll go through some initial set up based on your operating system. Then, once you're in, you'll need to click Connect to Audio over here to enable audio. After that, you can click on your microphone to mute or unmute yourself. You can click this icon to turn on your webcam. You can also invite people and get the meeting URL using these buttons. Or, you can enable screen sharing with this button. Lastly, you can use the Record button to record the meeting. As the presenter, you have a number of options for how to control the room. More commonly though, you'll be joining rooms run by your instructors and TAs. So let's see what that's like. I'm going to join David's room. I click the link to his meeting that he sent me. Then I click enter room the same way I did before. After joining I would need to enable my audio by either clicking Yes when prompted or by clicking Connect to Audio. If these options don't appear, the presenter hasn't yet enabled audio. After that, I'll be in the same type of room but since I'm not the presenter most of the options will be disabled. But I'll still mute and unmute myself, or turn on and off my webcam the same way. These WebEx rooms are only open if the presenter is in them. But if you join them before the presenter arrives you'll be automatically put in the conference once they're there. Typically, your instructors and TAs will schedule office hours. And when office hours roll around you can just click the link to enter their room and wait for them to arrive. Web X also supports a waiting room of sorts in case the instructor or TA wants to have private one-on-one office hours with a series of people. If that's the case you'll automatically be put into the conference once the instructor or TA is ready for you. Peer Feedback is a tool many classes use for peer to peer review. The first time you're enrolled in a class that uses Peer Feedback, you'll receive an email invitation. The link in that email will take you to the account creation screen. Create your account using the email that was pre-populated in the form, and then click Register. Once you create your account you'll see an invitation to join your class. Then click accept. The class will now appear under your courses. Once your class is underway, you'll see a number of tasks on the right. If your class lets you submit assignments through Peer Feedback, you'll see some seat assignment tasks on the right. Right now though, most classes that use Peer Feedback have you submit your assignment through either T-Square or Udacity, and then they copy the assignment over to Peer Feedback. So usually you won't submit assignments directly to Peer Feedback. If you have received some feedback, from peers or graders, you will see the View Feedback buttons at the top. Click one of those to see your feedback. You'll see your scores along the rubric, and you'll see some written feedback. You can also give some meta feedback in the field below, which can only be seen by the teaching team. Back on the home screen, if you have some feedback to give, you'll see these Give Feedback buttons. The data on the left is the deadline for giving feedback. Click Give Feedback to review the assignment. You'll see the assignment at the top, and the rubric at the bottom. Evaluate the assignment according to the Rubric, leave some written feedback, and then click Submit. And if you have more feedback to give, you can click here and just keep going. Finally, at any time, you can review the feedback given and received by clicking the course, and then clicking the assignment. You will see your assignment submission on the left. Feedback you have received in the middle, and feedback you have given on the right. Some classes also use this tool for grading. They actually have the graders or TAs in the system grading assignments the same way the peers are giving feedback. If you received a grade or feedback from a TA through this system, it will be marked with a TA icon in the Feedback for You box These have been a few of the tools that you'll use pretty regularly in addition to things like T-Square, Udacity, and Piazza, but there are likely other tools you'll use in this program as well. If there are any other tools you'd like us to cover in this lesson, let us know using the survey link in the instructor notes below. [MUSIC] When we talk about the OMS program we sometimes use the metaphor, where's the classroom? On campus, we have a physical classroom and it's where the discussion, the announcements, the lecturing all happen. In my opinion, in the OMS program, Piazza is the classroom. The lectures are on Udacity like a textbook and t square is there for assignments and resources. But Piazza is where we recreate the personal interactions that are present in a typical classroom. So we'll talk about getting started with Piazza. And we'll talk about asking questions, reading responses, and providing answers of your own. Now, Piazza can get extremely noisy in classes of this size, so we'll also talk about some workflows for managing your time on Piazza. We generally recommend checking in on Piazza each day while you're enrolled in a class, even for only a couple of minutes. Just to see if anything catches your eye or if there is any place you can help your classmates out. Once we're registered for Piazza we'll typically access from the Piazza link on the left side of T-square. We also highly recommend bookmarking it separately so you can go straight to Piazza without bothering with T-square. Here, we find the Piazza home screen on the left is a list of topics in the class. Right now, the Class at a Glance is on the right, but as soon as we click on a topic, the topic will appear on the right. Across the gray bar, near the top, is a list of folders. We'll talk about those in a bit. Across the blue bar, at the very top, are three tabs, Q & A, Resources, and Statistics. Q&A is where you'll spend most of your time. It's where you access the forum. Resources may list some course information, but in practice, hardly any OMS classes use it. Statistics will show you some student statistics on the course, as well as your own stats. In the top left, you'll find a drop down box. You can use this to look at a different course. Finally, the gear in the top right will let you modify your profile and change your settings. Let's start with your profile. To edit your Piazza profile, click the gear, then click Account Email Settings. Here, you'll be able to change your name as it appears when you post on Piazza, as well as your preferred email address and profile picture. One thing we highly advise is setting a profile picture. It doesn't have to be an actual photo of you if you aren't comfortable with that. But simply having a unique picture really improves your recognizability when you're posting on Piazza. I can say as an instructor that when I see a name, sometimes it takes a second to remember the conversations I've had with that student in the past. But when I see a picture, I usually remember them pretty immediately. Below here, you can change your email settings for the class. Piazza can send you a lots of emails, depending on how you have it set up. So if you're drowning in Piazza emails, you can change your settings here. The most common task you'll complete on Piazza is reading. >From the home screen on Piazza, you can read any of the topics on the left. Just click the topic to load it in the main window. The numbers on the topics indicate how many updates there have been since you last viewed the topic. You'll notice that the topics are flagged with other information as well. This icon with the four lines indicates a topic is a note. That means that the topic is more of a discussion, not a question and answer. This icon with the three bars is for a poll where you can vote on something. If the topic is a question, it will either appear in red if it is unresolved, or it will have icons showing it has been resolved by a student or instructor. For example, this question is unresolved. We can see there is no answer provided, and so it appears in red on the left. A yellow i icon means that the question has received an instructor's answer. A green s icon means that the question has received a student answer. For example, in this topic we see the question has received both instructor and student answers. So both icons appear. A check mark on top of the green s means that an instructor has endorsed a student's answer. There may also be some flags on the left side of the topic list. This flag means the topic or question was posted by an instructor. This flag means the topic is only visible to you and the instructor. This flag means the topic is only visible to a particular subgroup, like a project group, or a study group. Finally, there are also flags below the questions. Sometimes an instructor will endorse a question or a note as a good note, and this will appear. Unresolved followups are also noted below. These refer to the followup discussion, which we'll talk about in a bit. Many of our OMS classes can have several hundred students in them. And, as such, the topic list can get very large and can be pretty overwhelming. But, remember, there's not usually nearly as much content there as there actually appears to be. But to kind of wade through it, I'd like to show you one of my favorite features. It's hidden under menu in Piazza. It's the archive feature. To get to the archive feature, mouse over a topic. And then hover over the arrow that appears on the left. Then come down to Archive. Click it and the topic will no longer appear in your topic list. Archiving a topic will remove it from your topic list, but it won't remove it from everyone else. And archived topics are still available to you in a way we'll talk about a bit later, but it won't be there to clutter up your view. So if you're reasonably sure that a topic isn't going to have any updates that are going to interest you. Or, if you feel like the topic has reached its logical end, feel free to archive it like this to keep it out of your way. You can also use this menu to subscribe to e-mail updates about a thread by clicking Follow. Or to mark a thread as unread if you want to make sure to come back to it later. Once you selected a topic to read, you'll see the original post at the top. If the topic is a question, you'll see a student answer and an instructor answer here. If the student answer has been endorsed by an instructor, that will also be flagged here. Below the answers, there may be some follow up discussions as well. One the most useful features of piazza, is this top nav bar. When you open a topic that has some updates, this nav bar will highlight the updates, since you last visited in pink. You can then scroll this bar back and forth, to see a chronological history of what's been posted in what order. This also helps you focus on new content since your last visit. There's one other really useful feature on this page, but it's kind of hidden. If you click this star up here, it will add a topic to your favorites. Favorites are listed at the top of your topic list just under your pinned posts. This is a great way to keep track of topics you know you're going to come back to, or to follow updates to topics without subscribing to email notifications. When you are reading Piazza, there are a couple of different ways you can navigate. First, there's the topic list that we've been using on the left. Second, you can filter by folders at the top. For example, here are all of the topics in the project folder. The numbers indicate the number of updated posts in each folder. Clicking a folder shows only those topics in that folder. Third, you can use the search bar. The search bar allows you to search by key words or by certain flags. After you start typing a search query, click the search tips to bring up a list of flags. For example, you can search within titles, or for specific contributors by name. Note that sometimes the folder listing across the top won't list every folder. In those cases, you can search by folder here. My favorite navigation features, though, are found under this gear right here. This menu lets you view only certain types of messages. For example, you can view only newly created topics by clicking on Unread, or you can view only updated topics by clicking on Updated. You can choose to view only instructor posts by clicking on Instructor Posts near the bottom, which is a great way to focus on getting the crucial content pretty fast. You'll also notice that we've been using Compact Mode, which shows only the topic titles. You can change that at the bottom. If you're overwhelmed by the amount of new content on Piazza and you just want to start fresh, you can just click Mark All Read at the bottom. Lastly, you can also shortcut these filters. Ebony has Unread, Updated, Unresolved and Following shortcutted right here. You can remove a shortcut by clicking Remove shortcut while viewing that filter, and you can add a shortcut by clicking Add shortcut while viewing that filter. So now that we've covered reading content on piazza, what about posting content? To post a new thread, click New Post in the top left. At the top, you'll select your Post Type. When you're posting a new topic, it's really helpful to select the right kind of post. Are you asking a question that will have one right answer, like a due date or a clarification on directions? The you probably want to use a Question. Are you just sharing something, or asking for something with multiple good answers, like help solving a problem? That's usually better suited for a Note. Or, if you want to ask a poll question, you could always just choose Poll. Piazza lets you communicate privately, as well. You can share your post with the whole class, with only a group you're a member of, or only with instructors. Next, select the folder your posts will go into. A single post can go into more than one folder. Then enter your title and post text. Depending on your class, you might be able to choose to remain anonymous. All though not all classes have this option. Then, click Post My Question and your post will appear. Or, you can save it as a draft to return to later. You'll see a list of your drafts at the top of the topic lists whenever you start to create a new post. But, for now, I'll go ahead and post this. After posting, you can edit the post by clicking the edit button in the bottom left. You can also access other options with the actions menu in the top right. Only inspectors can delete post. But you can change the visibility if you post by mistake. Every topic, whether it be a note, question, or poll, allows followups down below. You can reply to a topic by clicking here, or reply to a followup by clicking below. If the topic is a question, you can also edit the student answer. This is a collaborative wiki, where students can put together an answer to the question. So if you're providing the one right answer to a question, you may want to add it here. If you're just posting a further question or a general suggestion that isn't necessarily the one right answer, it might be better to post it as a followup. One of Piazza's interesting features is that instructors can endorse student answer. As an instructor one of my favorite experiences is signing on to Piazza, seeing a bunch of open questions, but being able to go through and just endorse student answers. Because students have already answered the questions for each other. It's much more satisfying to me to see students answering each other's' questions and helping each other out, rather than everyone relying on the instructors and TAs for everything. With the kinds of students and the kinds of classes we have in the OMS program, I never hesitate to say that I think you'll learn more from your classmates than you'll ever learn from us. [MUSIC] T-Square is the learning management system that we use at Georgia Tech, not just in the OMSCS program, but on campus as well. You'll access T-Square at t-square.gatech.edu or you can always get to it through BuzzPort. Now, different classes use T-Square differently, but generally speaking, T-Square is the hub of the course. It's where you'll access syllabi, assignments, assignment submission, grades, Piazza, Udacity and more. Now some classes might put some of these materials on to other sites, but generally you'll get to it through T-Square. So we're going to talk about how to access T-Square and some of the tools you'll use through T-Square in many of your courses. So the first thing we need to do is actually access T-Square. You can always access T-Square through BuzzPort, but to save a step we're going to go straight to T-Square right now. So to access T-Square we're going to go to t-square.gatech.edu. Now once you're here, you'll need to login in the top right. So let me go ahead and do that. Login with your Georgia Tech ID. Once you're in across the top you'll see a list of your active courses. We'll talk about how to modify this list in a bit. If there are too many you can find the rest here under my active sites. So let's start off by talking about some of the settings available in T-square. >From the home screen of T-Square, start by clicking preferences. The home screen here will let you modify your active classes. To remove a class from your active sites list select the class then click on the right arrow. To show a class, select the class and click the left arrow to add it back to your active sites. So let me go ahead and hide the classes that I'm not currently in. Then I'm going to click update preferences. Then once I refresh the page, I will only see those two courses at the top of the page. So again, this won't remove your access to the classes altogether. This just toggles which classes appear above. You can always access any class you've already taken by clicking membership up here. As you can see, here are all the classes that I have taken at Georgia Tech. Generally in the OMS program, you probably won't take enough classes to really need to worry about hiding inactive classes. But if you've done other degrees in the past at Georgia Tech, you might need to hide some of these. My box is 82 classes, so I definitely need to hide some. So once you start the program, you might receive more notifications than what you would like to see. Therefore, in order to tweak this, you can go to the notifications tab at the top. Here, you can play with some of these features and opt in to receive only the messages that you would like to receive. So in my case, I only want to be updated about new resources once per day. So I would click here. And then I would update preferences here. The most important one though, is the ability to change your time zone. This isn't a big deal to on-campus students, but online, it's crucial. We encourage most of our classes to make their assignments due at 12:00 AM UTC-12 time zone. But it's hard to translate that to your local time. So even though I'm in Eastern time zone, let's pretend I'm in Pacific. I would then select Pacific and then I would update preferences. So now that I've switched over to Pacific time zone, all of my assignments show that they are due at 5 AM Pacific time. We'll talk more about the assignment screen in a bit. That covers the settings that affect T-Square as a whole. Any change you make here will affect every class you're currently in in T-Square. So now let's take a look at some of the tools that apply to only individual classes. So to access a particular class, click its tab at the top. So let's click the GT1001 class that we've created for this orientation. For most classes, when you access the class you'll see a screen like this. On the left, you'll see a sidebar of links. In the middle, you will see some basic information about the course, such as the syllabus, start dates, and important links. On the right side, you will see the recent course announcements. You will use all of these tools throughout the course. Later, we will talk about Piazza, Udacity, and Peer Feedback, but for right now, let's talk about Assignments, Gradebook, Tests & Quizzes, and Resources. Let's start out by talking about assignments. On the left you will generally see the assignments tab. This will bring you to a list of assignments along with their due dates throughout the course. If you've changed a time zone in your preferences now you will see the due dates in your time zone. To submit an individual assignment, click on the assignment name. Once you're in the assignment, you'll see the due dates here, the instructions here. And then to submit the assignment, you will type your answer here or upload your submission here. Then you will click Submit here. So let me type in a quick response. Now I will click Submit. You should then receive a Confirmation Screen saying that your assignment has been successfully submitted. Now if I go back to the Assignments List, it will confirm that I have submitted the assignment. Now let's talk about how I will receive my grade for the assignment. There may be two ways to receive your grades. On the Assignments page, once you have received your grade, this column will be updated to say, Returned. Click the assignment name and you will see your grade at the top. Then scroll down to see your feedback. Depending on the assignment, you might receive some attachments associated with your feedback. Some classes might have the Gradebook function, where you will see all of your grades for the class. Not every class uses this Gradebook. Different classes return grades in different ways. Make sure to pay attention, specifically, to how your class will return grades to you. Some classes will make use of the tests and quizzes function. When a test is open, you'll see them here. Most tests have a time limit. And you'll see the limit here. You must complete the test by the time limit or else it will auto submit. Make sure to save your answers. So, let's go through this final exam real quick. You'll receive some instructions on this page, and be reminded of the time limit here. So now you will click Begin Assessment to get started. Now we will go through the questions one by one. Some of them might be fill in the blank, like this one. Some of them might be essay questions, like this one. Some might be multiple choice, like this one. Now when you're done with the exam click submit for grading. Click this one more time to confirm that you are done. You will then receive a confirmation screen. Once the exam has been graded you will see feedback here. Here you will see how you did. You may also now see your grade in the gradebook. Some of our tests are proctored, and we'll talk about the proctoring services that we use a bit later. We may also run surveys through this interface. Surveys are just like tests, but they're ungraded and typically untimed, although usually they'll only be open for a certain window. Generally, you should receive announcements from your class when tests and surveys are open, so you shouldn't need to check this page very often. Just come back whenever a survey or a test is announced. Finally, there's a Resources page. Resources are a simple folder structure for documents, etc. In this class, for example, we see an image, a PDF file, and transcripts. Different classes will use the resources folder differently. You'll often see course readings here, past exams here, other assignment files here, solutions here, etc. Some classes will even have you upload files to the Resources folder to share with your classmates. Most of your classes will provide links to two other tools you'll use frequently, Piazza and Udacity. Most of your time in the OMS program will be spent on using these three tools, T-Square, Udacity, and Piazza. We also recommend bookmarking these three tools individually. That just about covers everything there is to know about T-Square. Note that T-Square can experience some pretty major slow-downs, especially around submission time for some of your projects. So try to submit things a little early, just to be safe. Check with your classes' TAs to see if they've built in a little lag time into the deadline to allow for T-Square's slowness or glitches. We'll close with one little trick as well. You might notice that T-Square generally doesn't let you run multiple tabs of T-Square in one browser, they interfere with each other. However, if you open up a new window and load T-Square there, you can run two instances of it to view multiple assignments side by side or use multiple tools at the same time. So that can be a major help. So now that we've covered T-Square, let's move on to talking about the other site you'll use most often, Udacity [MUSIC] As we get to the end of this orientation, we want to stop for a second and share some tips for success with you. Some of these come from instructors in the program. Some come from other students in the program. But generally, we want to make sure we give you everything you need to succeed in this program. And part of that is letting you know what has helped other students succeed in the past as well. So we're going to share with you some of their ideas. The first thing we want to share with you is the number one piece of feedback we get from new students in the program. And that's that these classes can be really, really difficult. And many students come to this program from other online experiences like MOOCs or other online programs. And they're surprised to see how difficult these classes can be. But these are real Georgia Tech classes taught by the same instructors, graded by the same graders, and using the same tests and assessments as any class on campus. So they can be very difficult. So towards that end, one thing we recommend is that your first semester in the program, take only one class. That first semester, you're going to be learning about being in the program as you are learning the material of that class. So take only one class in order to set yourself up for success. One thing we really recommend in this program is to try to get into a routine. When you do on campus classes, you kind of have the routine provided for you, you go to class a certain number of times a week at a certain time. And that kind of gives you your routine for that course. Online though, we don't have that. So we really recommend that you set aside a certain time each week to watch the lectures, a certain time each week to work on the assignments. And definitely set aside some time each week to interact on Piazza with your TAs, instructors and classmates. That'll make sure you don't get into a situation where halfway into the semester you find out, I'm way behind on this class and I'm never going to catch up. One of the unique opportunities you have in this program is the opportunity to prepare for your courses in advance. Most of our classes make all the materials available at udacity.com. So if you're not sure if you're ready for a course, you can preview it there and decide if you're actually ready to take that course. They also provide readiness questions on the program website. You can use those to evaluate whether or not you're ready for the course, and what you need to brush up on in order to get ready for the course. Some classes involve things like C programming or linear algebra that you may not have seen in several years. So you want to give yourself a chance to refresh yourself on those things before you take those courses. Use the materials available to you to decide what classes you're ready to take and what you need to do to get ready for those classes. It's possible to get through this program with relatively little interaction with your classmates. Most classes don't require forum participation, few classes have group projects, and you don't have to get involved with the social communities. But we really recommend you do these things. One of the biggest assets of this program is the students themselves. You'll be in classes with scientists, executives, influential people from around the world, and they'll have unique insights and perspectives into your work. So while you're in this program, take advantage of this resource. Interact on the forums, interact on the social communities, get to know your classmates..h And take advantage of access to this very unique student body. [MUSIC] We hope you've enjoyed learning a little bit about what the OMSCS is going to be like. More importantly, we hope we've helped set you up for success in the program. If you'd like to give us any feedback on this orientation, there's a survey link provided in the notes below. We'd love to hear if there are things you like to see included in a future version of this orientation, or if there are things we could have explained better. Congratulations on your acceptance in this program. Welcome to Georgia Tech. Now get ready for a hell of a ride on your way to becoming a hell of an engineer. [MUSIC] [MUSIC] As you probably know, the Georgia Tech OMS CS program is developed in partnership with Udacity. All the course lecture materials as well as interactive exercises and some projects are available through Udacity.com. Some classes put additional information like syllabi, calendars, and assignment information on Udacity.com too. In many ways, Udacity is like the textbook for the courses you're taking. So, we'll talk about access and course materials through Udacity. The kinds of material you should expect to find, and some of the interactive elements provided through Udacity. To access Udacity, we first need to log into Udacity using our Georgia Tech credentials. So first go to udacity.com and then click to sign in at the top. Since we're Georgia Tech students, we'll click Sign in with Georgia Tech at the bottom. Here you'll enter your Georgia Tech ID and your password. Once you log in, you'll see a My Courses tab at the top. If you click the drop-down, you'll see a list of classes that you currently have access to. Note that udacity.com changes with some regularity, so make sure to check out the instructor notes below this video for any information on whether or not anything you've seen in this video has changed. But now we'll move onto talking about the main pages of the classes you'll take. To access a course, we'll click on one from this menu. I'll use Computer Networking as an example. Once you're into a course, you'll see a number of pages over here on the left. The Dashboard lists all lessons in the course. A green check mark will appear when you have completed all of the videos and quizzes in a lesson. The orange playback icon will appear next to the lesson you most recently viewed. Gray circles will appear next to any lesson you have started but have not completed. Or you can download the entire course's videos and transcripts over on the right. For some courses, you'll find a materials section over on the left. Here you may find some course information. Different courses use these pages differently. Some courses list their information on T-Square, others will list it on Udacity. Make sure to pay attention to where the information for the course you're taking is listed. But for the vast majority of time you're working with Udacity.com, you'll be in the classroom. So let's take a look at that next. To access the classroom videos, you'll click Classroom. Within a given course, you'll see a few things. Up here, you'll see a drop down box with a list of lessons. Typically, your class will give you a separate calendar telling you when you should watch each lesson. Click on any lesson to jump straight to that lesson. These bars across the top will indicate your progress through the lesson. The orange indicates what video you're on now, the blue are those that you have already watched. The grey are those you have yet to watch and the dots here indicate exercises. So we'll talk about those next. Real quick though, note also that below videos you may find some instructor notes as well as additional links to the downloadables for that video. There are also a couple options you can turn on when viewing the videos on Udacity. You can click the CC button to turn the closed captions on and off, and if you click the gear, you can adjust the speed of the video. There are two types of exercises on Udacity. The first we'll call form exercises. Form exercises involve some combination of traditional form elements, such as short answer boxes and multiple choice questions. Here's an example. This is a simple multiple choice exercise from knowledge base AI. Here, I'll select one of the radio buttons at the bottom. Then I'll click submit. I'll see some feedback on the right and then I can try again. After I've successfully completed an exercise, the dot at the top will change color. Exercises can get pretty complicated. For example, here's one from knowledge based AI that involves filling out several blanks. Note that at first, your only options are to look at the instructions again, by clicking view instructions, or to submit an answer. To move forward, you must attempt the exercise at least once. However, after attempting it you may choose to view the answer if you're having trouble with the exercise. Note that most of our courses don't assign credit for exercise completion. They're really just here for your benefit. But some of the courses do. Make sure to read your course's syllabus carefully to find out if you'll be graded on your participation in these exercises. The other kind of exercise in our courses is programming exercises. Here's a simple programming exercise from AI for Robotics. In these exercises you'll have an IDE available right in the web browser. You'll be given some initial code to work from like we see here. So after you've worked on the exercise you can click Test Run at the bottom. The output of your code will be displayed below. Then, when you're satisfied with your code, you can click Submit on the right and you will see your evaluation on the right. We have some courses that actually use this code window for project submission. You'll develop the project on your local machine, but you can use this window to test and make sure that your code actually runs, and maybe see some preliminary output. For those courses, when the TAs go to grade your project, they'll pull the last thing that you submitted before the due date. So make sure your last submission is the one you want to turn in. But you don't need to worry about that too much right now. That will be explained in more detail when you get to those actual classes. Now over here on the right, you've probably noticed that every screen suggests that you take up this conversation on Piazza. Piazza is the forum tool that we use right now in the OMS program, so let's talk about that next. [MUSIC] Hi, and welcome to Georgia Tech. My name is David Joyner, and I'm an instructor and course developer in the OMSCS program. My name is Eboni Bell, and I'm a current student in the program. We're here in the Klaus Advanced Computing Building, the headquarters for the College of Computing and its masters program. As you start your journey as a Georgia Tech masters student in the online program, we want to give you all the information you'll need to succeed. Over the next several lessons, we'll go over some of the basic facts that you should know about the program itself. We'll also go over many of the tools that will comprise the majority of the time you spend in the OMSCS program. We'll also give you some tips for success that we've gathered over the past several semesters from students and instructors alike. [MUSIC] The Georgia Tech OMSCS program launched in January of 2014, with the ultimate goal of creating a more accessible master's program. We wanted everyone who wants and deserves a Georgia Tech master's in CS to be able to get one. We wanted to tear down the obstacles that usually prevent people from participating in a program like this one. And this program has really allowed us to do so. We've removed the obstacle of geography. We have students from every state and from 77 different countries. We've removed the obstacle of availability. Most of our students are completely the program while still holding down full time jobs and managing their families and other obligations. We've removed the obstacle of capacity, our online classes can hold far more students than we could ever handle in person. And perhaps most importantly, we've greatly reduced the obstacle of cost. This program costs a fraction of the amount of traditional on-campus program. I actually live here in Atlanta, and I work just a couple of blocks from campus. I participate in the online program because of all of these benefits, it's much more affordable than a traditional on-campus program and more importantly, I don't have to take two years off of work to get a master's here. We've made enormous efforts to make this program accessible because we wanted to reach a broader audience of students. But in making the program accessible, something interesting has happened. Because you can complete the program, without taking time off work, it's attracted executives, scientists, people in incredibly prominent positions in research and industry from around the world. Because the cost of the program is so low, it's attracted people that don't view the program simply as a career investment. It attracts people who are here solely because they love to learn. And because we can take a much larger number of students, the program has attracted an incredibly diverse population of people. >From career programmers to people working in completely different domains, who think that Java is coffee from Indonesia and python is a snake in Africa. The accessibility of this program has allowed it to attract an incredible population of students. And it's the student ownership and investment into the program that has truly made it something special. I love my job because I get to work with some of the most engaged, curious, and passionate students I've ever met. And they'll be your classmates. In the OMSCS program, you'll quite likely learn more from each other than you ever will from us. And that's what makes this program truly special. [MUSIC] A common question that is raised is whether or not an online program can actually be comparable to an in-person program. Because there's no difference between the online and on-campus diplomas, we go to great lengths to ensure their quality. Most classes in the program are developed by the same instructors that teach the classes on campus. These are active professors that are world famous in their fields. And they're taking time to develop these courses separate from their usual teaching responsibilities. Many of our courses use the exact same assessments and graders as the on campus courses. We know that courses are comparable because both groups of students are being evaluated on the same assignments by the same Individuals. We use state of the art technology to ensure the integrity of the program. We know that you're here because a degree from Georgia Tech really means something. And we want to keep it that way. We use cutting edge tools to evaluate submissions for plagiarism, to detect cheating during exams and to ensure the identities of participants. Every semester we're able to detect and remove people engaging in unfair copying of code or written work. So you can rest assured that everyone receiving a Georgia Tech Masters Degree, whether online or on campus has truly earned it. In every way, we're working hard to make sure that a degree from Georgia Tech is a valuable credential, regardless of whether it's earned online or on campus. [MUSIC] When you complete this program in person, you spend most of your time in classrooms. Online, we use a variety of tools to mimic the classroom experience. We'll spend the bulk of this orientation covering the tools that you'll use during your time in the Master's program. We'll talk about tools you'll use for registering for classes. We'll talking about the learning management system you'll use for submitting assignments, retrieving syllabi, and accessing class resources. We'll talk about tools you'll use to interact with your classmates, professors and teaching assistants. We'll talk about tools you'll use to access lecture materials and course notes. And we'll talk about tools you'll use to attend office hours, retrieve grades, take exams and manage your Georgia Tech account. We know that all this information may be overwhelming right now. You don't need to worry about completely understanding every tool we talk about today. We have just two goals. One, to give you some initial experience with the tools you'll be using. And two, to make you aware of the options and resources available to you. [MUSIC] Because this orientation is prerecorded for use semester after semester, we're not going to spend much time talking about things that will change fairly often. For example, we won't talk about specializations, course offerings, and curricula because those all change semester to semester, especially as the program is growing. Instead, there are several websites that contain up-to-date information on the program, and we've provided links to those in the instructor notes below. We recommend checking out the OMSCS program website for information on graduation requirements and course offerings. You can check out the registrar's website for calendars, payment information, and other general Georgia Tech policies. And you should make sure to check your email often, for messages from your advisors and your professors. [MUSIC] Finally, we want to improve this orientation for future students as well. In the instructor notes below, you'll find a link to a survey where you can give us feedback on the orientation. Are there any tools that we didn't cover? Any tips you'd like to share? Any additional information you'd like to see in this orientation? Let us know in that survey. We'll duplicate the link at the end of every lesson. But for now, welcome to Georgia Tech. Let's get started. [MUSIC]