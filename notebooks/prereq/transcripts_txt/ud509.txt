You've done some idea validation, and now you know about designing an awesome user experience. We're going to show you how to use design sprints to put the product in front of your users. The founder of LinkedIn, Reid Hoffman, once said, if you're not embarrassed by the first version of your product, you launched too late. We want you to take the same advice when it comes to putting a product in front of your users. It can be nerve-wracking to test your product, but it's also super important to learn quickly and keep iterating on your product. Let's get started by hearing how other start-ups have done this. Hi, I'm here with Kaushik, who's one of the co-founders of Locket. And Kaushik, I'd like to talk to you a little bit about how you iterate quickly and how do you do user testing to make sure that you have a good product? Oh sure. So, once we come up with the product feature or something which we want to build and try testing it out on our user base. We quickly list out all the action items. And then, we talk to all the people who are very close to us, and see what their feedback is. And then, we iteratively build on top of it. We start off from a very, very small feature addition to current app, or we build a very small MVP. And then, we test the technology from users, get their feedback, try to track their metrics and see if it is going in the positive direction or no. If it is going in the positive direction, then we take it up, improve it, or we remove all the features which are not doing good. Mm-hm. And that way we iterate a couple of times to get to a place where we can release an test it out. Yeah, and you talked a little bit about how you'll contact maybe friends or people in your network. Are there any other specific users that you'll make sure to go after to make sure you're hitting different demographics, or maybe particular people who have certain phones, or? Well, it totally depends on the kind of application. For example, if you are releasing an application for students then we mainly look at the kind of phones they are using. And the main, like what kind of apps they are already using. And based on their, interest for the UI, as well as based on their utilization ways. We come up with the features and organize it in such a way that it will appeal to them. And we also make sure that the UI is very animated and very focused to that particular demographic. For example, if you are targeting mid 40s or something, we don't really need to make it really colorful and very animated. But if we are talking to someone like 14 or 15, then we want to keep it really engaging and really interesting. So, based on all these features, we come up with a list of things. Which we try to get people into the workplace and see how they use it or how they respond to that. And from there on, build on top of it. We're here with Nadya again, and we're going to talk about the stages of design sprint. But let's first talk about what is a design sprint? Well that's a great question. Design sprints started at Google about five years ago, and since then have become a powerful movement that helps product teams at Google, our developers and companies in the industry, solve design problems quickly. And what are the stages of a design sprint? So a design sprint always starts in the planning stage. That's potentially the most important one. The design sprint is run by a person called a sprint master. We found that sprints that have a designated person who's in charge of the event, and in charge of the team lead to much higher satisfaction and to be much higher deliverables. So we always want to have a point person who is organizing. This could be the PM on your team, or this could be your CEO, this could be the designer, or it could be you, regardless of whatever role you play. The role of the sprint master is first to identify the challenge that the team should be solving. If that is not clear, it's very hard for anyone to make progress. Second, the role of the sprint master is to assemble the team. We want to invite all the right talent, and that's the most important part. If you don't have a team, the sprint doesn't really happen. One of the benefits of the sprints is that you don't always have all the talent that you want, but you can get them. Because the sprints are short, you can invite people who are not from your team. So for example, if you and I are running a sprint, and we didn't have a designer or researcher, we could ask one of our colleagues who is in another team or another company, to join us for two to five days. No one wakes up in the morning hoping to have a boring day. And when you invite them on a sprint, they usually say yes. And they have fun, and they help you solve something quickly, and really benefit your team. And what are the next stages after planning? Okay, so the design sprint framework is based on the understanding of design thinking. So anyone who is a designer might find these things familiar and very comfortable to practice. The good news is that if you've never practiced design, this is very, very easy to learn. Generally, there's six problem-solving stages of design sprints. The first is designing the challenge. You have to do that. Once you have done with that, you start six problem-solving ways of attacking this challenge. The first is to understand. Understanding a challenge is very, very important. There's a great quote that I love that says, first seek to understand, then to be understood. Many teams fail because they start attacking their products based on the solutions that they have in their heads. And they do not understand the customer, the requirements and technology that they have. So what you recommend in sprint is to start with lightning talks. You quickly want to hear from everybody in the team that can represent a particular perspective, and generally the most useful are three. First, you want to hear about the business goals. We believe that good design is good business. And we always invite the stakeholders of the business to tell us about their objectives. In a startup, that may be the CEO of the company, or it could be someone who's really in charge of revenue. Right. It's useful to have them there. They can bring valuable perspective so that the designers are not running away from the goals of the company. Second, we want to hear from the engineers. Designers and engineers go together like peanut butter and jelly. You need them in the room, because, if the designers create something that the engineers cannot deliver, it sort of doesn't matter. So the engineers are there to tell us what is feasible right now, what is the code able to achieve? And what are they able to do, sort of, within the parameters of this print? So this is a business stakeholder's technology, what's missing? Well, you can create a startup, but you cannot create an audience if you don't have a perspective of the user. So what's really important is to bring a perspective that tells the sort of potential users of the product that we have. A lot of companies are not sure of who their perspective user is, so it's useful to invite the first kind of ideas that you have about who might this be impacting. And if you're not sure, you can invite different groups. For example, if you're creating a news app, you can invite people who are news reader and read the New York Times on paper, and people who love reading the newspapers on their iPad. And then people who don't read the news at all. And by learning what each group needs, you're able to tackle a quite broad set of users. By hearing their opinions in the beginning, reviewing user research that's relevant, and talking to users directly, the sprint becomes so much more well informed. And the chances that they'll miss something are so much lower. Very cool. So we talked about understanding, and we talked about planning before that. What is the next stage? That's a great question. The design sprint in the series of intellectual motions that allows us to open their minds and then focus again. We believe that we shouldn't just jump through solution we should learn as much as possible and then focusing on the best choices and through that we end up with better results. After the distant phase, which opens everybody's mind, we have another phase, which is about definition. That is the phase that helps the team understand what is the strategy they want to pursue. So, at this stage, we tend to look at the user journey that we want to take the user on, so, for example, if we're creating an onboarding flow, this may look at the major steps along the way of someone signing up for a new service. Or, if you're creating a new product, this may take you from all the stages that are key to someone learning about your product, discovering it, the first time they use it, the first time they return, and what we wish to everyone is that users become their master powerful evangelizers, where they're coming over and over to the product, and they're really enjoying using Based on the last two examples of redesigning custom made in Yelp, which of the following activities do you think are most common in design sprints? Check any of these activities that you think apply. The sprint is something that you need to design and it's the job of the sprint master or you in this case, to plan the activities that you're going to do before, during and after the sprint. Let me give you an idea of what you can expect in each of these periods. First, you should know that you're going to do a lot of work up front. In general, you want to spend about one day of planning for each day of the design sprint. Now this will feel like a lot of work and it should be. The good news is that good planning will help you run a smooth design sprint and let you solve your design challenge quickly. Before the design sprint, you'll want to write a design brief. This will let you define your design challenge and then it will also let you set a timeline for when you want to launch or when you want this deliverable, whatever it is in the design sprint to be reviewed. Before the sprint, you'll also want to invite team members or talent to the sprint. Nadia will talk more about this later and one of the key parts of a design sprint is user testing. You need to schedule when users will take a look at whatever you design from the design sprint. The user testing will keep you accountable, validate product ideas and push you and perhaps your team toward showing users something by the end of the design sprint. Now this might now make a whole lot of sense right now, but I guarantee you it will by the end of this lesson. Finally, before the sprint, you'll also want to schedule any lightning talks more on this later and you want to prep the slide deck that you'll use in the sprint and leave room for special materials. In the next video, I'll cover the details of a design brief and how you can appropriately scope your design challenge. Here are the tasks that you'll need to do during a design sprint. If you're working alone, you won't need to do daily check ins and daily summaries, instead you should keep a master list of all the tasks you need to get done, so that way you can stay organized. You should also write reflections after each day, so you can look back on them and get better at planning and designing the sprints alone or with a team. One of the hardest parts about conducting a design sprint is facilitating conversation and resolving conflict among your teammates should they arise. Now you won't really need to worry about this if you're working alone, but you will need to be the point person or appoint someone else to resolve any conflicts when they do arise. After the design sprint, you should take the lead to summarize the results and plan next steps. If you worked with a team, you'll want to send out a short survey to ask your teammates about how the design sprint went and what could go better next time. If you're working solo, then you should just reflect on what happened and how you might improve in the future. And hopefully, you're already working towards planning your next design sprint. All of this should feel like a lot of work and well, it is. Thankfully, many other companies have done design sprints before and there's tons of great resources and documentation and short articles about how to conduct design sprints. Global Ventures, for example, has put together this awesome list of resources for you. They also have a great collection, a library of resources that has short articles that will walk you through all of the steps needed to schedule and conduct user research interviews. These are also the your usability testing interviews that you'll do at the end of a design sprint. All of these resources will be included in a reading node at the end of this lesson. They also have a great library of additional resources. In this library, you'll find a collection of short articles that will walk you through all the steps needed to schedule and conduct user research and usability interviews, The links to these articles will be provided in a reading node at the end of this lesson. As I mentioned, you will need to define the design challenge before the design sprint. To help you decide on the design challenge, here's some things that you can do. First, you should interview key stakeholders. Stakeholders can be investors, designers, or engineers. They can also be someone like the user, or anyone else related to the product. Second, you should identify or review any of the use cases for the product. Next, you should review all relevant user research. And finally, you should review any current designs that you have on the product. If you're planning your first design sprint, it's likely that you will not have any current designs. In that case, you should focus on these first three tasks when going about the design sprint. At Udacity, we recently planned two design sprints. The first design challenge involved redesigning the entire user journey through a nanodegree from the time the user hears about a nanodegree, the time that that user graduates and advances their career or lands a new job. A second design sprint focused on one particular part of our user journey. We started to think about how to redesign student support through forms, code reviews, and other methods. You'll need to plan a specific design challenge like these for your own product, and it's likely that it will be for the main user journey, navigation, and key tasks that users will perform. The design challenge statement is what you need to actually write, and it creates a single focus for what is the output of the design sprint. A good challenge statement should have a couple key qualities. First, it should be relevant to the highest priority work of the team, and it should be tied to a purpose or key result. It should also be concise and to the point, and hopefully inspiring for yourself. The design challenge statement should also include a target audience, or segments of that audience. And finally, for projects that are in progress, you'll want to include a launch time stated in terms of years or quarters. So, would you want to be launching in Q1, Q2, Q3, or Q4? Your design challenge statement will identify the tangible items that you want to have at the end of the design sprint. And at the least, it should answer one of two questions. What are you missing that you need critically? Or, what is the riskiest decision or hypothesis that you want to test with your users? You can use a gap analysis like this one to determine what the product is missing or what's one of the riskier decisions or hypotheses that you need to test. This checklist is linked in the instructor notes. Here's one example of a challenge statement. You might design a mobile app that helps a visitor plan and find the most relevant personalized and exciting activities to do in a city, keeping in mind that the visitor only has one day for their visit. The deliverables in this case would be to get wireframe sketches for ideas that would be implemented in Q3 of 2015. Your design challenge statement should be similar, and have components like the what of the deliverable, the time frame for when you need it by, and also a clear user with what they'll be doing in the application or the product. Now, the goal for your first sprint will likely to be to map out the basics of your new website or app, including some flows, pages, or screens, and the basic navigation. Now that you know about a challenge statement I'd like you to think about one for your own design sprint. What would you create and for what kind of users, and by when would you create it and in order to do what? Take a minute to think about this and then write your answer in the box below. Don't feel like you need to commit to this one design sprint challenge for your own design sprint. You could actually change this later in your final project. There are six stages or modes of a design sprint. And each of these stages solves an important part of the design process. The first phase is the understand phase. In this phase, you're trying to get clarity on the business goals, the problem you're solving for, technical feasibility, the market, and user needs. You've actually already been working on some of this throughout the first two lessons of the course. And there are other activities that you can do, which I'll cover later. The second stage is the define stage. In this stage, you might define the goal for the product or certain features. This might include the positioning, a user journey, or metrics related to the product or those certain features. We'll cover more about metrics in lesson 4. Now, this stage is similar to what Richard Fulcher was talking about when he mentioned tasks that are related to a user's goals. For example, a user may search for a particular grocery item in our shopping app, which would be then added to the cart for purchase. The third stage is the diverge stage. In this stage, you want to create as many solutions as you can to the original design challenge. And this is the stage where you really get to unleash your creativity. It's the fun part. The fourth stage is the decide stage, and in this stage, you really just want to deliberate about the ideas that you came up with in the previous diverge stage, refine those, and then choose the best one or some combination of the ideas so that way you get a best possible product. The fifth stage is the prototyping stage. In this stage, you want to actually create and build the wireframes, the mockups, or the prototypes that you'll actually test with real users. These are the deliverables of the design sprint. And finally, the last stage is the validation stage. In this stage, you really want to test your products with real users. You're testing your wireframes, your mockups, or your prototypes, to determine whether or not the hypotheses, or your risky assumptions are true. You're trying to figure out whether or not you have the right product, and whether or not it's usable. So there you have it, the six stages of a design sprint. Understand, define, diverge, decide, prototype, and validate. Throughout this lesson, Amir will interview a design sprint master at Google and talk more about each of these stages. I'll follow those videos by describing activities that you can do with each of these stages. As you watch the videos, think about which activities might be helpful for your specific design challenge. First, you want to understand the business goals. If you're not making money, if you're not responding to where the business needs to grow and to the culture that the business is promoting, then the solution might be the wrong one. Second, you want to understand engineering. The technologies, which makes the ideas come to life. So without understanding where the technology's at and what the team is able to deliver, it kind of doesn't matter. That's it. So we covered the business perspective and then we covered the technology. What's missing? What do you think is the third perspective? The users? That's right. If there's something that's important in design solution, it is who it is for. The designers and the whole team need to understand who are the potential users and what are their needs? When you circle problem in this manner and you look at it from all perspectives, business, technology, design, you're creating a more holistic approach, so that the solutions that come have wisdom to them. That they're not rushed, that they're better targeted. And what would you say is the most important thing in this stage? I think in this stage, it's important to hear different perspectives. If you are over focusing on one and not the other, you might have a solution that's lopsided. So in sprint, we try to be balanced in the beginning and hear from everyone who'll be involved in making the product or who'll be involved in approving it. If you're in a large company, this may be the director of the product and the director of engineering. They represent the business and the technology. Similarly, the user researchers or the marketing and sales teams. Now, if you're in a startup, you might not have a person representing every single perspective. You could be the single person who represents everything. You could be the three things, right? Right. In a startup, you often are wearing all these different hats. So, it's useful to consider and pause. Even if you're one person or even if you are small team that doesn't have diversified roles yet, what are the perspectives on this problem as looking in it from a business perspective, there's one set of issues that they're important. Those are about the metrics, the goals, the revenue. Looking in from a technology perspective, there's another set of problems. That is generally, what is the code able to do? What are the features that are being developed? What's available to outsource or what APIs are available to bring in? And then from a design perspective, it's about what are the user needs that you want to address? When you look at it from these three perspectives, even if you have a small team, you're helping people stretch their minds. They're really opening up, so that they can consider and not miss out on a good idea. Right and what could go wrong in this stage? Oh, that's a great question. Often, I see teams take a very long time in this stage. If the team doesn't know each other well, this may be a rare opportunity for them to start talking to each other and they're so excited to learn from each other that the stage can drag on and take two or three hours. The goal of the sprint is to understand, but then quickly move towards the other stages in which people are defining a strategy and starting to make things. So what could go wrong is the team can spend too long in this stage. So they could be circling around until they understand and never to get to an understanding. What could go wrong is they could be like really circling. Another thing that could go wrong, which is actually a chance for something to go right is that the challenge might be improperly defined. Sometimes people who are beginners in the art of being a sprint master, approach the challenge in a very specific way. And when they offer to the team, they learn that actually the team has a different need and there's something else that's more important to solve. That is a mistake that's easier to correct in the beginning of this program and not during this phase. But if a sprint leader finds themself confronted with a team that says, we should be solving something else, it is a great opportunity to seek to understand. Open your ears and help your team agree on what is the right thing to do, quickly. Very cool. So what I hear from you is that the basic of these stages to understand. To understand the business, to understand the technology and to understand your users. That's right. Here are a handful of methods that can help you during the understand stage. I'll give you a quick overview of each of these methods. The first is 360 degree lightning talks. As Nadia mentioned, 360 degree lightning talks are incredibly useful. The deliverable of the design sprint should meet the business goals, satisfy user needs and be possible with current or emerging technology. Here are the questions that should be addressed by anyone who gives these talks. For the business side, that person should be able to address what's profitable and sustainable for the business in the long run? And what are the current business needs? Anyone speaking to the user experience should be able to answer, what do people need? And what's delightful or useful to the user? And finally, someone should be able to speak knowledgeably to technical concerns. What's possible with today's technology? Or what features can be built now or over time? Lightning talks are meant to be a quick way to address those major concerns. Now of any of these activities that you do, you should be sure to do user interviews. You want to talk to users at the beginning of the design sprint and at the end of the design sprint, so you can validate your work. User interviews allow you to understand the goals and the motivations of users, you might also try exploring some of their emotions and how they feel about existing products or about particular features that you want to implement. If you have existing designs, you can definitely ask a user about them. If not, you could always ask a user about a competitor's design. The interview should follow a sort of arc like this. You want to get to know the interviewee at first, so make them feel comfortable and keep a conversational tone. You also want to be genuinely interested in the person, so you can ask them starter questions just to build rapport. Then you can plan your questions accordingly, so you can get out their own stories and the general moments in this diagram. Be sure to thank the user and wrap-up with any followup steps. If you don't have any current user research, then you should definitely consider going to visit actual users. This would be a field visit. A field visit or field study will let you observe how consumers use similar products or you can take note of the context in which users use that product or service. You can also ask questions about their behaviors, they're likes and interests and their pain points or problems. You might do usability testing with them, if you have current designs. Or you might competitor designs, if you don't have current ones. Or finally, you might gather feedback on early ideas, copy for your webpage or app and particular features that users may want. This would just be concept testing. A stakeholder map is another necessity that can help you think about all the players related to your business or your industry. For example, the stakeholder map for the SuperDuper shopping app would look like this. Notice that this map includes internal stakeholders, such as the user and external stakeholders, like the suppliers and specialists. You could imagine building up particular features from recommendations of a nutritionist or allergist. These specialists might play a role in recommending foods to particular users based on their dietary restrictions, their dietary goals or their cooking habits. This last activity is another great way to get perspective on the industry. You can check out competitor's apps or websites to get a sense for what they're doing. This can help you figure out what's happening in your current space or industry. And you can also analyze, how's your approach different from these others? Is it a subset of features or is it marketing efforts? You can also see particular UI elements or design elements and flows, that appeal to you and others that you might want to avoid. Whatever methods you choose, you should make sure that you summarize your findings from the activities. These findings should be on your mind and on the minds of anyone on your team, as you go into the next stage of the design sprint. So once you have a good understanding of the problem, you move to the define stage. Could you tell us a little bit about that? Yeah, I love the define stage. So we started not by rushing to solutions, but by understanding. Second, we move to something that would be absolutely amazing and favorite for everyone who likes analysis. The define stage is about finding a strategy and analyzing what is the best path to actually arrive at the solution. During this stage, all of the exercises that someone is familiar with around product strategy become very, very applicable. Let's list a few examples. The define stage can be greatly enhanced if people pause to describe the user journey that they're working to create for the user. A user journey is a storyboard that helps define the major pieces, step by step, of someone experiencing the product for the very first time when they don't know anything about it, towards the time when they become a masterful user and they're maybe even evangelizing it to their friends. So I actually need to write what the user name is and what do they do with the app? Well, that's a great question. You might not need to have a user name for the user journey. What you're trying to find is what is the most common path that someone will take. >From a perspective of not knowing anything, towards being able to use it over and over again. Now within that, there may be other stories. For example, if you're working on an app that's reviewing local restaurants, there may be one journey for people who are writing the reviews, and another journey for people who are reading the reviews. >From those two, the most common path would be someone hearing about your app. Hey, there's this great local app, this can be in a newspaper, this can be in a restaurant, and you need to plan for that, because if you don't plan for the discover moment, it's just not going to happen. So you look at it as how are people discovering my app? After that, it's about how are they starting to use it? Well, that may mean that they download it, and then afterwards, they're starting to search for restaurants, read about them, and then they get reminded after they've been somewhere potentially, that they need to write a review. So let's say the most common path. The user journey has many names in the industry. Because design is a relatively new discipline in technology, there have been many different ways to refer to that. Some people refer to the user journey as a storyboard. In fact, what we know from design history is that Disney was the first person to use storyboards. Disney had a team of artists and technologists who had to make the first animated movies before anyone knew how to make that. So in order to keep everybody on the same page, and not to waste money, he created the storyboard that said, moment after moment, what is happening to his characters. And that first storyboard, which was about the movie Snow White, helped organize his team, and set a precedent that teams continue to use today. So if you're using a storyboard, you have Disney to thank for that. And a quick follow-up on that, so how do I know that I have enough stories, that I've completed all the stories. So this is a great question. The user journey is the idea that there's one central story that is the most important. Another name for that is the Golden Path. That actually comes from Microsoft. In Microsoft, or so the story goes, the teams refer to the golden path as the experience that is absolutely key for the product to work, for the users to come and get what they want. The Golden Path is supported by red threads. These are the little stories that help make it possible, and there can be many, many little thread such as the user sign in, potentially the shopping experience. But if the Golden Path is your discovery process then that's what needs to be really easy, really key and all efforts in the company need to be focused there. So why is it important to be clear of one most important user journey? Well, we believe that it is important to prioritize, and if you don't know what your app is going to be most commonly used for, then it's really difficult to know how all the other things fall out. So, we recommend to always focus on one central user journey, and to make sure that it is easy and effortless for people to achieve that. It's important to plan for everything. We see a lot of startups fail because they have created a great product but they don't have any plan for how they're going to be discovered. In that way, they're building little islands in the ocean, and there's no line there that will ever take passengers there. This is why we remind people, plan the entire journey. Plan your product in all of the different stages, from the time when no one knows about it, towards the time when they're really masterful. Now that you've seen a bunch of activities for the define stage, I want you to practice breaking down an overall product experience into much simpler steps. Your task is to create a golden path for users to successfully use the shopping app. Now, keep in mind the golden path should only have the main or the essential steps that a user takes to find the real value that they came for the product in the first place. Supporting threads, such as editing orders or creating accounts, are secondary to the golden path. You can include those, but they're not really essential for the main tasks that the user would need to perform. And remember that you should be thinking in terms of stories rather than pages. This helps you prioritize the central or the key user journey. So go ahead and create a Golden Path for the Super Duper Shopping App. Keep in mind the previous personas, the first tweet, and the one page executive summary. You can see the Instructor Notes for these materials. Once you're ready, check this box to continue. So now that we've done the define stage, we're moving on to the diverge stage, right? The diverge stage is the next one. The diverge stage is a chance for everyone to be thinking with their own creativity and imagination, how should this problem be solved? You said solutions, so you mean more than one, right? Yeah, we're starting to think about solutions. Not just one. Everybody's thinking about many solutions. And then the team as a whole is thinking about whole list of solutions, and that makes the team powerful. Everyone has time individually to work on some solutions, and as they are ready with this, then they share it with the team, and suddenly, they're looking a whole dessert tray of options for what the product could be. It is so exciting. One thing that's really exciting about this stage is how quickly it can happen. We do an exercise that's familiar to some people from Gamestorming. It is called the Crazy 8's. Okay, how does that go? The Crazy 8's? You want to know? Well, here goes. The Crazy 8's gives everyone a little piece of paper. And they ask the team to sketch eight ideas in five minutes. Usually, the first reaction that people have when you ask them to sketch eight ideas in five minutes, is they think you're crazy. And that's why we call it the Crazy 8's. [LAUGH] Nice. [LAUGH] As soon as they answer this question, they look at the face of the leader, and when they see that the leader is actually serious, then they return to the writing and they start sketching. In five minutes, people are able to do five, six, seven, sometimes eight ideas. That allows them to warm up their mind, their creative muscles are starting to flex. It's kind of like a warmup for a workout. After that, we give the team another piece of paper and another five minutes and we say from the ideas that you already have can you give me one big sketch? Label it clearly and explain what are the pieces of this layout that you're creating. Some people might be intimidated by the sketching process. This is when we remind them that we're asking them to sketch simple things. A grid that's based of rectangles, syntax labels, some placeholders for a pictures and icons should be. With that reminder, most people are ready to re-imagine themselves as the creative child that they once were. One activity that helps people warm up in the diverge stage is the crazy eights. You give everyone a sheet of paper, and you ask them to fold it three times to create eight different rectangles, then, in each rectangle, you put one idea related to the product. Now, you only have five minutes to do this activity. So you go as quickly as possible, and you try and push yourself to put something in every single box. Now, this activity can be a little bit intimidating to people who aren't as designers. So here are a few tips for what you can do. First, it's a good idea to remind yourself and the team about common UI elements. Most UI components are very basic shapes, like rectangles and circles. And they can be drawn pretty easily. You might remind your team of some of those shapes, like list, and icons, and buttons, and titles. You might also just spend a few minutes looking at mobile patterns, so that way you can check out what others have done. You might also download free mobile or web UI kits. So that way you can go through some of those design components. Just be sure not to leave these resources up during an activity, because the focus should be on sketching ideas. All right, now it's your turn. Set a timer for five minutes and sketch eight ideas you have that are related to the Super Duper Shopping App. Now, keep in mind the activity that you did with the Golden Path. And remember that main user journey or that story that you created. Once you've completed this activity, check this box to continue. Dot voting or zen voting allows you and your team to zero in on the best ideas. This activity is actually a part of the decide stage, but it can follow the crazy 8s or any rapid sketching that you do. In zen voting, you lay out all the sketches on a table or you tape them to a wall. Then, you give everyone a limited number of sticker dots, usually two or three. And you have people silently pick the best ideas by placing their sticker dot on that sketch. It's important for the voting to be silent, so people can choose without being easily persuaded by the loudest person in the room. After voting, you and your team can discuss the best ideas. Take a minute to think about your sketches and the example sketch that was provided from the Crazy 8s. Which two ideas did you like the best? After you've made up your mind, check this box to continue. Another helpful activity is one big idea. This activity involves taking a few of the smaller ideas from the crazy 8s or the more popular ones that were voted on, and going into more detail about one unifying design for the product. All right, it's your turn again. Set a timer for five minutes and sketch out one the ideas from the crazy 8s in more detail. You can use one of the ideas that we provided or one from your own work. Share your sketch in the discussion forums, and then check this box when you're ready to continue. So now that we have multiple solutions, I guess it's time to come up to a decision, and to come up with one solution, right? That's right. So, the decide stage is important in helping filter down the ideas that were collected. The previous stage, which is about diverging, has made it so that everyone has created a lot of sketches, and they're starting to develop some passion and attachment to the things that they have. During the deside stage, we ask the team to put their ideas on the board so everyone can see them. At that point, we ask people to remain silent. We call this process Zen Voting. Just like in a zen spirit, you want to be quiet and consider things in a reflective manner. During this process, we ask people to review what the sketches are before anyone gets to bias them with their opinions. So, as they review the sketches that other people have created, they start thinking, what do they like about the other solution? And you're always curious. I made this. What did the others make? It's fun to see that. After everybody has voted, it is time to actually discuss things in person. So, something that's not natural to teams happened that's really valuable. People had individual, personal time to be creative. Then they have personal time to view results, and they have time to consider and cast their vote before anyone else could say, I think this is important. And so they are biased. So now that they have gone through that, they're ready to look at things as a community. As a community, the team reviews what are the ideas, what are the most popular ones and then quickly they get to see more clearly some things rise to the top and maybe others are less important. So there minds are changed based on what the community has decided. Research shows that this community-based voting can be more powerful than the decisions of a single expert. For example, if you have a horse race and exports betting on the horses, and if you have a crowdsourcing solution, and you're testing how a crowd making predictions on who will win. It is likely that the crowd might often be the experts over what you usually think, is that the expert will be more powerful. Crowdsourcing a decision makes the team decide faster and it helps the team often gather the wisdom of everyone who is involved. So what could go wrong in this stage? What could go wrong in this stage? Decisions are a crucial aspect of what teams do. In fact, the life of a team is made of all of the decisions that they make. So we cannot pretend this is an easy process for teams. Things can go wrong if one person is trying to overpower and put opinions over others. This happens all the time. This is why we have a leader of a sprint. The leader of the sprint is watching the entire group. They want to make sure that the introverts and the extroverts are heard, the designers and the engineers, the CEO and the intern. Everyone could have a great decision at this point. So at this stage we look at the solutions, we vote, and we make a call. That's right. So now that we have the dream solution, and we all decide it's best, we move to prototyping, right? That's right. Prototyping is a wonderful way to test your ideas. In fact, we want to make prototypes that are real enough to feel, so that we can test them with users, and that's all that's required. Prototyping can take many forms. The simplest is to do a paper prototype where you can quickly gather feedback. One level up from that is to work on digital designs that are mid fidelity or high fidelity. The higher the fidelity the easier it is to test and to get feedback from users because they're looking something that's a little bit more polished. A next level of prototyping is actually creating physical prototypes. When we work on something like Project Glass at Google or Project Moon, it's not about software always, it's about what does the physical device look like? So that's when it's useful to have materials that help you create a quick shape of a general idea. Other prioritizes we have made include video. In fact, if you try to explain the product to some one, creating a video is super, super useful. Yeah, Dropbox did that. That's right. Yeah. [LAUGH] The little how to videos that a lot of companies use to describe their services are really useful in the design phase. If you make it straight on, even if it's shot with a little mobile phone, and the users are the friends that you're working with. That can be sufficient to explain the idea to a user, or to an investor, and to test it. If you want the high quality prototype, you need to spend longer developing it. So I can actually code it. That's right. I think coding a prototype is a great idea, so some people are able to really sprint, and within two days, start to already call the prototype. And then you can have an interactive demo. Or some people take maybe four or five days, depending on how complex the solution is. So the duration of the prototyping phase is usually what determines the duration of the sprint. This is the key aspect in which actually the work is getting made. If you're someone who loves to code, who loves to design, this is the phase that you really get to shine. And if you're looking for a low fidelity prototype, a short sprint, a few hours might be sufficient. If you want something that's high fidelity, or requires a demo or a video, you're better advised to have a whole week of the team's time so you can make something beautiful. How do I know which to choose, if I choose a high fidelity or low fidelity? What is the best? Okay, so, if you're working on a new product, it's probably best to shoot for medium fidelity. That means that you're not looking at paper prototypes necessarily. You might have some early wire frames, and that you're starting to put some color on them. Or that you also use Keynote or a quick prototyping tool that your engineers know how to use in order to bring some life to the ideas. We believe in teams choosing their own prototyping tools. There's a lot that's available on the market, and the right ones are the ones your team loves to use. If you're wondering where to start, Sketch is a really great example. So is Adobe Suite, although it does take a little bit of time to learn. And then Keynote and Google Sites are also really useful in prototyping quickly. So now that we have a prototype, we're moving to the validation stage, right? That's right. The validation stage answers the hardest question in product design. The hardest question in product design is how do you know if your work is any good? Okay, that's an important question. [LAUGH] It's very important. How we answer this question has three different stages. At Google we use something that we call triple validation. Just like in the beginning we looked at a problem from the perspective of business, technology, and users, at the end we want to validate the solution from the same three touch points. The most important opinion, and the most important votes and validation, is that of the users. So the critical piece not to miss is the opportunity to test your prototype with your users. We recommend sprinters and the sprint lead recruit users from the very beginning of the sprint, so they know that, at the end, the users are coming. Right. And they have to prepare for it, and else, all the efforts that they have spent in prototyping could go to waste because they don't actually know if this is solving the needs the users have. So meeting the users at the beginning is useful to learn their needs, and meeting them at the end is crucial in order to test. This type of test is called usability test or Cognitive Walkthrough. It allows you to put the products or the early prototype in the hands of a user and watch them walkthrough all the different stages. What do they like? Where do they get stuck? Do they understand what the idea is about? And it's important that they have and they expressed earlier on. Do I need to explain to the user what he needs to do? What we like to do in this stage is kind of like it's based on one of the ideas of writing, show, don't tell. A great design prototype should be able to stand on its own without too much explaining. Generally we'd like to set up the user and say, imagine you're shopping for a new product, or imagine you're looking to write the review, and now tell me what you see, and now tell me what you're doing from here. So we ask the users questions, and ask them to imagine themselves solving a specific scenario, and we watch what they do. We ask them questions to clarify, but we're not trying to sell the product to them. One of the mistakes that people make in this stage is that they imagine this is a marketing pitch and they start explaining how awesome the product is, or why they love the idea. This is a useful approach if you're trying to recruit that specific person to buy your product and they might, just because they're trying to be nice. But this approach does not answer the critical question, is the product any good? Like you force someone in person to buy something is very different from creating something that's popular, and that works on its own. That people love. That's right [LAUGH]. And are users the only people I want to get in front of this prototype? Well, the user validation is one of three points in the rapid evaluation process. The other two points involve the business and the technology. It's really useful to test with the stakeholders of the team. Is it still meeting the business goals? Is it still answering the promises that you made to investors, or the goals that you have as a company? And if yes, fantastic, and if no, we need to go back to the drawing board. More often than not, teams are aligned with the business goals and the stakeholders are happy with the results. But if you skip the validation, they might not approve the design or block it at a later stage. So, having your quick check-in with the stakeholders, even if they didn't attend the entire sprint, can be very useful at this stage. Very cool. Another piece that's important here is doing a technical check. A design solution that's beautiful but no one can implement, it's only so valuable. So what we want to do is encourage teams to check in with a technical staff. Is this still going the right direction in terms of feasibility? And if this seems challenging, let's clarify it. What are the pieces here that seems like they're going to take the longest and how might we be able to point is designing a way that's not creating hurdles, and it's something that we can test and deliver quickly? Okay, so what I'm hearing is we need to do three validations, validate with users, validate with business stakeholders, and validate with technology people. Yeah, these validations can be rather quick. A user test can be 20 to 30 minutes and you can test with three or four or five different people. For most teams, you can even test with one person, it's already a success. The business validation can be a five to ten minute discussion, or longer if the issue is very problematic. Or the technical validation can be similarly short, five to ten minutes. We're doing this as a best practice. Sort of like covering a checklist to make sure that all the possible ways in which something can fail to deliver after this point are addressed. And there are also people vouching to the solution, which makes it easier to deliver afterwards. So what could go wrong in this stage? That's a great question. What could go wrong is that teams can be overly confident in their own solution and skip the user testing. That is a common pattern that we see with teams that are new to sprinting. They think, well, we can do the user testing later. It is true that the user test can be done separately from this print, but that is a miss. While the team is together and they're fresh in the space of all the prototyping, it is really valuable to right away get feedback. If you do the user test with your whole team present and right after the creation session, this gives the need to write any research documents and it keeps all the ideas fresh in their minds. That makes it that much more likely that the products and the problems will get addressed in the next phase. And what happens if they don't like the solution, if the users hate it? [LAUGH] Well, if the users hate solution it's a great opportunity to learn. We try to be humble with our designs. After all, we only spend two to five days working on them. We hope that the life of the company will be much longer than that, so those two to five days were valuable if you learn something. So if the users don't like something, it's a great time to seek to understand again. So we go back to the first way of thinking, which was let's understand. What is it that they don't like, is there something that could be solved better? Asking questions and probing deeper into the things that users don't like is great opportunity. The best time to learn if the users don't like something is right after you have created the prototype, into the five days. And not after you spend two years of your life telling everyone you love and maxing out your credit card [LAUGH] this is a great idea. So in this stage, we take the users, we let them play with the prototype, and we listen to them. That's right. In one sentence, how would you describe a design sprint? In sprints, you either win or you learn. You win when you get to solve your project quickly and you get to launch and have customers love your work and you learn if you achieve anything but that. When your customers don't like your project, you're learning about it quickly. And if there's problems with your solution that would prevent your team from being able to execute it or they don't serve the business cause, you get to learn within two to five days and that is saving time. So, what is the final advice you can give an entrepreneur that starts a design sprint? The first key benefit of a sprint is the opportunity for everyone to participate in the design and decision making process regardless of their background. A designer or researcher, someone who is a user experience expert will be able to come in as a leader, and they'll be able to create great prototypes or lead the user testing. An engineer, or a product manager, or someone who doesn't have a lot of design experience, will still be able to participate. Because they'll have tremendous ideas as experts, and they'll be able to contribute by learning what the users want. By allowing the whole team to be involved in the design process, and to make meaningful and fast decisions, this sprint aligns the team, and now they're a real community that has a common goal. The second benefit of a sprint is the ability to redefine your talent pool. Often, large companies and startups are lacking key resources that they need for the sprint. Because sprints are short, they're an opportunity to invite someone who's missing talent from your team. If you don't have a researcher, you can find and hire someone who's an esteemed colleague or an expert in research, and they can join you for two to five days. That makes it so your talent pool is much larger. And third, the sprints have the obvious advantage of speed, and speed is the ultimate advantage. Because you can either win or learn in a Design Sprint, your next steps are going to vary. Now, it's likely that you' receive feedback from users about how they used the product, and what they didn't like. In this case, you'll need to reconsider some user flows or you might need to make some small adjustments in the user interface, such as clarifying user actions or making particular buttons and links more prominent. If you received critical feedback about the value proposition or if users are not clear in what they can do with the product, then you should revisit the original idea. You might alter the original idea or validate that the product solves the user's problem. Entrepreneurs see these moments as learning opportunities. So don't feel like this type of moment is a setback. If you receive mostly positive feedback, then you need to monitor metrics and continue to improve your product. As you get more feedback on the product, you can add more features and fine-tune the user experience. You'll see examples of this and learn about metrics in the next lesson. Hi, and welcome to the course. This course will be the first of series' of courses where you will learn to build great products. We thought a lot about whether entrepreneurship can be taught. And there are many courses and reference materials out there. But we wondered whether that material, or series of courses could really transform someone into an entrepreneur. Someone that is an unconventional hacker, a risk taker, and a jack of all trades. Successful entrepreneurship is a lot more than the inner workings of a company, or the character of the founders. It involves a number of external factors which make it extremely difficult to have a single formula for success. Every moment in history will only happen once. There would be only one Airbnb. There wouldn't be any other Google. Fortunately, there are plenty of other problems left for you to solve. Yeah, and this course is designed to teach you some practices and processes that Silicon Valley companies have developed over the past few years on how to create beautiful and meaningful products. We hope you can use them as our framework to build a business of your own. Because start ups are risky and costly business, it is always wise to validate early on, build only what you need, and not more. And iterate as fast as you can. Throughout this course we'll talk to several start-ups who have done just that. Let's hear from them now. Hi, I'm here with Pete Koomen, who's a cofounder of Optimizely. Pete, could you tell me a little bit about what Optimizely does? Yeah, we make it easy for our customers to optimize and personalize the experience they give their customers on their web site or mobile applications. Fantastic, and what's one of your favorite memories from early on at Optimizely? There are a lot. I think probably the one I'm most proud of is when we helped the Clinton Bush Haiti campaign raise a lot of money for earthquake victims in 2010. So Dan, my co-founder, and I were coming off the back of two startup failures, and we had just started working on Optimizely, and we were building an easier way to run A/B tests on your website. And a few weeks into the project, we got a call from somebody on a newly set-up organization, the Clinton Bush Haiti Fund that was created to try and raise money for the victims of this horrible earthquake in Haiti. And they had one beleaguered IT guy I think who built this website and was struggling to keep it up. And they were getting hundreds of thousands of visitors every day. And they called us because they had worked with Dan on the Obama campaign in 2008 and they wanted to improve the website. They wanted to earn more money for these earthquake victims from the website. And so over the course of several days, we barely slept at all, we built the beginnings of our platform and then we ran a bunch of A/B tests on their website. What I mean by that is that we took a look at their website, and came up with hypotheses of how could we make this better. And maybe it's adding an image of earthquake victims next to the credit card form, or changing the layout, or making the text more readable. And after a whole bunch of these experiments, we were able to measure that this particular change actually improved the conversion rate. This one harmed it. This one improved it. And we were able to actually raise their dollars per eyeball, essentially, by 10%. And so we actually helped them raise an extra million dollars for the victims of the earthquake. That's incredible. HI, everyone, I'm here with Yunha, who's a founder of Locket. And I'll also be speaking to her co-founder Kashik later in the course. Yunha, can you tell me a little bit about Locket and sort of how you got started? Sure. So it's a company that's two years old. I used to work in investment bank, and that was my first job out of college. And the idea was this lock screen that we're staring at 150 times per day, it's nothing better than just a photo and a clock, currently. Can we do something better than that was the idea? So then I quite my job promptly, and then I started building the team. So that's where I found my co-founder Kashik. And then we moved into a two-bedroom apartment. Where I lived with five other guys and three dogs, and living out of the bedrooms and working out of the living room, so that's how we started. And the V1 model was to, hey can we show ads on the lock screen and get paid from advertisers and pay users to just rent out the lock screen? So that was our initial start. It started off as a very Ramen Noodle startup, kind of like a project. And then it just suddenly became a company, after we started fundraising and such. Great, and how was the early user adoption? How did you guys start finding users and getting that traction? It was very abrupt. We thought that we would get like 10,000 users in the first month and that's how we calculated all these other ad sales and all that stuff. We ended up getting 25,000 users on the first day. And then we ended up getting like a million users from that V1 model. Wow. Which ended up failing. Which is why we pivoted into a different model. Which is showing compound on the lock screen. The app is launched, it's called LockIt, and it's launched in the Google Play store. It will show relevant news on your lock screen. Every time you wake up your phone it'll show different news, so that you're keeping the know. Great. And so you originally had the product which was ads-based, and then you moved into news because you thought that was bigger traction it was something that was in demand and people wanted. So, the way in which our thought process worked was we couldn't pay, so when we were doing the paper ad swap model. What happen was because we got so many users in a short period of time. It was impossible for us to plan out the next ad cycle, because without knowing how many millions of users we'll have the next month, it was impossible to sell the ads in advance. Also, not only that because advertisers pay us three months after the ad campaigns have been finished. So we were in business of paying users first before getting paid from advertisers. Yeah. So we needed to raise a lot, like millions of dollars. And we're just like a three months old company. Yeah. So we had to make a decision. We're not going to do this anymore. Then what is the other type of value that we can provide on the lock screen. And the idea was, okay, we just tried out the economics model which is like paying and rewarding users. Can we deliver the right content at the right time to our users that way? When we're pivoting we showed, we were just testing out by showing some of these other articles like Justin Bieber just went to jail or, did you know that this airplane had x, y and z? And the engagement on those articles were really great, so then we went to talk to these meetup companies who wanted to partner us and to distribute the content. So that's kind of like the transition in which we kind of made. And also user base changed a little bit too, because when we were paying users, it was the users that really valued that $3 to $5 per month. Whereas as we were moving toward the content model, it's the users that are hungry to learn more. Yeah. And just get this content. Interesting. We'll learn more from these startups later. Before we continue lets introduce ourselves my name is Amir Shevat and I work in Google developer relations, I have mentored and worked with many product managers and founders across the world and was an entrepreneur myself before joining Google. Throughout this course I'll interview experts and share my own advice on how to build great products. And I'm Chris. I'm a course developer at Udacity. Throughout this course I'll be interviewing start-ups, explaining different topics, and describing how you can complete the final project. We're excited to show you how to build great products, and can't wait to see what you do. There's a lot to think about when starting a company. And it can often feel overwhelming. We talk to successful founders about the traits needed to build a startup. Let's hear from them now. Now I tend to be very, aggressive, in terms like, when I want to you know get things done, I'll get them done. Yeah. I also tend to be impatient in a way, so it's hard as being impatient, is hard on me, right? But sometimes, it just helps me get stuff done. In terms of Kowshik and I, we get along very well that we're both that way. And we get the gratification from seeing or building stuff in our hand. Hm. Yeah. It's getting an actual product. Yeah. And seeing that and giving it to users. Mm-hm. It's amazing feeling to just be able to draw these wire frames, and then a week later you see it live in the app store. So what's a skill that you feel like entrepreneurs must have before they start building a company or a product? Not sure if it's a skill that they must have but something that I've learned over time- Yeah. That really helps me understand better about what startups are like and how to operate them, is that when I first began we thought that failure is everything. This one idea that I have needs to be executed perfectly and you succeed, otherwise a failure. So at one point when we're doing this paper swipe app model, and we're getting them to lots of users, I think I had this idea that if we switch or if we pivot, then it's a failure and I have failed. And it's very hard to accept. But if you think about it in a different way where, like if you're doing experimentation, it's kind of like a science project where you're trying to validate some of the assumptions that you have given some of the resources you have. Now, if you think about it that way, it was great experimentation, where we realized that like even though we tried all of these things, it did not work, so it must be the idea not the execution. So, these days, what we do is that if you have an idea or you have a goal, we will come up with some of these experimentation, like experiment one, two, three, and we'll try them out. And really track the metrics to make the judgement call on. Instead of taking it as like, oh it's my idea and my dream, I need to make it happen, if you consider as like, hey, these are some of the ideas that we'll try. If they fail, that's okay, we'll move on. At the end of the day the worst thing that can happen to us is that we fail and we don't know exactly why we fail. Hm. Was it the idea or was it our execution? Knowing exactly why I failed is one of the learning that will help us go to the next one. Yeah. So failure is an option, but you need to know why. Right, exactly. And it's best if you fail quickly. Yeah. The worst thing is to fail slowly and painfully over years. So it's just like Band-Aid, rip it off and get it done. Yeah. Okay. [LAUGH] [LAUGH] And what sort of things do you think in your personality, or maybe in your co-founder's personalities, made you guys so successful at the beginning? When I look back at that, I really think it was, I mean it was, first of all it was a lot of hard work. It was a lot of luck, frankly. I think we worked a lot on our communication. But more than anything else, it was hustle, and it was the willingness and the ability to get back up each time we stumble. Every entrepreneur goes through some great highs, hopefully, and some real low lows and when you're working, whether it's alone or with somebody else, the ones who are successful are the ones who are able to stand up after falling over and dust themselves off. And learn what they needed to from it. I think what I just talked about was an example of that. Yeah. Where you could see actually when you looked back at our progress, how we were learning that lesson the hard way. Probably took us way to long, but we learned it. And you got there. And we got there. So what sorts of skills do you think are really important for entrepreneur to have at the outset? I'm going to just pick two things. The first one is resilience, just being able to bounce back after something doesn't go your way. You have to get really comfortable hearing the word no and as a small company that nobody knows about you're going to hear it an awful lot. And the second one is I think the willingness to step outside of whatever room it is that you're in. And maybe this is motivated by the fact that I come at this from an engineering perspective where the easy part and the fun part is writing code, is building something. But that was never useful to do that until I had built a real understanding of what the customer wanted. And that doesn't happen until you get outside of your room and start talking to people. And so, I think, developing those two skills is more important than anything else, at the outset. So, what's one thing that you wish you would have known before getting started with Optimizely? You know, when we started our entrepreneurial journey, we started actually working on something completely different. And we built an education platform for young kids called Carrot Sticks. Had nothing to do with what we ended up working on. I think when I look back at that time what strikes me is how much time we spent working on things that didn't actually end up mattering. We spent a lot of time building things that nobody cared about because we didn't spend enough time getting to know our customers. And we struggled for a year, frankly, without salaries, and that was a pretty difficult time and I think during that year we had to really erase what we thought we knew about starting companies and really learn how to probe and understand the customers that we were. trying to serve. And you can see that in our first company, Carrot Sticks, it took us about six months before we earned a dollar doing what we were doing. With our second company, which I won't even go into, it took about a month and a half, so you can see our learning scale shrunk. And then with Optimizely we actually were able to earn money on day one before we'd written any code. And I think that's the signal for, first of all, the fact that we'd gotten better at understanding our customers, but also for how skeptical we'd gotten of our own ideas, and that we weren't even willing to work on something unless we were able to prove that it was something people wanted enough to pay for. Before we dive into more content let's take a step back. Here's what you can expect to learn in the upcoming lessons. In the first lesson we'll start by covering how you can generate ideas and evaluate them against each other. Then you'll learn techniques for validating your ideas so you know you're working on a product that has a place in the market. In lesson two, you'll learn about high level concerns for user experience and user interaction. Now you won't be a professional user experience designer by the end of the lesson. Instead, you'll have a strong sense of the big questions you'd answer about user experience. And you also identify common design elements in products. With a validated idea from lesson one, and the knowledge of user experience in lesson two, you'll start to build mock-ups of your app, or website through a design spread. You'll learn how start ups get real feedback from users in just a few days. This is the same methodology that Google Venture uses with startups such as Nest and Blue Bottle Coffee. Finally, in lesson four, you'll learn about metrics, so you can figure out how to improve the product and grow the business. Along the way, you'll be completing tasks related to the final project. In the end, you will have gone through the effort of generating, researching, validating, and testing a mock up of your product with users. As you dream up your ideas, it is important to be passionate about them. It is never a good idea to create a startup just because you want to create a startup. Create a startup because you want to solve a problem that keeps you up at night. Successful companies start from a good idea and a good idea might be one of these things. Solve a novel problem. Google did that with search. Extend the current solution. Udacity does that by providing an affordable on-demand technical education for jobs. Disrupt an industry. Uber provides an easier way to share a ride. In the next video, Chris is going to share types of idea that might help you come up with your idea. Thanks, Amir. Let's drill down into different types of ideas that you could dream up. The first type of idea is a simplify idea. With these types of ideas, you're trying to make a process or a task much easier for your user. Instagram did this by simplifying the process for combining images. They have an app called Layout, which allows you to combine photos from your camera phone into customized layouts. Another type of an idea is a me too idea. It's where you take a current idea and you bring it to a new market. Flipkart is a me too idea. Similar to Amazon, the company leveraged market insights in India to pioneer concepts such as cash on delivery. Flipkart also partnered with other companies to provide exclusive sales on its website, since it had such a deep understanding of India and its user's needs. Virtualize is another type of idea. It involves moving an activity to the online space. Need to do your taxes? TurboTax allows you to send off your tax forms electronically. You can even do them from your mobile phone or tablet. Need to hail a cab? Lyft makes this process also really seamless. You can do it right from your mobile phone. For this type of idea, it's important to think about how you can leverage existing technologies or build upon new technologies. For example, Lyft used the fact that everyone had cell phones and GPS locations to provide cab service to people on demand. You might also try to remix or combine two or more ideas. Slack, an online messaging tool, is one great example of a remix idea. Slack is a team communication tool that streamlines email, chat and private group messaging while making all content searchable. I can chat at my fellow course developers or I can put in an order for some late night food. Finally, there are types of ideas that seem impossible. Or almost impossible. These types of ideas are just like Google's project Loon. Project Loon attempts to bring internet to the rural and remote areas of the world using helium balloons. In the next few exercises, you'll look at some different companies and determine which types of ideas apply to them. Now that we have gone over these different types of ideas, I'd like you to hear about a company and decide which of these ideas apply to that company. The first company is called Shyp. Shyp is a company that allows users to send mail and packages to anyone in the world. Users can choose an item, take a picture of it on their phone, and then set a destination and schedule a pickup. Shyp takes care of the rest by picking up the item and finding the lowest cost, and most reliable way to send the package, pretty seamless. So which type of ideas do you think apply to the company Shyp? Check all of these idea types that you think apply to the company. All right, here's the second company that we're going to take a look at, Curofy. Curofy is a startup based out of India. The company offers a mobile app similar to LinkedIn, except it's exclusively for doctors. Doctors can search for each other, discuss and refer cases, and stay informed of medical news. Which type of the ideas that we discussed, do you think apply to Curofy? Check all the idea types that apply. Now it's time for you to think about a product idea. One you'll use throughout the rest of this course. Yeah and if you don't have an idea already, think about problems in your life that you want to solve. If nothing comes in mind check out requests for startups in the instructor notes. Is there an industry that you always think about? You can also observe others and their work and talk to them about the problems that they face or the problems that there companies face. The best problems to address are those that you have personal experiences with. Your commitment to finding a solution will be that much stronger and it will be the one thing that keeps you going through the crazy highs and the crazy lows of building a company. It's a key idea to make sure that you're building something that solves a real problem. Yeah, for example Apoorva Mehta, the founder of Instacart and his cofounder. They spent a year and a half trying to build a social network for lawyers, without realizing one cardinal truth about the space. And that's that, lawyers don't like to share. Apoorva eventually solved a different problem. And it was one that he always thought was a personal pain, grocery shopping. He realized that his friends were willing to use the app that he built, and it was unlike so many of his other products. By observing and reflecting on the world around you, you'll be likely to stumble upon an idea that you love. I'm here with Aaron Harris, a partner at Y-Combinator, one of the best accelerators around the world. Before joining Y-Combinator, Aaron was founder of Tutorspree, an online service that connected tutors and students. Thank you for joining us. My pleasure, thanks for having me. So let's start with a personal question. How did you come up with the idea for Tutorspree? Well, it was actually initially my co-founder Josh's idea. He had this thought that we were going to build an online platform for people to buy and sell their time, and that kind of lent itself to tutoring. And the first way he pitched it to me was, it's this online platform that will buy and sell time in any way. I said, that's a stupid idea, because it just sounded too broad and general. As we started thinking about it, the thing we realized was that tutoring was kind of a perfect fit for what we were talking about. I had tutored in high school and in college, I'd had tutors. I had a lot of friends who are professional tutors. We kind of talked to them about this idea, we started uncovering these things that they actually needed. And that's what influenced us to sort of, I guess, iterate our way towards what Tutorspree became over time. You think this is common for every founder? Do funders in Y-Combinator, this is how to do it? It should be. It isn't necessarily always. Sometimes people come to us with ideas that are kind of made up. We call them sometimes solutions in search of problems, where people just have this really interesting technical idea that doesn't actually relate to any problems. But I think the best ideas tend to come from problems that people themselves experience. So in that way I actually think Tutorspree probably wasn't the best idea we could have done. I wasn't a professional tutor, neither were my co-founders. So there were things that we didn't quite understand. We also weren't parents which was kind of our target market. We didn't have kids go through the process. So while we learned a lot through customer conversations and watching how people acted, I think we missed things. So how do Y-Combinator companies come up with their idea? I don't think there's any one, single way that founders come up with the idea. But there is a common thread between the best of them, which is that people are solving problems that they have, problems that they really understand. I think Dropbox is a great example of this, where Drew got annoyed of carrying files around on a USB stick, right? It's crazy, you have one on your keys. It's a crazy way to carry files around in a world where we have the Internet and cloud storage. Now, in 2005, 6, 2007 when he was starting this, remember, this concept didn't exist. When I first got my Gmail account, I had to know the Gmail beta in 2005. I used it as cloud storage. I just realized this today, I was thinking like when was the first time I used cloud storage? I would send copies of my thesis to myself, right, from my Harvard address, just so I had a copy somewhere in case my computer crashed or in case I needed to print it up. That's such a silly thing to do. Email is not designed for that. But that was the only way really to do, so he said I'm going to go one step further and Dropbox was born. Right. And what do you look in when you look at applications to Y-Combinator? What do you look in, in terms of ideas? In terms of the idea or the founder that we want to accept? Yeah. So, our thinking on this, I guess, my thinking on this has changed over time, and I think the same is true of my partners. I think we used to say that founders were the only thing that mattered. Idea was important, but mostly as an informed founders. A lot of other people will tell you it's all about the idea. I think all these things are probably too clear cut, or it's not that black and white. I think you need both founders and ideas. Because if you just take founders who seem really great but they don't have good ideas, they're probably not great founders. because great founders have ideas of what they're going to work on. And if you take something that just seems like a really great idea and the founders don't seem great, they're probably not going to be able to execute it. So I wish I had a clean answer but the truth is, it's both. And so we're looking for founders who seem really great and formidable. And the truth is, we're not looking necessarily for the most intelligent founders, because that's actually not the thing. It's not pure horsepower. It's not intellectual horsepower. It's are you smart enough to get this done? But more importantly, do you have the determination and the drive to just go through brick wall after brick wall to do it? Because let's face it, you're going to screw up again and again, and even if you don't screw up, things aren't going to work out the way you wanted. And if you can't go through that, you're in trouble. On the other hand, if your idea is something that has no chance of being a large business, It doesn't matter if you're the most determined founder in the world. It's not going to go anywhere. Right. Hopefully you have some ideas that you love and that you assume users will love too. For the purpose of this class, we'll walk you through how we would come up with a new kind of shopping app idea. We'll be using this shopping app idea as the main example throughout the rest of the course. You can use this idea, a different version of this idea, or come up with your own idea to complete the final project. Hello, I'm with Nir Eyal, the author of Hooked, How to Build Habit Forming Products. Thank you for joining us. My pleasure. Good to be here. So, tell me a little bit about the book. Sure. So, my book is really about how do products engage users? How do we build products and services To keep people coming back, not every business needs to form a habit. But every business that forms a habit needs a hook, and so that's what the book is really about, it's about this pattern that I call the hook model. This four step process of trigger, action, reward, investment that keeps people coming back and using these various products and services. And my hope here is that we can use the psychology of what makes products engaging to help people live happier, healthier, more productive, more connected lives by using habits for good. And now, I as an entrepreneur use this model? Right. So if you're building a product that requires a habit, so if you think about products. Some of the most successful companies over the past several years. Companies like Facebook, and Google, and Instagram, and WhatsApp and Snapchat, and Slack these companies have all formed habits in users. Now that's not a requirement lot's of businesses can do just fine without forming a habit, but if you're the type of company who's business model relies upon a habit just like those companies I just mentioned they would go out of business if they had to send advertising every time just to bring people back. So if you're that kind of company, if you're an entrepreneur building a product that requires people to come back on their own, you can use this framework to figure out, hey do I have the fundamental elements that I need to form, to build a habit-forming product? Is this only for consumer products? No. So whether it's enterprise products or consumer products, doesn't matter. What matters is, is the product something that people use throughout their day with little or no conscious thought? So if you're building an enterprise application that, you know, might be some piece of software that's put into some server farm somewhere and nobody actually uses that piece of software, that's fine. That's a great business, you know, you should keep doing that, but you just don't need to have it for that, because that's not used regularly. On the other hand if you're building an enterprise product like a communication tool, like Slack, or GitHub, or Stack Overflow, or Sales force. All of these are enterprise facing products that necessitate habits. They require people to come back on their own. And for those types of products, you need a hook. So these hooks, this four step process, starts with a trigger to an action and a reward and then an investment. So every hook starts with a trigger. A trigger prompts the habit and we have these two types of triggers, an external trigger or an internal trigger. External triggers are things in our environment that tell us what to do next. They give us some piece of information. Click here. Buy now. A friend telling you about this great new app through word of mouth. All examples of external triggers. These external triggers prompt us to action. That's the habit itself. Open an app, scroll through pinterest, search on google, push the play button on YouTube. These are these actions that we do with little or no conscious thought that are these very simple behaviors these very small behaviors that we do seeking a reward. Which brings me to the third step of the hook the reward stage. Is where the user's itch is scratched, where they get what they came for. And yet there's a bit of mystery around what they might find next time they engage with the product. So it's not just a reward. It turns out that habit-forming technologies integrate what's called a variable reward. So this comes from the classic work of B.F. Skinner, the father of ‎operant conditioning. Skinner found that when he gave rewards to his pigeons and these little boxes on a variable basis. So, sometimes the pigeons would peck at the disk, they wouldn't receive a reward. The next time, they would receive a reward. What Skinner observed was, at the rate of response, the number of times his pigeons peck at the disk, increased when the reward was given on an intermittent schedule of reinforcement. And so in all sorts of products that we find most habit-forming, most engaging, we find this bit of mystery, this bit of variability. So searching, and scrolling and scrolling on a newsfeed, or what makes sports fun to watch is the uncertainty of will our team win the game. Or what makes for a great TV show or a movie? The uncertainty about how the happy ending is going to unwind. All these are examples of variable rewards. And finally, the investment phase, the last step of the hook. The investment phase is where the user is prompted to put something into the product, to invest in the product In anticipation of a future benefit. So, the purpose of investments is to increase the likelihood fo the next pass. That's what the investment phase is for, and it does this in two ways. The investments load the next trigger. So, loading the next trigger, an example of that would be, when I send someone a message on WhatsApp I don't get any immediate rewards. Right? There's no leader boards, there's not badges, there's no points, nothing really happens. What I'm doing is I'm loading the next trigger because I'm likely to get a reply. Right. And that reply comes coupled with an external trigger. Hey, here's a message from your friend which prompts me to use the hook once again. The second way that investments increase the likelihood of an x-pass is by storing value, and this is a big deal. Storing value is when the product gets better and better with use, it appreciates in value. And it does this by storing data, followers, reputation, content Photos. Right. Anything that I'm putting into the app that gets better and better over time. And so it's through successive cycles, through these hooks trigger action reward investment that now an association has built with that second type of trigger. Remember I told you there was two types of triggers: external triggers and internal triggers. The internal trigger are these things in our life that prompt us to action like a place, a situation, a routine, a certain person. And most frequently, emotions that prompt us to do this next action, this next habit with little or no conscious thought, but without any explicit information. So over time, through successive cycles through these hooks, now we use the product. Not with a message that tells us, hey click here, but With a need. With a need, exactly. We internally trigger ourselves. We have these associations, so, I'm lonely, I check Facebook. I'm uncertain, I Google. I'm bored and I'm on YouTube or Reddit or checking stock prices or sports scores, right? We do these things instantaneously because of the successive cycles through these hooks. In your book, you're talking about companies who are painkillers versus vitamins. Can you talk a little bit more about that? Sure. So there is kind of this religion about vitamins versus painkillers. What we teach MBAs today, or what entrepreneurs hear when they go out and try and raise venture capital, is that they want to build a painkiller product. We don't want to spend our time building vitamins, we want to build painkillers. Painkiller products are the kind of products that customers can tell you they need. Stop my pain. They have quantifiable markets, and they're imminently monetizable. Vitamins, on the other hand, that's a kind of product that people say, you know what, I don't want to back that kind of project within an enterprise, right. Your boss or your PM will say, no, I don't really. That's a vitamin feature, that's not something we need to build. Let's build the painkillers. Right. So a reason that a venture capitalist will say, we're going to pass on that idea. One of the reasons might be it just doesn't seem like something really need. So that's the current way of thinking. I kind of challenge that way of thinking, because if you consider some of the products that we've been talking about that are very habit forming, like Facebook, and Twitter, and Instagram, and WhatsApp, these products didn't start out as painkillers. Nobody woke up 11 years ago, in the middle of the night, two in the morning, shouting I wish I could update my status. That never happened before Facebook existed. So these products that become these painkillers over time, they start out as vitamins. They start out as nice to haves. And they're frequently dismissed. People say, oh, it's just a little toy. It's not going to have a big impact. Well, it turns out that by creating habits, by becoming these integral parts of people's day to day lives. They become pain killers as they form these habits. So today if Mark Zuckerberg said, you know what we're going to shut down Facebook. I've made enough money. I'm done, people would have conniption fits right. They would have a big problem. Right. All of a sudden this product that was a toy and was just a vitamin has all of a sudden become a painkiller. And how do I know if my idea is a painkiller or a vitamin that could become a painkiller? Right, so it comes down to figuring out if you have these hooks. You have very little chance of forming a habit without having this hook built into your product. This four step process that takes these pleasure-seeking behaviors and becomes these pain killer products. So we talked to Muriel about vitamins versus painkillers, and I wanted to ask you this same question. What do you think is better for an entrepreneur when he thinks about types of ideas. Vitamins or painkillers? It's funny. I don't really think about it in those terms, but I guess the way I think about it is kind of the same way. I would say the pain killer is a much bigger deal. But even more than the pain killer, I think you want like a life saving drug. Right. You want something that someone really, really needs. My partner Paul Buheight said way better to build something that a few people love than a lot of people sort of like. Right. And so that's what we look for. It's something that people really, really want. Because those are going to be your initial core of passionate users who are going to engage with you sufficiently to help you develop your product and make it better. If you just have something that people kind of like, they'll use it a couple of times and then they'll go away. And if your initial users just go away, you're left with a ghost town. Right. I think that the biggest challenge for startups, people talk about, you know, you are going to run out of money. You're going to this or that.. I think the biggest problems that most startups have, you run out of time. And part of the reason you run out of time is because you're fighting the apathy of the market. It's not that people know about you and don't like you, it's that no one has any idea who you are. And if you solve something that is a really deep pain for someone, they're going to talk about you. So forget all the conversation about viral marketing, this kind of marketing, that kind of marketing, these tactics. If you solve something really important to someone, they're going to mention it. Can you give me an example of a vitamin and a painkiller? Yeah, I think that again it's this idea of it's different things for different people. I think Stripe's a pretty good example of the pain killer. Integrating payments into a website. Is such a big pain in the butt without something like Stripe. I remember when we integrated PayPal it took days and weeks just to like, they didn't even have developer documents that you could read in any kind of way. Right And it took weeks and to get this and the that and the other thing. It was a nightmare. Stripe's a couple lines of code and you have payment set up. For some people, if you're not building a website that seems like a vitamin. It seems like a nice to have. But in terms of supportability, and all these things, and ease of use, that's a huge painkiller for anyone building something for e-commerce, honestly. Very cool. In terms of vitamins, I don't know, there's kind of a lot of them. Not to say and some of them are probably really successful companies or become successful over time, but I think that they are, they don't scale quite as quickly. You know an incremental hair dresser closer to your house. Right. You know five miles closer is a vitamin. Right. You can drive another five mile. When it comes to software, there are a lot of things out there. If you look at the app charts, you probably see a lot of them. You have all these ideas and at this point, you should be wondering, which idea should I choose? Well, to answer that question, you have a lot to think about. Here are some of the considerations you should keep in mind. First, is your idea a painkiller or vitamin? Pain killers address an obvious and functional need for users, while vitamins address user's emotional needs and are really nice to have. Now, both types, but especially painkillers, can lead to successful companies. For vitamin type ideas, you'll need to figure out how to get your users to be sticky, so that way they continue to come back and use your product over time. The second thing you should look for is how easy it is to monetize the idea. Now you don't need to monetize an idea on day one. But understanding how to make money out of the service or product is essential to building an enduring business. Next is the idea simple? Can you explain your idea in just a couple sentences? For example, bagborroworsteal.com is like Netflix, but instead of renting movies, you can rent, buy, or sell designer items. Law enforcement and judges might say the simplest explanation is usually the right, or truthful, one and this should also be true of your product. Users should be able to describe the product and its benefits to other potential users easily. And here's where we get to the heart of the matter. Is your idea personally relevant? For example, you might be a diabetic and want to develop affordable and convenient blood sugar monitors for other diabetics. Now, don't underestimate this one. This is of great importance, as it relates to how likely you are to persevere in the face of challenge, uncertainty, or worse, looming failure. You'll be more likely to see an idea come to life if you care about the idea in the first place. Now another consideration for an idea is whether or not you can follow through on it. Think about your ability to organize a small team or a large team to execute on that idea. Can you get from a to b? Next you should wonder if you have a large enough size of the market. You want a really big slice of the pie. The market just refers to your number of potential customers. You should be able to calculate a lower estimate as well as an upper estimate for your market size. If you're unfamiliar with market sizing, refer to the Instructor Notes. There's a resource link there. And finally, does your idea have a legitimate secret sauce? Does your idea leverage technology or patents in a unique way? Or do you have talent and capital that no one else would ever have? For Google, the secret sauce was the page rank algorithm. The secret sauce has grown over the years to include many features that bring millions of page results in fractions of a second. Now that you have some considerations for what makes a great product idea, I'd like you to evaluate the idea for the SuperDuper Shopping App. You can find a survey that's linked in the Instructor Notes. Once you've taken the survey, you can check this box to continue when you're done. And in terms of looking at the idea itself- Yeah. What would be, if you had two ideas, what would you look in terms of this is a better idea than the other idea? For me, it changes. I don't think I can just say this idea or that idea. I think one of the things I really look for is someone building a product or a company that's focused on a market that's growing, or that will grow because that product exists. I don't really love products that are entering super mature markets because, at that point, startups lose a lot of their nimbleness and a lot of their advantages. Because if you're going into a mature market, basically what gets you noticed is advertising dollars. And you're just fighting for a slice of a pre-existing pie. But if you build something that's going to cause a market to grow or building something for a market that is growing, you're fighting for a slice of an ever expanding pie. And that is so much more interesting. It let's you play around more. The rules aren't written. There's all these things you can do. So I like those kinds of things more. But that's not to say that there aren't great businesses to be built in mature markets, as well. And it also depends on how you think about what's a mature market, what's not. And I also like companies that make me think honestly, that make me look at a problem from a brand new perspective. Something that makes me say, huh, I didn't realize you could do that. Very Cool. You know, and that's tough to do, right, because we spend all day thinking about ideas and thinking about new companies. But when you see one of those, that's the kind of thing that you get really excited about. So, what would be an example of an early stage market versus a mature market? So, mature market, and this is kind of a silly example, but junk food or something like that. It's like a pretty mature market, right? So, if a company came to us and said I'm going to make a new kind of potato chip. Now, there's a bunch of reasons we probably wouldn't fund it. But one of the things is, all right, it's potato chips, what more can you do? Now, you look at the last 10 years and well, look at Pringles, right? They built a really big company, I think, I actually don't know how big they are. They built a big company but it's primarily a marketing challenge. In software, there’s some things that are also mature markets. So CRM, right. Customer Relationship Management software. It's actually a pretty mature market. Now Salesforce disrupted it, in a lot ways, to build a very large company. And there’s still things that can be done. But it takes something really insightful and really new to figure how to build the next great CRM company. And I think there will be more of them. It's a lot harder. Not to say it's a bad idea but it takes a little more thinking and a little more, I think, a much deeper insight. Some newer markets that are really immature. One that I like to think about, drones. Drones. Everyone likes to talk about them but I think it was something like 500,000 drones were sold last year. And the market's growing by some ridiculous percentage every single year. That is such an underdeveloped market, and we think about all the applications that drone have yet to touch. It's kind of mind-boggling. I mean we're talking everything from crop analysis, right. Flying a drone over a field which they typically do with fixed-wing aircraft now, just to see how healthy crops are, all the way to tracking shots in movies. There's all these things and we don't know what that's going to do. Not to mention unmanned drones giving the Internet to places which Facebook and Google are both working on, or transporting people. Right. I don't know. That's going to be cool. It's going to be really cool. Hi, I'm with Nier again. In your book, you talk about manipulation metrics. Could you explain about that? Yeah. So, ethics is something I care about deeply. And, a question I often get is aren't you teaching people how to make the bomb, right? Aren't you giving people the tools to use our deeper psychology to manipulate people's day-to-day behaviors? And the answer is yes. That, in fact, these tools can be used for nefarious purposes. The reason I wrote this book was because I worked in the advertising and gaming industry and I'm trying to bring these techniques that advertisers and gamers have known for quite some time, but to bring these techniques to the larger community. To help people build products and services, not just in gaming and advertising, but in health care and in education and in all sorts of industries where we can use the power of habits for good. And so that's really why, the first reason I wrote this book. But there's still this test that I give to someone who's concerned, hey how do I make sure that I'm using these habit-forming techniques? for good. And so I provide this two-part test in the form of what I call, what you mentioned, the Manipulation Matrix. The Manipulation Matrix is this four quadrant matrices where on one axis you have, do you believe that the product or service that you're working on is materially improving people's lives? Yes or No. That's the first criteria on the Y axis. Do you believe what you're working on is materially improving people's lives, yes or no. And only you can answer this question, right? This isn't a test for you to judge other people or for other people to judge you. It's sincerely for this question of, hey, how do I make sure that I'm using my limited time on earth, right? How do I allocate my human capital towards something that can serve a higher purpose, that can do some good in the world. So that's the first question. But that's not good enough. Because there's another question that I think is critical. Which is, am I the user? Am I the user? So there's this two part test. Now, why do I make people answer that question? And, that's what's on the X axis. If, yes I'm the user or no I'm not the user. Do you happen to know the first rule of drug dealing? Never use? Close, yeah. Never get high on your own supply, very good. I don't want to ask about your background, but let's just go with that, right? Okay. That's the first rule of drug dealing, never get high on your own supply. You're right. So, what I'm doing by asking makers to consider this question of, number one, do I believe what I'm working on is materially improving people's lives? And the number two, am I their user I'm making them break that rule because if there are any negative effects to overusing this product, if this product is potentially addictive as opposed to just habit-forming, guess who's going to be the first person to realize it. So that two part test, I think, puts you not only in a good moral position because you are the user of the product, interestingly enough, it actually increases your odds of success from a business perspective. You become what I call a facilitator. If you can answer in the affirmative to these two questions, you're a facilitator. And it turns out that the companies that we talked about earlier, Facebook and Google and Instagram and WhatsApp and Slack and SnapChat, all of these companies turns out were started by a facilitator. Doesn't mean you can't make money or have a good business in any of those other four quadrants, it's just that I think your highest odds of success, and you're also in a good moral position, if you can answer yes to those two questions. You probably also feel very passionate if you're the user, right? Right, right, and you just build better products, right? The advantage of knowing your user, right? Because, you've got the user right there, you've got your customer in you is a huge advantage. And, we don't always have that opportunity. If you're working at an agency, or working at a company where maybe it's servicing somebody who is not you, as the user. We don't always have that luxury. But then again, we always do. We could always choose what we work on, and what we're going to spend our time on. And so I think that's the best place to be. Can you give us an example of how you can use hooks for good? Sure, so a big reason why I wrote this book is because I want people to use the psychology of habits to help people live better lives, and so I actually do a bit of angel investing when I see these hooks in products that I think can actually improve people's well being. So, there's several companies that come to mind, one company that I'm a big fan of is called Pantrylabs, and Pantrylabs is trying to take on this obesity epidemic, and what the, the company founders realized is that People were eating unhealthy food, because let's face it, unhealthy food is very convenient, it's cheap, and it's delicious. So how do we compete with a vending machine full of refined sugars that are bad for us, that we know cause obesity and all kinds of other problems, and that's the entire vending machine So here comes Pantry lab and says look, we're going to take a refrigerator, with a door on it. And we're going to attach like a kind of like an iPad like device to the front and you can open the machine, the refrigerator whenever you like. But as soon as you take something out of that machine, that happens to be stocked with fresh delivered food. Everyday the food is delivered fresh, full of salads, full of fresh ingredients that are very nutritious and healthy for you As soon as you take out the food from the machine, it has a RFID chip attached to it and your credit card is automatically charged. So know for the first time, healthy food, in an office building is as convenient to acquire as unhealthy food. And they're really changing people's lives, their day to day habits, it turns out, That losing weight doesn't have to be about willpower. It's not your lack of character that you can't resist these temptations. It's just that if we make the behavior easier to do, which is a big part of what I described in the book in the action phase of the hook. If we make that behavior easier to do and we build a habit out of eating healthy food by making it as accessible as unhealthy food. That's all we gotta do, right? We don't have to expend will power. We don't have to do this hard work. And that's really what's so beautiful about using habits to change behaviors is that, when we use habits, we off load the will power. It doesn't have to become a struggle anymore. It's something that we do day in and day out with little or no conscious thought. So people will do the right thing if you make it easier. Right. Easier, and make it a habit. Right. So part of what makes using Pantry Lab so easy is I put in my credit card, that's the investment phase of the hook. And then I tell it my preferences and so more of that food gets delivered to me in the future. So this refrigerator that's just a vending machine, essentially, gets smarter and smarter over time the more I use it. As an entrepreneur, when should I start thinking about the Hook Model? As early as possible. Because the idea here is, well, I'll tell you a personal story. So I've been at two companies. One of my, at the last startup that I helped found, one of the problems we constantly had was what do we build? So, we were big believers in the lean start methodology of build, measure, learn, customer development, big believers in that. Still am. But we always had this challenge of what do we build next, right? This is where all the blood, sweat, and tears and money all go, it's the building. Testing and learning, measuring and learning, that's easy, that's fun. Right. It's the building that's hard. So the question we constantly, constantly had was, you know what do we build next? Do we build what the VCs say we should build? Do we build what the loudest customer say what we should build? Do we build what people who write into customer support say we should build? What do we build? And so, what I, what I propose is that instead of just guessing, or you know, taking a shot at, or dot voting, even, based on what the team thinks we need some kind of framework based on how people actually behave because it turns out that just asking people what they want is not a really great measure. Because people can only articulate certain things. There's all these inarticulatable needs that drive our behavior and people couldn't tell you actually drive their behavior. Right. So instead of just guessing we need consumer psychology to help us build the right things sooner. We still have to do build, measure, learn. We're still going to mess up, we're not going to build perfect products the first time. The idea is that we can build the right thing sooner by basing what we build on the foundations of consumer psychology. Now that you have a product idea, it is time to move to the validation process. Remember that a lot of ideas look great on paper, but fail in real life. Validating your idea could help you determine if your idea is as good as it sounds. As you validate your idea, you may find that your idea isn't as good as you thought. In that case, you might need to generate new ideas, or combined new ones with new ones. Just be careful that you don't get stuck at this point in the course. We want you to put something in front of users and understand the process of going from an idea to a product. One way to validate your idea, is to do user research. In the next videos, you will learn how to do user research from Tomer Sharon, our researcher in Google New York. Hi, we're here with Tomer Sharon, a senior user researcher in Google search. Thank you for joining us. Thanks for having me. So, what is user research? User research is a discipline that is providing insights, keyword insights, into product users, their perspectives and abilities to the right people at the right time. So that's the official definition. To make it more understandable, user research is there to help answer three big questions. The first one is what do people need? The second is what do people want? Which is different than what they need. And the third one is can they use the thing that we're working on? Whatever the thing is. Is user research only for new ideas? No. Otherwise, I wouldn't have a job. You start, you have a new idea, you validate or invalidate it. There are tons of decisions an entrepreneur is making about their product every day. I'm not saying all of them should be covered by user research, but it's not just for new ideas. If you have, if you want to develop, we all do, we have new ideas for new features and how to improve the product. Some of them may involve, again, a lot of work. So for those things that may involve a lot of work, I would try and find out if they're worth it. Again, is it a problem worth solving? Or a feature? Or a feature. Yes. Definitely. So, how do I move from user research to decisions? So, in order for you to make decisions, you first need to know what about? And that leads me to how do we start the process of users. The first thing you need to do is make it very clear for yourself, and for your team, what is the question that we're trying to answer. So after you did your research, if we want to move to making decisions, you first need answers to those questions. Right. That you started with. What happens in many cases is that you have answers to questions that you didn't ask. You didn't know how to ask, or you weren't even aware that they were questions. That's fine. But if you want to start with research, the first thing you need to do is make a list of the questions you're trying to answer. What are the questions that we will have answers to by the end of this research? This research effort will fail if we don't have answers to these questions. So I write a list of all the assumptions? Yes, yes. Assumptions is a perfect way to describe it. An assumption can easily be translated into a question. And it doesn't have to be long. Sometimes one, two, three questions, it's perfectly fine, okay? So as soon as you are done with research, you should have answers. Those answers can help you make decisions. I always start when my team and I are trying to start a research effort. I always try to identify where is this coming from? Why are we talking now? And I'm doing that because I'm trying to understand what is the question that we're trying to answer. So I'm looking for dilemmas that people or teams have. Arguments that they have. I attend a lot of meetings and I just watch. Sometimes we have data that we can't explain. Why is this happening? And things like that. So, this can be translated into questions and then answers, and these answers would lead us to making decisions. So how do you validate the idea? How do you not waste a lot of time building something that people don't need? Well, I think that the thing you need to do is just build something. I realize that sounds a little backwards to the way you asked the question. But you can talk to as many people as you want in life, and you'll get some good answers and some bad answers. Unless you know how to ask the questions properly, you'll get a lot of bad answers. But really the best way to get people's feedback is to build something. And it might not be the right thing, but as long as it has sort of the minimal quantitive useable functionality. It gives people something to interact with. And then you start learning how they use it, what they really want, and you can go from there. So, if I'm an early stage startup, and I want to do user research, what do I do? I just build it and release it to the market? Essentially, yeah. It really is you know, build something, put it out there, see what happens. The way I would modify that just a little and this is why it's useful to be your own customer is that, if you're your own customer and if you're building this thing for yourself, as you start developing it, you can actually figure out what you need and what you don't need before you release it and see what other people need. If you're building something for someone you don't understand and it's not you. The first piece of feedback you'll get is when you toss it out into the world. And getting people to engage with something is hard enough. Getting people to engage with something they don't actually want or need at all is basically impossible. So if you build something that you need and want, you can get it to the point where it solves your problem. Then you release it and other people will be able to give you feedback and really interact with it and then you'll just get better faster. You make your iterations faster. And how do you make sure that you get the right feedback from the right people? How do you make sure that it's not like showing it to your mother and she's saying, hey that's a great idea. Yeah. Well, mothers will usually tell you your idea is very nice unless they actually want you to go back to law school which is what my mom keeps suggesting. Although she suggested I go get an MBA the other day, I don't know why. You have to pick, right? You have to be smart about it and seek out the people who you think will find what you're doing is useful. Now, some of that actually is picking people by hand, looking at your network and saying, hey, this person is the right demo. The right user type for what I'm building, looks like me or doesn't look like me, but I think I can solve their problem anyway. Let me start with them. The other way is try to find some sort of distribution early. And there's a bunch of different ways to do that. If you're building a product, Hacker News, is an amazing place to go. Because that's where a lot of people who are interested in technology congregate. They go there. They see what's up. They look at interesting articles. We have something called Show HN, where people just put up new products, and they'll get a lot of feedback. A lot of customers, potential customers, coming to them. You can use product hunt for the same thing. There's a bunch of other things like that that you can use. But really, it's about being relentless. There's a great story that Ben from Pinterest tells. The founder of Pinterest. And when he was starting Pinterest, he didn't think anyone would want to use it. And so he literally went to coffee shops and showed the prototypes of Pinterest to moms that he saw at coffee shops. He said, these are probably going to be my demo. Let me see what they think. And he had them, and he just took notes at coffee shops. And it's that level of drive of just finding people who want to use what you're building. That's critical in getting some sort of engagement. So how do we analyze the data because sometimes it can get, for example, contradicting results. Yes so it highly you asked before what they love to answer, you know that by now, it depends. Right. So it highly depends on the question that you're trying to answer, so if you're trying to answer a question such as which design is better? Design A or design B? There's not a lot of fancy analysis that goes into that. You have numbers that can either show you that it's either A, B, or a tie. So the majority of people decide? If it's such a question that, right, A or B. But a more complicated question would be Do I have a good idea or not or what do people need? That's hard, not the majority, sometimes I call these head-bangers. When you see, only one person that does something or behaves in a certain way, you only need one person to understand okay, this is important. I don't care That the nine others didn't demonstrate this behavior. I know that this is important. So it's not easy. It's a team effort. It's a team sport. Research is never the researcher's. If your startup is fancy enough to have a researcher, it's not their responsibility. It's a team sport. So the data is not going to be always very helpful. So what I like to do is have people in the team be involved in that. If you have an engineer, if you have a product manager, the entrepreneur himself or herself, a designer, a marketing person, whoever you have. Have all of these people coming from all of these angles observe the same behavior and decide what's important here together. That's going to be the way to analyze and synthesize the data. To decide together. It's not always clear. It's not always easy. I would say this is the hardest part of research. Is understanding okay, what is the result here? What did we find out? Sometimes, I use a tool that I created. I call it, the rainbow spreadsheet. So, the rainbow spreadsheet is a spreadsheet that allows you to List all the observations. Everything that you see, all the behaviors that you see. And let's say you obverse, I don't know, maybe five people, six people, and then you just highlight or color different cells to see which participants we call them, people. We invite to participate in research demonstrated that behavior, and then you get some kind of histogram of what happened most. And that's helpful in coming to conclusions into what happened here and what does it mean. We're here with Harpinder Singh, a partner at Innovation Endeavors, and the CEO of Slice. Thank you for joining us. Thank you, Amir, it's a pleasure to be here. So how did you become an entrepreneur? So, my journey's a little bit different from most other entrepreneurs. I met my co-founders at Stanford Business School back in 2000, and we were working together on a business plan before we graduated and that idea did not pan out. But we really enjoyed working together as a team, so we were essentially a team before an idea. And we all decided to commit six months, we decided to say no to the jobs. And we invested some of our own money, and went through a structured search process for about six months. We looked at a few different spaces, several different ideas, and our benchmark was can we get excited about something ourselves? And do we want to spend the next six or seven years doing it? So that's what we did, we created a company called FiberTower. It was a wireless infrastructure company which we built and sold after six or seven years. And, we took some time off, and the same thing came together. And, we did the same exact process, looked at a few different spaces, few different ideas, and created Slice out of it. And the common theme was we, at that time, felt that wireless was growing a lot and e-commerce receipts were growing, and we felt that data would be very valuable. So, that's what we've done two times now. So how do I determine that my idea is the right idea to build a business around? As an investor and as a founder, the answer may be somewhat different. As an investor, I'm definitely trying to see is this potentially a big market, a high growth market? Does it give you enough room for exploration and for errors? So, that's one thing that's important. And then the second is do you have some defensibility, at least for a few years until you create room for yourself. And as a founder, there's a couple of other factors that become important. I mean, as a founder it's not always clear from the beginning, is it a big market, is this like a mega-market, and so on? So you generally want pick big markets, but you're picking problems that you can relate to personally. And, I like to pick problems that have some kind of defensibility around technology, or around the data component. So, you want to create some barrier that the guy across the street just can't do over night. So should an entrepreneur find a small niche or think big from the start? It depends on how you define niche. Snapchat is niche, Instagram is niche, but these are big companies. I think there's couple of different ways to think about it. I have friends who have acquired small companies, $10 million revenue companies, and grown them to $30, $50 million revenues, and grown the EBITDAs, and they've created a lot of shareholder value. I think the traditional Silicon Valley would look at that and say, that's not big. So if you're thinking technology, if you're thinking Silicon Valley, especially if you're thinking about raising venture capital, then I think the bar is different. People are looking for billion dollar plus outcomes. And there, by definition, you're looking for big markets, ability to accumulate large user bases and so on. So it really depends on what your strengths are. Are you more of an operator that wants to optimize? Are you more of an innovator that wants to sort of create magic and have this thing that can just sort of grow to be something unimaginable? And there are trade-offs. It depends on how much capital do you want to raise. It depends on what kind of employees will you attract, how much ownership will you retain, and, really, what is the core competence of the business? Is it design and product, is it operations, is it sales? So I think there is no one answer to this. People have created a lot of shareholder value from what might seem small versus what seem like megahits. So, there's a lot of trends in the Silicon Valley. Should I, as an entrepreneur, look for an idea around the trend? Again, I think it depends. There's a lot of people who can be very, kind of like, trans centric. Social mobile local is hard, so let's all go chase that. Or, everybody wants to, I don't know how many companies have heard about shared economy, you know? Back in 2000s, there was this wave about pets. So, I think that there's a lot of this, I hate to use the word herd mentality, everybody wants to go do the same thing. But, having said that, I think it's valuable to look at current disruptions, current dislocations, like for example, mobile. Having a camera on the mobile phone, or having your location on the mobile phone. It's created businesses around like Uber or Instagram. These are really mobile first companies. And this wasn't possible, six, seven, eight years ago. So, I think studying, hey there is this big movement from landlines to mobile. I think, people can consciously think about down screen impacts of those things, and businesses then can then be created. Music is another great example. Music has been massively disrupted, around how you produce it, how do you distribute it, and all of that. Companies like Spotify, or even device makers, iPods and phones, and so on. So, I think there's a lot of benefit in thinking about disruptions, and what does that mean three years from now, six years from now. A cloud is a great example. All right. AWSI are doing cloud, and now there are numerous companies that got created around that trend, security, payments, and so on. So, I think it's valuable, but having said that, I don't want to just recommend that as the only approach. We can see companies that are created in retail, in agriculture, in insurance, in data, and so on. So, just old-fashioned industries that people are not looking at. But, there's a lot of opportunity, because incumbents populate those, and it's not the sexy thing to do. But you can definitely create businesses there. So, as an entrepreneur, how should I think about competition, and how should it impact my product? I think it's very important to be aware of the competition. But, I think it also depends on the state of the company. I've seen entrepreneurs that get very distracted by trying to follow and copy every move off their competition. I think it's not very healthy. Especially, if you're trying to go after a new market, if you're creating a new category. You let somebody else define your moves and your product. And that's not healthy. But, I think as you start maturing, and as you start optimizing it's useful to think about even small differences in the product can create massive differences in the mindset of consumers. So, I think if I were to simplify, if you're just getting going, if you're in a new category, don't let the competition define you. But if you're mature, I think you need to pay more attention to the competition. Your idea may be original but it's more likely that your idea is similar to ones that have come before it. To further validate your idea and to determine if your product is differentiated, you should look at competitors. First, you you'll need to know who your competitors are. You can quickly find the competition by searching for keywords related to your product idea. You want to make sure you use words that customers would use to describe your product or something similar. Seems like we have a couple competitors in the news already, at least for the grocery shopping app idea. Once you've done that, you can collect some basic info on the companies using WHOis.net, Facebook, and Twitter. Creation dates for companies are listed on all three sites. But do keep in mind that businesses could have started even sooner. On the WHOis.net, the information is just below the fold. Here's the information for Instacart. You can find more information on your competitors by going to websites such as SimilarWeb and SEMrush. You can either search for websites or mobile apps. On the results page, you can get a sense for how the app is doing, the traffic sources, and keywords that people use to search for the app. Now if we switch the server to the website, it will look a little bit different. Here you can get a sense of the traffic overview, the geography of the traffic, referring websites, search keywords, including organic and paid, and social referrals from different websites. Other items you may be considering looking into, include the competitors' social media interactions. What are they writing about, and how are customers talking about the brand or the product? If you're iterating on your product, or trying to understand other companies' value propositions, then I encourage you to look at their own homepages and landing pages for specific products. You've done all this research and competitor analysis, so now what? Well, use it. You can get sharp on your original idea or alter the idea based on what you learned from user research and other early idea validation. We have four activities that can help you get more clarity on your idea. The first is a Twitter description, how would you announce your product in a 140 characters, or less? This activity helps you get laser focus on the key user value and your product market fit. The second is you could write a future press release. How would your product first appear in the news? You can use this structure to focus yourself and your team. The structure ensures that you capture your future vision. The third is a one page executive summary. This is the shortest and clearest way to define your product. And finally, the fourth is an experienced strategy template. This template is appropriate for defining new product categories. And in the instructor notes, you'll find templates for each of these activities. Take a minute to read over them, and think about which one would help you get more clarity on your idea. You now know some techniques for clearly defining your problem and solution, as well as your brand and user values. I'd like you to choose one of the activities to firm up your idea or the idea of the Super Duper Shopping App. Also come up with a name for your idea, if not then rename the Super Duper Shopping App. Write the name for you product idea here, or the new name for the Super Duper Shopping App here. So what is the most important lesson you took out of being a founder in your company? Well, I learned business lessons, right. There are things I learned about running a company that I think were valuable. I've written a bunch about this, sort of saying don't rely on one channel to acquire all your customers. And if you do, know the risks. When you're young, as a company, you have to rely on things to a degree that's probably not healthy. And you gotta make that trade, and know where it came from. Actually, Google did the same thing, right, Google's Yahoo deal. When Yahoo was sending them all of their search traffic, that made the company. Had Yahoo pulled the contract or said no, I think Larry and Sergey would be in a different place. And maybe, they probably would have figured it out, because it's them. But that's a trade you gotta make. But for me personally, I think I just learned a lot about what I'm good at, what I'm bad at, how to manage people. How to manage co-founders and work with co-founders like people who are your equals, but you have to keep them on track. Which is very difficult, especially as a CEO, where they're keeping you on track, you're keeping them on track. That's a really tough thing to manage. And from a product point of view, what is your insights? Know your customer really well. We built the wrong product at first. Because we had a conception of our customer that wasn't accurate, I think, in terms of how we initially built our marketplace. And I think we didn't understand our customer quite well enough. And we didn't really solve our own problem when we started. And I think we should have. I think we would have been a more successful company, had we hewn closer to our own really deep problems. because we lost a lot of iteration cycles on that. So if I where to start another company, if I left and started a company, I think it would be something that I understood more intimately as someone who experienced that thing. Right, so why would I want to be a entrepreneur? I don't know that you do. It's a funny thing, I think that people give different answers to this question. Because I think it's actually different for different people. I don't think there's one way that you can look and say, I checked these boxes, I know I want to be an entrepreneur. For me, it was a question of degree of control. I had worked at companies beforehand, and just never felt like I was actually influencing the success or failure of those companies, or the vision of those companies. And I wasn't happy with that. I play well with others, but I'm not great at being managed, depending on who the manager is. So that's something that indicates maybe I should be a founder. And I wanted to do something really large, that was kind of out-sized to the opportunity set offered by working in a company. We kind of look at startups as the most rapid way to impact the largest number of people in the world. To think that Facebook went from nothing in 2005 to having 1.3 billion monthly active users in ten years, is astonishing. There's nothing else on Earth that I think has reached that many people that quickly. I think the closest examples are probably religion, right. And those take centuries to hit that many people at that deep a part of their life. It's technology that can do that. Radio and television before that, and now it's startups on the Internet. So passion has a big part of it. Huge. I mean, you have to believe in what you're doing, or really want to do it. I think there are people who found companies not because they're particularly passionate, but because they see a really great opportunity for making money. And I think that that's always in there somewhere for people starting companies. They want to be billionaires or something like that. But I think for the most part the people who really succeed are the people who aren't doing it because of the money itself. There was a great quote or great thing that I heard when I was on Wall Street, which is both good and bad. There's good and bad to this statement. But a lot of people there say that money isn't the goal. It's not how you win the game, it's how you keep score. Right. Right, and I think that's true for a lot of people. They're not actually earning money for money's sake. They're earning money because it's the metric, right? It's the proxy for showing that you built something huge, something huge and valuable. So I think that if your drive is to change lots and lots of people's daily lives, how they work, or impact a lot of people, then you should probably try to start a company. If you want just more autonomy in your life, start a company. It doesn't have to be a startup, right. It can be a business. Right. Like a small business that gives you freedom in your life. That's amazing. Don't fetishize the idea of startups and these things that will touch everyone, if you just want to build something with your own hands. I think fundamentally that's what it comes down to. Very cool, starting a company. So how do you handle setbacks at the company now? One of the best pieces of management advice that I've ever read, actually my cofounder Dan spoke with Dick Coslow at Twitter. And Dick said something that has stuck with me ever since, and it's that the hardest thing about management is making everyone else understand what you understand. And when you think about this from a problem solving context, first of all, there are always problems. There's always something blowing up or something going wrong, and it's really hard as a growing manager, I'd never had any experience doing this. My cofounder hadn't either. It's a really, really difficult thing to train yourself to, when something goes really wrong, don't try and solve the problem yourself. Instead think of your job as getting everybody else to understand as much as they can about the problem. And so, you might think that your job as a leader is to sort of present a happy face and make it seem like everything's rosy all the time to motivate people. But it's actually not the job, the job is to make everybody as aware of the problems as possible and to help get them rallied around solving them instead. And so that means confronting things openly, being aware of reality and trying to communicate as much as you can with the team about it We covered a lot of ground in this lesson. You've learned about user research, which allows you to figure out what users' needs are, what they say they want, and how they use existing products. We also learned about validating your idea through market demands, trends, and competitive analysis. Sometimes, as you validate your original idea might change or be scrapped, and that's okay. Like any good entrepreneur, you have to continue validating your hunches. Once you have a valided idea and something users want, you'll need to deliver a product to the end user. We'll cover how to think about your users and how to design great experiences for them in the next lesson. In the last lesson, you learned how to plan and execute a design sprint so you can test prototypes with real users. In this lesson you'll learn about metrics and how can you tie them to improve your products? You'll use these metrics to drive business decisions and prioritize what you want to work on, on the next design sprint. To get started, let's look at a couple different metrics that you might be interested in measuring. The first metric of interest is Net Promoter Score or NPS. NPS is a customer loyalty metric that is determined by asking users one question. On a scale of zero to ten, how likely are you to recommend this product or service to a friend. Customers who respond with a number between zero and six are called your detractors. Customers who score seven or eight are your passives, and anyone ranking with a nine or ten is a promoter. And to actually calculate your NPS you take their percent of promoters and then subtract out the percent of detractors. This actually means that NPS can fall between negative 100 and positive 100. You could, for example, have everyone vote you between zero and six. A good Net Promoter Score will vary by industry. As you can tell from this chart, many industries have a wide range for net promoter scores. And you can see their averages in these squares along the graph. If you'd like to take a closer look at this chart, you can refer to it in the instructor notes. Click Through Rate is another metric that you'll find associated with website buttons, links, and e-mail campaigns. With CTR, you're measuring whether or not a user took action. CTRs are helpful for determining how customers advance through steps of a purchase. For example, one checkout flow could be on Udacity's website. We could collect data on how many users check out a homepage, go to a description page for a product, how many clicked to start a free trial, and how many actually completed the payment information form to register for that free trial. Daily active users, or DAU, is another common metric, and it can take on multiple meanings. The trickiest part is defining what active means for your product. It could be as simple as logging in, performing specific tasks, or making a purchase, depending on your business. You can track the number of users over time, and you'll likely see some variation from day to day, maybe even a plateau, and then hopefully you'll see an uptick where you get a lot of adoptions from new users. By relating product launches, new features, press releases, and even market research to this data, you can get a sense for what might be driving your traffic. These next three metrics are similar to daily active users. Except you're tracking active users, in whichever way you define active over some defined period of time. So instead of having daily active users, you might have weekly active users, or monthly active users. Here's a bar chart showing monthly active users for WhatsApp. WhatsApp is a popular mobile messaging application. Now, you might be wondering why some of these bars are missing, and it's just because the source of the data didn't have this information. It'd probably be better to show this as a line chart over time, but I didn't want to give the impression that these points were actually in the data. To calculate any x day active users, you simply total the number of unique users who initiated sessions on your website or mobile application from a starting date all the way until the ending date. You might also look at patterns over weekday or weekend activity to spot trends. For example, Twitter determined that if a user opened Twitter seven times in one month then the user was likely to return. By attracting active users and possibly what features they use, you might determine what is driving users back to the product. And finally, another useful metric is retention. It's the opposite of churn or attrition. Retention describes the number or the percent of users you keep over a certain period of time. While not counting any new users you acquired during that same time interval. Now, this example wouldn't really be that great, because I'm only keeping, let's say, about 1% of my users after 12 weeks. Even better, you can monitor cohorts of users based on when they start using the product or service. For example, you can create retention curves for two groups of users. Let's say one group of users starts on January 1st, while the other starts on January 8th. To learn more about cohort analysis, check out this article on Nir Ariel's blog, which is linked in the instructor notes. The article discusses how to measure retention and use cohort analysis, while looking at user retention for Pinterest and Twitter. Now, these are some of the common baseline metrics. And whatever metric you choose, the metric needs to signal that users are using the product in an expected way, and that the same users are likely to come back and use the product more. This certainly isn't every metric that you might want, but these are some common ones that you'll use in most products. In the next video, we'll look at a framework for how you can come up with other metrics. Basic traffic metrics, such as unique visitors, overall pageviews, session length and interval, and traffic sources, can help you establish a good baseline on how a site or an app is doing. But you'll want other metrics to help you monitor the quality of the user experience. The HEART framework can help you define UX metrics that are relevant to your product. HEART is an acronym that stands for five broad categories. First is happiness. These metrics are often captured through surveys, and measure user attitudes for things like satisfaction, perceived ease of use, and net promoter score. Engagement is the second category. These metrics monitor user behavior, perhaps frequency, intensity, and depth over some period of time. For example, Udacity might be interested in the number of videos watched per user, per day. Instagram, on the other hand, might measure the number of photos uploaded per user, per week. These types of metrics will really depend on the types of activities that your users will do. The next category is Adoption. You can track the number of new users who use a product or potential feature. For instance, you might track the number of new accounts created each week, or daily usage of a feature such as bookmarking in a browser. The R is for Retention. You learned about Retention all ready, which lets you track active users from some starting time to some ending time. Finally, the last category is task success. These types of metrics are related to traditional behavior metrics, such as efficiency, time to complete a task, effectiveness, which is percent of completed tasks, and error rate. Now, you don't need to have metrics for all of these categories. Instead, you should think about which categories and their associated metrics would be most important for the entire product. You also might think about which metrics would be important for specific features of a product. So, you have the heart framework to think about categories and metrics. Now, which metrics should you actually track to make data informed decisions? Well, that will depend on your product. You want to create a small set of metrics or key performance indicators that everyone on your team cares about. To do that, here's a process that can help you. First, you should think about the top-level goals for the product or feature. This is a good time to check in with stakeholders, investors, and anyone else on the team. The discussion allows you to collect different ideas for the goals and build consensus about which goals are most important. Now, a common mistake is to define the goals in terms of the metric. For example, you might say that your goal is to increase the number of people who make a purchase, which is common for many e-commerce websites. Instead, you should think about the user experience improvements that could help drive that change. So be sure to narrow in on your definition of the goal. Next, you want to pair low level signals to each of the goals. For example, at Udacity, an engagement signal might be, how many minutes of video a user watches with each session. You might also look at failure signals, such as failed searches when a user searches for something, but doesn't click on any results. Once you have a couple signals down, you should ask some additional questions to determine which signals might be best. First, you should ask how easy or difficult is it to track this signal? You might be able to come up with a better proxy or a different signal to track that same thing. It may be that the website or app is not instrumented to log relevant events and actions. So, you might need to do some additional research at this point. Another question you should ask is, is the signal sensitive to changes in the design of the website or the app? After you've thought about your goals and your signals, it's time to craft your specific metrics. The metrics you choose should be prioritized based on the main goals of the product that you defined first. You can always come back to refine the metrics based on what you need do or from what you learned. You also want to be careful about adding too many metrics. Often times, your metrics will be associative with one another. And you want the ones that tell you about user behavior and about your product. You want the metrics that inform you of what to do next. Download the template in the downloadables and write your own goals, signals, and metrics for some of the categories in the HEART Framework. You don't need to have a goal for every category. Just think about two or three goals that you think are most important to measure for your product. Once you've done this activity, check this box to continue. So let's talk about measurements. What are the things that start-ups should measure? Such an important question. It's actually the first conversations we have with start-ups when they get into Y Combinator. The first time we sit down with them we say, what's your metric, because Y Combinator runs for three months. They get in, it's really four months from the time they get in, five months from the time they get in but, they have demo day at the end of that, when they get up in front of a roomful of very intelligent people, and they show their progress. And the more progress they can show, honestly, the better that demo goes and the better their follow up conversations go. So, you have to figure it out and it's different for every company. Now, there are variations on themes, right? There are basic themes that everyone looks at. If you're a company that should be generating revenue, your metric is probably revenue. If you're a social product, it's probably users or some function of engagement. If you are a transaction site, it's probably something about the number of transactions you do or the volume of transactions, which by the way is just a proxy for revenue, because you probably would take a cut of it. So it's particular to different startups. I think the critical thing is to make sure it's the thing that actually reflects whether or not you're succeeding as a business, and not what we call vanity metrics. And what's the hard part about setting the metrics and measuring them? Everything. Right, so I think on one level it's hard to choose. You start out as a company and you think to yourself, oh, there's all these different things I want to accomplish, right? I want to hire people, I want to raise money. Raising money, by the way, probably the biggest vanity metric of all. Basically meaningless for the success of your company, except that it gives you money to achieve the metrics you need. So, you think that, you think that, you want a lot of people, you want a lot of press, you want all these things, and they all feel good, but they don't necessarily matter to your business. So that's the first part. Ignoring all that vanity is hard. The hardest part, though, is once you pick a metric, being honest about it and sticking to it, and setting time frames for success and for progress that you actually stick to. So, we tell companies that during Y Combinator they should grow whatever their metric is between 5 and 10% a week. We try to say go for 7% a week. If you do more, great. If not, not. And that's great for consumer companies. And if they're sticking to that, the thing that happens, and this is something that people miss a lot. They say, oh, all you care about is growth. But, growth isn't a one-dimensional thing, right? Growth is a function of the fact that you've done everything else properly. You built a product that people want, you got it into their hands, you supported it, it continues to be something that they want to use. That's what leads to growth. So you can't, you can't isolate it. And if you miss it, that's when it gets hard, because then you have to be honest with yourself about why you missed that goal, why you missed you metric. And that will make you fix your business. Pete, could you tell me a little bit about Metrics and how you guys went about measuring things in the early days and what was important in measuring? That's a really good question because you're pretty resource-constrained early on and every moment you spend implementing some fancy analytic is one less moment you could be focusing on your customers or your product. But when I look back, I think there were a few things that we tracked that were really helpful. The first thing, and they're not all numbers. The first was Dan, my co-founder, set up an email that would email everyone in the company every single day and say here's the list of everybody that signed up for our product today. And I remember being so excited when I noticed somebody from Starbucks had signed up or we noticed this big company or this big company. That gave us a simple way to jump on these moments. Email and say, hey what's going on? Can we help you? And I think, some of our longest lasting customer relationships started through that, so it was a really easy way to plug in to what was actually happening with our customers. The second one is, it sounds a little funny actually. We made it impossible to fire Optimizely without sending us an email. So we didn't built any way to unsubscribe from our service. Instead we said, if you want to unsubscribe, email Optimizely. And we were a little worried that people would be really pissed off about this. And one or two were, but it also gave us a really, really clear and quick way to understand where we were screwing up. I think where otherwise some of these customers would have sort of silently drifted off into the night. This gave us an avenue to ask what was going wrong. What could we have done to have kept you as a happy customer? And we didn't earn them all back, we probably didn't earn many of them back as first. But it was a pretty easy way to find out where we were screwing up and so, I'd like to think that the most important metrics early on were the ones that help us stay in tune to where we were pleasing and where we were angering customers. So given where the company is currently, what do you think is important to measure in the next couple months or years. Well, we're a lot bigger now, we're hundreds of employees and we have thousands of customers. And we've gotten a lot more sophisticated in how we measure our financials as a company. So how we forecast gap revenue analysis and all of that. And that's been very illuminating. It's great as a founder to be able to have that view into your business. One of things that we're trying to build out now, I mentioned this before, is the ability to measure customers in the same way. And to give everybody inside Optimizely this same crystal clear view of how our customers are doing, and how good the experience we're giving them is. And the way we do that is with the optimized lead promoter system. I mentioned this before. It's a variant of NPS net promoter system. And we ask our customers a simple question. And we ask them to explain, how likely would they be to recommend Optimizely to a friend or colleague. And based on that answer and based on the reason for their answer we get insights into how well we're doing. It's pretty easy to spot leading indicators which we expect will later show up in the revenue elsewhere. If we're giving our customers a bad experience we'd expect to see that in churn numbers. Hm. But churn is a trailing indicator. We're doing our best now to build leading indicators of how well we're treating our customers, and that's a big challenge for us over the next few years. Yeah, it sounds like it. I'm back with Kaushik from Locket again, and this time we're going to be discussing the challenges of measuring things. So Kaushik, when you were measuring different metrics, what sort of barriers or obstacles did you encounter? Oh, well, user retention rate was one of the most difficult things to measure for us. Especially because a lot of users actually installed our application, never used it, but because it was there on the lock screen we miscalculated them as always using users. Or we calibrated their retention rates to be very positive and very supportive, but in reality they totally forgot about our application. They did not even know that our application existed over there, because it was very native and that's how it was. So that was very difficult for us to measure. We had already a unique way of measuring the user retention rate. We'd considered the user engagement as well as we considered, we had a few set of metrics, which they had to hit every single day in order to make sure that they are using the app consistently. So that was one challenging part. Wow. And what do you think will be most important for the company moving forward, in terms of metrics and measurement? Well, first, drop off between day 7 to day 14 is one of the most important metric. And then number of invites each user is sending, and the number of people who are positively responding for those invites as well as number, their respective retention rates and then how the total, the chain reaction is working. For example, if we buy users off someone from Facebook or if we buy users from different sources' headquarters. So we want to measure this complete chain as to how much vital coefficient it is adding and stuff like that. So that's one of the most important things. So tell me a little bit about how you guys go about measuring things and how did the product inform what you measured? And the metrics that you chose, that you thought were important to track as a company. Right, so we mainly measured metrics around two broad areas. One is user retention rate and user engagement rate. So user retention rate means day 1 retention, day 7 retention and day 14 retention. And as we are on lock screen we are all the time on the screen, and it is really difficult to find whether he is using it or no, and he just forgot about the application after installing, because it is right on the lock screen. So user engagement is also very important metric, where we measure how many times he is liking animation. How many times he is sending animation to his friends, or is he receiving images? All these things, so in the beginning we actually thought day one retention rate was very important for this. But over a period of time, we realized that it's not day 1 retention rate, it's a drop off from day 7 to day 14, which is highly important. Because day one retention rate actually was the retention rate provided by users who might not have had friends in Screenpop. But day 7 and day 14 retention rates were mostly around who already had friends in Screenpop, so they were the people who actually sent a lot of invites. They were the people who sent a lot of messages, as well as images, to their friends. So, measuring those were highly critical for us. Oh, wow. So could you give me an example of bad measurements? Yeah. I mean, again and again, you see people look at the wrong thing, and I think the most common thing is when people look at users and they don't measure the number of users properly. Now, that's true in a company that should be generating a revenue as looking at the number of users, rather than how much revenue those users are generating. That happens a lot. But, it's also true even with companies that should just be looking at users, when they count users wrong. They'll say, we had 50,000 sign ups in the last week. Okay, a sign up is not a user. How frequently are those users engaging with your product? So looking at patterns of retention. Exactly. I mean, retention's everything when you're looking at users. If you have people that sign up on day 1 and they never come back, it looks terrible, and it means you're building a bad product. Something, again that's a mile-wide, inch-deep kind of thing, because no one really needs it. If you have something where you only have 1,000 users, but they use it ten times a day, now you're on to something. It might not feel as good as having 50,000 sign-ups, but it's so much better because it's the base that you can grow from. And what about any metrics, or things that you measured, which you thought were important that weren't? So, I don't know if this exactly is what you're looking for, but I can definitely think of situations where metrics told us a story that didn't really match reality, and in one of these situations, we went through a period of time where our growth was really, really fast. We were acquiring new MRR, monthly recurring revenue, very, very quickly, and we put that number up on the board every month, and everybody was cheering, and one of the things we started noticing that while our new MRR growth was going up and up and up our churn numbers were also going up. So we had customers that were falling out of the back of the pipeline as well. And for anybody who's been involved in a SaaS business, your churn is one of the most important metrics to track, because it means that when it's high you've got a leaky bucket and you need to work harder and harder to fill that bucket while water pours out of it. And when we dug into it, it turns out that we had been giving new customers a short amount of time where they could do a trial with us and then forcing them to make a big decision after that amount of time was up. And for a lot of these bigger companies that we never really worked with before, this just wasn't enough time, and so they would start a trial, they would get to the end of this trial and they wouldn't be ready to actually commit or not, and they would fall out, they would churn out. And so while we were able to, because of these short trials we were able to sort of say, hey there's no commitment up front, we were able to get a lot of new revenue in through the door, we also were creating a situation where ultimately we didn't provide a good customer experience. And so that was a situation where we had a metric which looked really great, but there was something underneath that we hadn't seen that was pretty important to pay attention to. Were there any sort of metrics that you measured that you thought were initially important but weren't, they were really just vanity metrics? Yeah. We measured day 1 retention rate pretty intensely, and we tried to do everything right to get the day 1 retention rate, but we found out that day 1 to day 7 retention rate drop-off was not really important. We found that day 7 to day 14 drop-off rate was more important than that. So we just discarded thinking about day 1 retention rate after some time. And were there any other metrics that came up or that any other thing that you wanted to dig into more that you weren't initially sure whether this was going to be a good metric for the company? We did not, we always wanted to find out how many invites were sent, but we did not know the number of, we were not really in a position to differentiate between invites sent by a new user as well as invites sent by an already existing user. So invites sent by an already existing user were more critical, more important for us, which we did not think they were important in the beginning. But later we found out that these two, instead of invite, these two set of user base was completely different. They affected differently on our product. Yeah. Collecting data and tracking metrics can be tricky. So, here are some tips and awesome tools for how to go about that process. First is Google Analytics. It's great for getting stats on traffic. You can see demographics, user devices, and browser types inversions. It's a bit more exploratory in nature, but you can quickly get data on page views and click through rates. You do want to be careful because oftentimes the data does not show unique users. Analytics can be messy, so it's good to reproduce the numbers in two tools. Mixpanel is another great tool to measure user activities. It's particularly great for measuring drop off in a funnel. You can build customer funnels to determine if students drop off at step one step two, or step three of any process or sequence of behaviors. It's also useful for measuring retention. Now, you will need to be deliberate about instrumenting events that you want to track when using the tool. This forces you to get clear about what you want to know about your users. If you come across big differences when using two tools like Google Analytics and Mixpanel, you want to dig deep to determine which value is more reliable and what might be driving this difference. If you're building an app, AdMob is another excellent tool to add to your arsenal. It offers many features, such as flows to the application, user exit points, and ways to automatically maximize add revenue. If you're looking to conduct surveys, you might use tools such as Qualtrics. They're a popular solution for MPS. You might also try SurveyMonkey or Google forms. Once you have a user base and feel like you have a core product, you can optimize around smaller changes in your website, such as layout, headlines, button colors, and images. This is called the A/B testing and Optimizely is one tool that lets you do this easily. Now, A/B testing isn't the best way to go, and certainly, not when you're first starting out. Up next, Pete from Optimizely will discuss why this is in more detail. So with regards to AB testing I know that startups and websites will often do this. How do you know when to AB test and when not to? Good question. I don't have a baseline number for you in terms of traffic for your app or your website. But my advice to new founders is always, when you're just getting started, don't waste your time. I think AB testing is extremely powerful, it's a great way to look at large groups of customers or visitors at once. It's awesome. But when you're just getting started, you don't have large groups of customers. You've got a trickle at best. And your job at that point as a founder is to understand those customers the best you possibly can. And there's no substitute in that situation for sitting down in front of somebody and having a conversation, watching them use your product, understanding where you're falling short. And so I always advise founders at that stage, spend your time picking up the phone, rather than setting up AB testing. Wait for AB testing when you've got a bit of traction and you want to start making data driven decisions that way. So really, essentially it's important to be close to your user at all times. I couldn't say that enough as a founder. Yeah. And tell me a little bit more about how you go about AB testing and sort of you know what's your decision behind running the AB test? What do you make sure you want to AB test? What should you avoid AB testing? So first of all there are a set of features which have contradictory kind of appeal to the user base. So for example, a lot of people on lock screen wouldn't want to have the time and weather on the right side, but they want to have it on the left side. Or they want to have a quick access to the left and the unlock button on the right. So all these things have to be AB tested, we have to understand how the user behaves. And not just that, for example, we wanted to disable this home button. And make sure that the lock screen has a complete pattern protection lock kind of thing. But we did not do it because in our AB testing results, we found out that a lot of people did not want the home button to be disabled. Oh. So how do we disable it without knowing? We would have spent a lot of resource wasting building it and which not many people would appreciate our user. Wow. Yeah. So, that way we go through all the AB testing. So, in that case it sounds like you avoided going down a path that you didn't want to go. Yeah, absolutely. Great. So what do you do to improve your metric? Iterate, right? Talk to your users and change. If something's not working, there's a reason it's not working. I think the worst thing that happens when metrics aren't going well. The two worst things I would say that people do when their metrics aren't moving in the right direction. They stick their heads in the sand and say, no, I understand better than anyone else. So I'm just keep down the same path. Which typically doesn't work because you're getting signals and the other worst thing that people do is people switch metrics. People say, oh well I know we were suppose to focus on revenue but it's not growing so we're going to to focus on users. Because they focus on, or press or money raised or something. Because that's something they can point to as a sign of success, because honestly, it's really, really hard to admit that you're not doing something right and that you're failing, especially as an entrepreneur. Because your ego is actually pretty important, again, to push you through those walls. But you can't let it get in the way of change. You have to understand what you're getting wrong and fix it. And when you iterate you do A/B testing or any other type of testing? It depends. I mean A/B testing is specifically really about changing something on your website. Doing two different versions to see what happens to click rates, if you have a different picture, or something like that. So that can be useful, but typically you need to go deeper than that, right? You have to tinker with the guts of what you're doing. If you're losing customers, because your server load times are too slow A/B testing won't help you there. You actually have to re-engineer what you've built. If you have the completely wrong features, A/B testing. You know, you could do the thing that we used to do, which was put the dead link and see if people click on it. That's a form of A/B testing. Right. But then you have to build a whole new thing. And, I think about A/B testing as incredibly powerful, but very much about incrementalism. A lot of the the time when it comes to iterating your product you have to take leaps. So this is actually, I think, something I didn't say before, which is listen to your customers feedback. We don't build exactly what they say. You have to make the intuitive leap from the feedback you get to what they're going to need in the future and what they're going to want in the future. A/B testing won't get you there. Strong product vision will. So when do you know that you can launch? There's no way to know. I think precisely, I think the main thing is just launch already, right. If you've built that thing, that is useful, even in the smallest way to your users, put it out there. Because if you wait for some sort of monolithic launch, you're going to be too late. I think this is one of the key differences between how start-ups launch and how software is made today versus ten or 15 years ago. There's a great book about Intuit. I'm totally blanking on the name of the book, but it's sort of the story of Intuit and how they beat Microsoft Money. Because they did, which was crazy. That the small startup beat Microsoft. And I remember very distinctly you know they had to launch a useful product, and it's tough because it was you know accounting software and tax software. Oh I think it wasn't tax software at that point, it was Personal Money Management software. And it needed a lot, and they did this Herculean effort. To get the whole thing done and the CTO worked for a week without sleep kind of thing. And the reason they had to do that is because they actually had to press floppy disks, right. You had to get the software onto a floppy disk and making the whole company came in to press floppy disks. And one of the times they did this there was a bug they realized afterwards. They all came back the next weekend, repressed them, sent them out. And so that was this idea that you had to be ready to launch kind and like really ready with everything done. And what that lead to was a hell of a lot of up front investment with no idea whether or not the product would work. Now, because of the internet, you can basically deploy something smaller and then add to it over time. And so, we tell startups again and again and again, just launch something. Because, a lot of the time, the thing that you think will be the next step in your company's life isn't, and you won't know it unless you're interacting with customers, so. So, a lot of entrepreneurs want to wait until they're feature ready. Oh, yeah. Until the last mile feature is done? That they have the right number of pixel padding. We're talking crazy things. Right. Where people are delaying a launch because they want a very specific graphic they hired someone to do. Nobody cares if you have that graphic, right. They care whether or not the product works and does something for us. Right, and what are, for example, the bad things that you forget to do in launch, or should wait to launch. Well it has to work. Sometimes people will focus too much say on visual design and the thing won't work. It just won't load, you hit a button and nothing happens. That's the worst thing that you can possibly do because you get one chance to make a first impression on someone and it better be good. On the other hand, you can launch as many times as you want. Right? No one will remember you launched if they never saw it. Right. So it's okay just to put it out there. It doesn't have to be a big splashy thing, just put it out there, see what happens and keep launching until people notice. And start to learn. And start to learn about you, right? So every time you got a new feature, you launched, right, you're launching fresh until you hit that point where people know about you. To wrap up this lesson, I really want you to think about what you've learned and what you might do next. Metrics from user behavior and feedback from users are critical if you want to improve the product and forge ahead. As you reflect on data, you may want to plan additional design sprints. We actually did this at Udacity to rethink student support. A design sprint can be a great way to make changes to the product. You might also discover that you've chosen a poor metric, or that you're not retaining users. If so, then you might want to rethink your key metrics or alter the original idea. Ultimately, it's up to you to iterate on a product, or reimagine a product, so that way, you build something users love. In this lesson, you learned about key metrics and how to go about measuring them. Ultimately, your product and business goals will form what you measure. And don't forget that you can use the heart framework to help you refine your thinking and figure out next steps. You heard from Aaron Harris about vanity metrics and about actionable metrics. You also learned from other startups about what they measure. You have a great foundation for using these metrics to improve your product. Now it's time for you to go out and do that. We hope you enjoyed this course and are eager to learn more than what we covered here. Continue to dream up amazing ideas, and always push yourself to bring delightful and useful products to the world. Congratulations. You're on your way to getting your product in front of users. To prepare for the next lesson on design sprints, let's take some time to make sure you have some basics of user experience and user interaction down. You'll hear from experts about user experience and see examples of what to do and what to avoid. You will also learn how user experience and user interaction fits into product development. By the end of this lesson, you'll have the background knowledge and techniques to dream up flows and features for your users. Let's get started by hearing from one of Google's experts. Hi, I'm here with Richard Fulcher. Richard is a UX Designer at Google. Senior UX Designer? That's right And has been working on UX for the last 15 years. Thank you for joining us, Richard. Oh, it's a pleasure to be here today, thanks for having me. To get started, can you describe what user experience design is? Sure, it's a big umbrella of several related disciplines that are all focused on the design of experiences to help a individual person achieve some kind of goal. And that covers a lot of different types of experiences, most commonly we think about software design, but it's also things like environment design, and maybe the design of physical products. It can even be things like event coordination. It's kind of anything that a user experiences, that can be constructed for them. When I was kind of first taught this, there was kind of five key concepts. It's the study of users and their context, kind of the environment they operate in, in order that we can design tools for them achieve tasks that let them complete goals. So users, contexts, tasks. And goals. Goals. Okay, so let's start with the user. Who are they? Well, the user is anyone who's going to use the product of the service that you're designing. And it's really important to remember that, that runs a really wide range. It's very easy to kind of, when you're designing, just think about designing for yourself. For this one super idealized user that you have in mind. But in reality, you're going to be building this for people with very different levels of experience. With different contexts and different backgrounds that affect how they'll perceive this thing that you built for them. How do I know who the user is? The key for that is something called user research. I think it's kind of most associated with this idea of, taking this product you're working on and testing it in some way, having a user come in and try to perform a series of tasks that you assign them. And see how they do and see the things that are problems for them. But user research really covers the whole end-to-end development of the product. Even before you've drawn your first screen, you can engage with user research to go into your potential users' homes or workplaces, to start to understand that context that's important to the way that they behave and what their goals are. And once you've even kind of finished and shipped, you can do things like look at logs and try to analyze usage patterns, see what people are doing with your product. Perhaps kind of bias towards things that you want them to do more of, or see areas that they're spending a lot of time in that you haven't anticipated. So I can start with idea validation and go all the way to see if my product works well. Absolutely, there's ways for user research to help you throughout that process. Okay, so we talked about user research, but what does a designer do? Well, if you're an interaction designer like me, you're going to spend a lot of time grappling with tasks. You're going to think about, well what are all of the different tasks that the user is going to perform inside of this product? And, for every given task that you have, you're going to try to dive in and just try to figure out that sequence of interactions that the user is going to have. And sometimes you can think about that like a dialogue. Think about, well if the user does x, the system's going to do y, and then the user is going to come back and do z. You'll kind of go through that, and you'll start by just kind of shaping one of those, but then you'll kind of go broader and broader. You'll think about all the other variants of that same task, so what if the user does w instead of y? And how does the system respond to that? And that'll help you just kind of understand what some of the constraints are and what some of the things you need to account for in the design. And then from there you go kind of bigger and bigger. You think about what the next task is and you start to kind of chain those together in interesting ways. You'll start to see things that are kind of commonalities. Tasks that are similar or sometimes even the same to each other, that are kind of good opportunities. And also things that are really unique, particular tasks that have these very, one-off set of interactions that don't occur elsewhere. So I have to map every interaction? Well either you're going to map them all or the user's going to kind of have to create their own map. So trying to anticipate as many of those interactions as you can is going to make it easier for the user to kind of follow through on those goals inside your product. So now that we understand tasks, what comes next? Well, then you actually start to get drawing the screens. You get to pick up the pen, or the white board marker, or the mouse and start trying to imagine what these scenes, these environments the user's going to interact with actually look like. So you're going back to the tasks and kind of figuring out what are the pieces of information that they need to see. What are the pieces of information they need to provide. How do those all fit together on the screen to support that task? And from there you can kind of start building one screen and maybe a couple of screens that cover that task. And then look for connections. You can start looking for things that happened earlier to the user, that brought them to this stage. You know, those screens want to be related in some way. Or you think about things that they want to do from that point once they complete that task, well where do they go? And as you start to kind of get all these screens you start to build these flows and connect them. You have a sense of which things are really important which things are less important or frequently used. You start to build out the structure for this experience. And you think about the user might come in this way and spend a lot of time here and then hop over into this different condition and spend time there. That starts to guide you about how the overall navigation of that experience is going to work. And which tool do you love to use to do that? I love paper and pencil. Right. But at some point you get more and more detailed with what you're doing. So you can start very coarse. You can just start with a white board or scraps of paper because you want to kind of fail quickly. You want to draw out things, realize what's wrong with them, crumple them up, and throw them away. And draw them again. A lot of what I do as a designer is iteration. And there's a saying that writing is rewriting, that applies to design as well. Right. Design is redesigning. So you design it to show it to someone, you get some feedback, and then you redesign it. Yeah, absolutely. And you often will draw a lot of different things. And just kind of get a feel for, from feedback and from your own experience, and from the understanding of the user that you've built up through all those other steps. Which ones are the best bets, which make the most sense? And some of that is about making a choice based on the whole product. It's good if you can get to a smaller number of patterns that the user has to learn rather than the user having to learn 100 different styles of working with your app. Right. So when do I know that I'm done with all these checks? Okay. So you're never done. That's a joke. That's design. Oh that sounded unfortunate. No sorry. Okay. I mean it's great you could try but you're never going to quite get there. Like there's always going to be something that you want to change. You learn something else from the testing or from putting it out. Or there's some new capability that comes around that you want to incorporate into the product. You'll get closer and closer. You'll continue to approach it, but you'll never quite land there. So you'll kind of go through and you'll iterate, and you'll redesign, and you'll go to higher and higher levels of fidelity. You'll go from those pencil sketches to mockups to very polished mockups to prototypes. And you'll start building it at some point. So that said, there's things you can look for. Okay. You don't have to give up all hope. Okay. So, have you covered all of those tasks that you want to address, right? Have you completely solved the problem you were looking at? Does the product have a point of view about what things are important and which aren't? You know, if you have the tasks that are high priority make them feel like they're important to the user. Like stress them so that they know this is what this product is about. You've done user testing, right? Of course Okay, so have you covered all of the issues that arose from that? Have you kind of addressed those high priority items? And then finally, have you solved the problem you set out to solve? You go back to those original goals and see am I actually meeting what I understand I need to do for that user? And what would be a good mark or signal to tell me that I need to move from design to actually do rapid prototyping or stuff like that? You should do that as rapidly as you can. You know, even if you're just testing things on paper Prototyping it out. Using kind of the simplest tools that you can do. You have that analysis phase and then once you move into design, you know design and prototyping should be very much hand in hand. The closer you get to something that feels like a real experience to a user, the better feedback you're going to get from them. Of course. In many cases. So, you want to get to that point as rapidly as you can. So for me, as an entrepreneur, what are the type of design types that I need to care about? So my specialty is interaction design, so as you've probably guessed from me saying task, task, task over and over again for the last few minutes, that's where I bias towards. So kind of we focus on trying to understand users and behaviors. Think about the types of things that they want to do, and how to best fulfill them. Now that's just one of the specializations. There's many. Other very common ones are visual design. They focus on everything that the user sees while they're engaging with your experience. Is there like, colors, and stuff like that, or? Colors is one, but it's also things like layout, like scale, any iconography that's there, everything from fonts and upward, anything that becomes a pixel in that piece of software. Right. Visual design tries to concentrate on that. And there's thousands of small decisions that go into that, that is their specialization. Then there's also things like motion design. This is a newer focus for design in many cases. And they're concerned with how anything animates, big or small. To give the user a sense that their feedback is being heard, and that the system's responding to it. And just to kind of bring the to life a little bit. They make it feel like it's something they're really kind of engaging in. This push and pull way. You can also stress things with animation, right? Absolutely. Animation is a great way to tell the user where their attention should be focused at any given time. And then there's other specializations. There's things like Industrial design, the design of physical objects. Right. There's sound design, there's conran, or print design, and so on and so on and so on. Anything that you're doing on this product that has some decision that needs to be made, there's probably a whole discipline of design that can help you make that decision. So what you're basically telling me is that I need to hire eight people? Yes. Wait, no, no. You can get by with fewer. Okay. So I know most small teams just don't have that capacity to hire out all the specializations. So the good news is that, in my experience, most designers are hybrids. They might identify as being one of those specializations, but they often have familiarity to varying degrees with the other fields of the discipline. So what's important to keep in mind when you hire is kind of have a sense of what your expectations are going to be. What are you going to need out of this designer? Do you need interaction and visual? Do they need to work on your brand for you? And make sure that the capabilities are in the people that you hire. Or, make sure that they are comfortable directing the work of contractors who might be able to kind of augment the capabilities that they lack. How do they know if they're any good? [LAUGH] Wow, that's a good question. I think the best way to judge a designer is from their work. So you should certainly ask for work samples. You should look for the portfolio. You should find out what kind of things get them excited about design. Right. Are they very focused on the user and on simplicity? Are they a designer who can come in and give more pizzazz, a little sex appeal, a little gloss to the product? There's appeal to having all those types of people involved with the work. What problems does material design try to solve? Well, the question of how a user goes between all these different devices is a key one. And to the user, it's really just they're doing this one task. They're trying to do this one thing and it doesn't matter so much to them whether it happens to be on the phone in their pocket, or the laptop that's on their desk. So we want that kind of continuity. Something else we really focus on is motion. We've seen all too often that motion is something that just kind of gets tacked on at the end. So you do all this other work, and then you just kind of add in some animations. After effect or something like that. It is literally that, right? It's all done, so throw that thing in there. We try to think about motion from the very start, because we think that kind of knowing how things are going to move around is so powerful for giving feedback to the user about what they're doing. So, you want to kind of plan for that in advance. And we try to have these materials that give the material design it's name. Or things like kind of paper and ink that can kind of move in predictable ways that feel tactile and feel familiar to the user, but aren't bound by kind of boring old reality. It can do kind of these really interesting things that makes the user feel powerful, and that's a key goal towards giving them a satisfying experience. So the inspiration comes from design and material, actual material getting to play with. Yeah, I mean we really wanted to look at things that felt familiar to the user. And we engage with those materials every day. We don't engage with, kind of, these pieces of inscrutable glass. That's right. In our day to day lives except when we're using these devices. So why should that be the metaphor? Let's go for something that's a little bit more predictable. So where do I as an entrepreneur come to learn more about the material design? The best place to start is just Google.com/design. So from that site, we have a full specification, a set of guidelines that describes material design. It breaks down the philosophy behind it, gives you some key principles to employ. It's richly illustrated with imagery, with motion, samples of video, and also has a lot of resources that you can download. So fonts, color palettes, sticker sheets of kind of common components for all of the typical design tools that you might use. So I can use those out of the box, and not reinvent the wheel, right? Exactly, and then it should be very close to what you're getting on the platforms that directly support material. Hi. I'm with Jen who's a lead designer with Google Apps Accessibility. And Jen has over 15 years of design experience. And today, Jen, I'm really curious to get your insight. Our students have learned about user interaction and information design. What else is important when it comes to designing a good product? I think one of the key things that a lot of people overlook initially, but is extremely important is accessibility. Mm-hm. And what's accessibility? Accessibility is about trying to make products that are accessible and usable by all people regardless if they have a disability or not It's closely related to universal design, which is all about the process of making products usable by people with all ranges of abilities, as well as they can use them in all ranges of situations. So just thinking about if you can envision a user using your product with one hand, maybe it wasn't designed intentionally for that, but can they use it with one hand? And this would benefit users that might have certain motor impairments, but it would also benefit users that maybe have a hand busy holding a baby or a large bag of groceries. That's kind of the idea behind accessibility design. Okay, and you mention some of the impairments that someone might have. What other sorts of impairments might people bring to a product that might prevent them from successfully using a product in the first place? There's a number of common impairments that we consider, and they range from having visual impairments, being color blind, having hearing impairments, cognitive impairments, and motor impairments. And the thing to note with all of these is that there's a wide range of severity within each of these impairments, so you could have just slight vision loss to being totally blind. And the other thing is that a lot of people tend to have multiple impairments at one time. It definitely makes things interesting to design for, but it's certainly a reality that we need to consider. And one of the things that I always love to talk to people about and remind them, when you start to think about designing for people with disabilities a lot of people tend to kind of treat them as like they're in a separate group. And it's a group of people that you could consider or could not consider. Mm. But in reality, we're all going to have some sort of impairment most likely and within our lifetime. One of the important things that I feel that people need to keep in mind is that when you're thinking about people with disabilities a lot of designers and different people tend to think of them as a totally separate group that may or may not, or can or can not be considered in the process. But in actuality, all of us are going to have a disability at some point in our lives. And these things can be temporary, like a broken arm. They can be situational, like if you're riding a bike and maybe can't see your small phone screen. And they can be just natural progression of aging. So it's really important to consider these things. because if you're not, in a sense you're not considering how to design these products for yourself at some point. Yeah. So, what other considerations, I guess, or why would it be important for entrepreneurs to think about accessibility first? Well, one huge thing is that there is a large population of people with disabilities. There's a lot of great research out there about the demographics of people and we compiled some research and noted that there are more people with color blindness than there are native English speakers in the world. Oh wow. So this is a huge population. Yeah. And just thinking as an entrepreneur, that's a huge pool of people, and an audience that you can tap into from a financial profit standpoint. Obviously, another motivator if you're looking to get involved in education or government. Mm-hm. There's some legal considerations there and some legal standards that you need to meet. But I think most importantly, what we have found is that, when you consider accessibility up front, it often leads to a much better product for everybody. Yeah. And what's one example of a product like that that you've seen? Well, one really simple simple example and a straightforward thing that everyone can start doing if you're designing a digital product, is think about can a user complete all the necessary tasks on your product using just a keyboard. So, not only is this beneficial to somebody that uses a screen reader or doesn't have the dexterity to use a mouse, but it's also really powerful, or useful, for the power users that you might have. Yeah. That like to use keyboards, because they feel it's more efficient. Mm. Cool. So when should an entrepreneur start thinking about accessibility? From the beginning, immediately. Even just during the product conception phase, it's critical to be thinking about this. You should be thinking about how could this really benefit and improve the life of a user with or without a disability? Thinking about how can my product be used in various situations? Things like that are very important. I think a good example is Google Books, which was became really beneficial to everyone in that. Now that all of these books that were tucked away in libraries across the world were digitized and you could see them just by typing in your computer. So now only is it beneficial to you and I, but folks that use screen readers now. They are able to use these, have these books read to them via screen reader, which in the past, they would have to wait for a braille version, which are very costly and time consuming to get. So this is a great example of why it's important to think of these things early. So how do you go about designing for all users and what sort of lessons learned from Google Books or maybe other digital projects should entrepreneurs be aware of and know about? So, I think the first thing is to just for you and your team members to become familiar with accessibility basics and most importantly is understanding the needs of users with disabilities. So when you're starting out any project, you want to reach out to users that you think will be your end user and understand their needs, their challenges, their pain points. And so this is the exact same thing you want to do with people with disabilities. So reaching out to folks that you feel like, meet your target audience that also have impairments is really important and the insights that you gain are invaluable. The other thing you want to do is become more familiar with assistive technologies. So, assistive technologies are tools that a number of people use to just kind of help them achieve the same task that other people would with just a little bit of assistance. So examples of this are closed captioning in videos, where you can see the words that are being said. You see those typed at the bottom of those. There are magnification devices that people with low vision might need to use. There are screen meters, which essentially read the contents of the screens to the users. So you don't have to become an expert on these, by any means, because that would take forever. But just understanding the basics, as well as watching and observing somebody use these. Specifically, watching them, use the technologies with your product is again, it's one of the most eye opening experiences I've ever had. And then I think another thing to keep in mind is that there are a number of online resources for accessibility design guidelines, that give you lots of points of what to consider when you're designing. So an example might be, when you're in the visual design stage, you want to be thinking about good color contrast. So that users with low vision can actually read what's on the screen or on the page. When you're thinking about interaction design, you want to ensure that again, what we talked about before where the keyboard users that only use a keyboard are able to complete all of the tasks that they're trying to achieve. And what are some good examples of accessible products? So one example I like to share are Google Docs and Drive. I feel like they've come a long way over the past year and a half. Yeah. And what sorts do you feel like they've done really, really well? Well, as you can see here on the Google Docs app, there's a lot of good things that they have considered. One is good contrast between the text and the background colors. They allow, they support large fonts really well. So that when you do enlarge the fonts on here that essential items or elements aren't getting cut off, either able to zoom in where you need to. And they also have really have good screen leaders support. Screen leaders are interesting assisted technologies to design for. There's a lot to consider, because they not only read the content, like the words that are on the screen, but they also, read and announce the different elements that are on the screen such as buttons and links and menus. And some of the aspects of a good experience with a screen reader and things you need to take into consideration are one, ensuring that the way the user goes through the page and the screen that the elements are in a logical order. So it kind of goes left to right, top down, if that's how the elements are laid out on the screen. And but another key thing that is really important is what we call the labels. Or how things are labeled on the screen. So again, getting back to the notion that the buttons and links and elements like that are read to the user. You want to ensure that those have clear and concise labels. And they're very contextual. I think a good example here is, let's say you have a screen that has, let's say, emails, or search results on there. And you have pagination controls, like a next and previous button below. Instead of having the screen reader just read out next or previous, having a bit more context, like next 50 emails, or next 50 results, is really really beneficial and a very small change from the designer's point of view. Right. I mean, I could imagine like maybe seeing a buy button, but it's like well, buy what? Right. One thing that's really important to understand is the way screen readers work. They go through the page very linearly. And so, by the time they traverse through the site and reach the buttons that are usually at the bottom of the page, they might have lost some context of where they were. Yeah. So how can I work with a screen reader? Like, where would I go to use that, or use it with a product? The great thing about screen readers especially on mobile is that they are already built in. So if you have an Android or Apple phone, you can easily go to the settings and within there, there are accessibilities settings. And you can turn on Talk Back for Android and in Apple, it's Voice Over. And what I tell everybody is, turn that on and try to use your phone for a day. And get that experience doing your daily tasks, but only using a screen reader and the key there is to not look at your screen. So closing your eyes or dimming your screen for a day and just see if you can achieve your everyday tasks. Wow. That sounds pretty tough. What sort of other concerns are there for maybe mobile accessibility? I think one of the unique things about mobile is, it's a touch screen. So one key thing to keep in mind are the touch target sizes and ensuring that they're large enough. And this isn't just for people with disabilities. We all have different shaped hands and levels of dexterity. And so considering that, and that ensuring that you don't need a small pen tip to actually focus in on a button or something like that is extremely important and valuable. And what other considerations are there for accessibility? Well, there's definitely a lot more, but I think one other important one that we touched on a little bit before is color contrast. And I think, it's It is a good one to focus on, because you can focus on it early just in the design and mock stage. And it's an easy thing to consider. And so there is a specific Color Contrast Ratio that you need to meet in order to achieve these standards. The great thing about this is, there's a ton of online Color Contrast Checkers that you can simply plug in your hex codes of your text color, and your background color, and see if you meet these, these standards. So it's really easy, and again, just something you can take care of and think about really early on in the design process. Yeah. It seems like there might also be a ton of other considerations if you're thinking about hearing impairment, visual impairment. When people are designing for all these users can you compromise the design? Will the product maybe change too much? Yeah, it's a very good question and there definitely does seem like there's a lot at first glance to really consider. And in actuality, if you do leave all these considerations to the end of the product cycle, it can compromise the product because there's a lot of rethinking and refactoring that needs to go in, to just kind of fit these things in. And so that's why we're always asking people, and informing, and educating people on how to think of these things early on. I think when you just look at the general steps within the design process, all of the points that when you're thinking about accessibility, they're integrated in every step that you're already thinking about. So again, with color contrast, you're already thinking about what is your color palette going to be. So, then just on top of that you have some additional standards to maybe try to follow and look at to ensure that there's enough contrast there. Hey, we're here at the OXO website. I wanted to bring this up because I feel like they have a really good approach to universal design, and they have this great quote on here that I wanted to read. When we talk about designing for accessibility or universal design, it's important to note that that does not mean designing products fully usable by everybody, since there is no product that can truly fulfill the needs of all users. But, when all users' needs are taken into consideration in the initial design process, the result is a product that can be used by the broadest spectrum of users. So, I feel like that's a great way to kind of sum up that, yes, there is a lot to consider, but it's not about making compromises. In the end, when you do consider these things up front, you end up with a better product overall. Yeah, that's great. And how can an entrepreneur learn more about accessibility? What resources are available to them? The great thing is there's a lot of resources out there online. A few just to kind of rattle off, are the Web Content Accessibility Guidelines, which you can find online. That's a really thorough list of standards that you would want to meet, and need to meet. And they have great examples on there as well, and resources. Different companies have provided their own design guidelines. Google is one of them, which you can see here. This is the Google Accessibility website and specifically these are our design guidelines that we came up with, which are based on a lot of the standards that were developed by the Web Content Accessibility Guidelines. Apple has a great resource as well, for their accessibility design guidelines. And there's also some really interesting tools out there. There's plugins. There's a plugin called SEE that allows you to kind of simulate what your page or site would look like with different vision impairments, as well as color blindness. Yeah, so there's a lot that's out there. Great. Now, I'd like you to use one assistive technology and complete a task with one of your favorite mobile apps or websites. If you're using Mac, you can open System Preferences and then click on Accessibility. You might try to invert colors or use grayscale or you could play around with these other options, such as Zoom and Voiceover. As you use one of the accessibility tools, I'd like you to answer the following questions. Can you find all of the critical content? Can you navigate the page or the application and find the links that you want? And finally, can you actually complete the chosen task? This will help you get into the mindset of your users and develop empathy for them. You'll get a quick sense about which products are accessible and useable for most users and which ones aren't. Once you've done this task, check this box to continue. Keeping persona's in mind when you're designing a product, how does accessibility play in the persona's? Well, like with all persona's you want those to be based on information from talking to real users. And so again, is no different here. So you want to go out and actually talk with people that have these impairments. And when you're developing your persona, some key pieces of information that you want to include are, what is their impairment? What is the severity of it? How do they kind of tackle and get through their daily challenges with the impairment? What are certain assistive technologies that they use? What's or how experienced are they with those assistive technologies? What's their skill level? Mm-hm. You want to talk about what are their pain points in trying to achieve tasks that are related to your product. The whole goal is just to really try to get in some important insights into how they go about completing tasks, and what are some of their different approaches that they might take that maybe other users that you've already spoken to haven't. And what if I don't have access necessarily to someone who has an impairment, like who else could I contact, or how may I get that insight? Well, you'd be surprised at because there is a wide range of impairments like again, if somebody that has just kind of lower vision versus somebody that's completely blind, you probably do know somebody with some sort of impairment. And just thinking about an older relative maybe that has lost a bit of their vision or has arthritis and their level of dexterity isn't as what it use to be that's really valuable in sites that you can talk to them about or somebody who's not a native speaker of the language that's prominent in your app. They have to kind of approach things in a different way too, that could be really insightful. So there's a lot of people out there that you might not immediately consider talking to, that would be really valuable. Great. What companies have you seen that have been designing for all users and especially with those with impairments? So, stepping out of the digital world for a minute, I think two great examples are the Bradley Watch, which is right here. The Bradley Watch was designed from the get go thinking about people with impairments, at least with the visual impairments in particular. And so what this watch allows you to do is tell time with just feeling the watch. And you can see there's two magnetic balls here that indicate the hour and the minute, and this is obviously great for people with disabilities in that it helps them tell the time, but it also is visually appealing, it's very aesthetically pleasing. And it doesn't look like anything very different than other watches. So it doesn't draw attention to their disability, which is always an added bonus to these types of devices. But then just thinking about in situations where if you are sighted, you might be in a dark movie theater, or in a meeting, or discussion where you don't want to take your gaze away and you want to still understand what time it is, it's really valuable. Yeah, that's great. Yeah, so you can see, this is a great example of thinking about those needs upfront and coming up with a great product for everybody. And the other one was Oxo. Yes, and so, Oxo design is that they have a whole design team that focus on universal design, which we talked about before. And some of their products always have, are always keeping in mind different needs. And so some examples are, they talk about this again on their website where they can use a basalts bender with one hand, or their measuring cups are really unique, in that you don't have to kind of bend down to see where the liquid is measuring. You can look over and see where the numbers are. So they take a lot of things into consideration. Again, it benefits all users, not just those with disabilities. And to wrap up, what are you final thoughts on accessibility? I'd like to say that yes, it can be daunting. It can be time-consuming if it's left to the end of the design development process. There's always a lot of retrofitting and rethinking that needs to happen if it's left to the end. There's no doubt about it. So, to save everyone time and pain, think about it early. Think about throughout the entire process and just incorporate it into your existing process. And in the end, not only will you have saved time. But you will also come up with a much better product that's usable for everybody. At this point, you should be familiar with personas and wire frames. Your next task is to create at least one persona and a user flow. You can lay out your persona on a piece of paper like this, split up into four quadrants. Your persona should include the following information. A sketch of the person, or a picture of the person, and their name, demographic information, and any behaviors that you think are relevant to your product. Here you should include demographic information that leads to specific types of behaviors. And here you should put their pain points and their needs. Try to differentiate personas around pain points, needs, and their behaviors. By designing your product for their behaviors or their different pain points and needs, you could really target different users. And finally here is where your product comes into play, this is where you put all your solutions for that user. You can create this persona using any tool of your choice and I've included some additional tools and examples which are linked in the instructor notes. You can rely on user research here to help you out. Remember the goal is to create something quickly. You can revisit this persona that you create and the user flow when you learn about design sprints in lesson three. Create a persona and include a user flow that shows how a user would complete a task, and how the user would interact in the main navigation or flows of your product. You can see one example of this which is linked to the instructor notes. I'm back here with Pete Koomen again. And Pete, I let you talk a little bit about the user experience and what is was so important for Optimizely to get right about your user's experience Sure. So when we started Optimizely, we set out to make an A/B testing platform that anybody could use. And, in fact, our slogan was A/B testing you'll actually use. And we weren't the first people to build an A/B testing platform. People have been A/B testing, frankly, since the days of mail catalogs, back in the early 1900s. The approach that we took to it was that products are out there that let you do this, but they were really hard to use. And for that reason most people just weren't doing this kind of optimization, and this insight came. My co-founder spent nine months or ten months working on the Obama campaign in 2008. And he was the Director of Analytics there, and he ran a bunch of A/B tests for the campaign. And those tests resulted in a lot of additional money and a lot of additional volunteers being captured by the campaign. And the insight coming out of it was, hey, this is really valuable, but boy that was tough, that was a pain in the ass. And so that was kind of the insight that we started with. And we just thought, there's probably an easier way to do this. And so our approach from the outset was this is a problem that's, or sorry, this is something that's already out there. It's our job to make it much, much easier, and so we had to focus on the user. And we built a way to create and run an A/B test in a very visual way. We tried to design it in such a way that a marketer, who didn't have an engineering background, could do. Yeah. So you would definitely say it was more of like a painkiller idea to solve someone's pain point around using A/B testing platforms than anything else. Absolutely. So, and in fact what we discovered was that the pain that was there was so significant that most people just weren't using this product. And so at the outset, our biggest competitor was not some other company trying to sell a product, our biggest competitor was non-consumption. Yeah. And these companies just they'd heard about A/B testing and some of them had tried it, they just never were able to get it to work for them. And that's what we tried to solve. I'm back with Yunha again from Locket and we're going to be discussing design principles and the user experience. And specifically for Locket, what did you know you needed to get right for the user experience? I think because it's the lock screen, which is what you're so used to, your default experience, so we're basically changing that experience. Mm-hm. And saying that this is a new lock screen. This is a real estate swiping over 150 times per day. We need to make it very user-friendly. And the goal of the lock screen is so that you can unlock it so that you can go to your home screen. So we can't make it too long of a process, either. We want to make it simple. Also, you don't know who you're going to be with when you check your phone, so the lock screen needs to be okay for your kids to see. Or for you to be able to just wake up to it. So it needs to be delightful as well. So when we were building the content on the lock screen which is currently locked, if we were just using the RSS feeds out there. And just like slapping those images on the lock screen, it might not be delightful. You might see a lot of blood or there might be gun involved on the lock screen. So we had to start from a manual place where we want to make sure each lock screen that we're delivering, to our user, is delightful and something that you want to wake up to, that you can see. But at the same time, we also need to deliver these real content, which is, like, hey there's an earthquake coming up, so you can't be like a smily face, right. So how do you walk that fine line. Also on the lock screen interaction side, because you're unlocking your phone. And you have some users that are unlocking with the left hand versus right hand. You got to make sure that the button here on the lock screen is something that you can touch from different angles. Yeah. I should be able to touch it. And if this is like two below, it's hard to do that with the one hand. You have to hold it with both hands. And also, android phones, their fragmentation is crazy. You have like your Nexus to the big tablet, you have the small phones. How do you make them all look okay, on all of those devices? Right. So a lot of those considerations are involved. And also like the weather. How do you make the weather shown while in the clock? People also want to customize their lock screen, so I customize it using Locket. Okay. Where you can just upload your own photo. Mm-hm. And, are there any other sort of design principles? We talked a little bit about sort of knowing your customer, when they're using the product. Mm-hm. Knowing that maybe they might be around other people, what sort of other design principles went into building Locket? Maybe in terms of like an aesthetic viewpoint or something like that. Mm-hm. So when we were, yeah a few things that we were thinking about is like making it delightful. Like is this something that you want to see on your locked screen every single time? Also, is this something that you feel comfortable sharing with your niece or a kid that you have. We have a few guidelines as in like, we have our own Locket brand guidelines where you're not allowed to use red on the lock screen or blood, something like that. Yeah. I can't really think of one well, but we were always focusing on delightfulness. Yeah. On the lock screen. Great. You've heard a lot about UX design and I'd like to discuss where we are in the course and what you can expect next. You've learned about the definition of user experience from Richard Fulcher and you learned the importance of designing with accessibility in mind from the very start. The rest of this lesson is setup, so that you can see examples of great user experience design. And hopefully, you'll start to gather ideas for what your product might look like. Ultimately, this lesson will help you think like a designer. It will help you prepare and plan your own design sprints in lesson three. In the upcoming videos, I'll be sharing user experiences and talking about design decisions that can influence your product and your users' behaviors with the product. We'll examine some of the best and worst examples of user experience, so you can focus on the most important parts for the development of your product. The goal of this is to expose you to design considerations, so you can address the biggest concerns in the early stages of the product. At the end of this lesson, you'll be equipped with ideas and resources for conducting design sprints and working with designers. The home screen of a website or the loading screen of your mobile app, will be the first impression for users. And you want to make sure that you get this right. Here's Udacity's homepage as of April 2015. A clear goal headlines the page, and there's plenty of white space around the headlines, and the tagline to draw users into them. Homepages like this one should answer these questions. What is this? What is being offered? What can I do here? And how do I start? In Udacity's case, the how can I get started comes just below the fold with a description of the Nanodegree program. You want all of this information to be present, but you should also be careful not to overwhelm your users. You want users to have a clear understanding of what you offer, and then you can link to other pages for users to learn more about your product or services. Many companies put those links in the footer. Going back up to the top of the homepage, we can see that from here, I could sign up for an account, or I could sign in if I'm an existing user. To learn more about how nanodegrees work in particular I could click on one of these. Homepages are tricky in that they need to do a lot. But you want to be careful about adding more and more to that page so sometimes you might have a landing page, like this one. Landing pages are for specific products that you want to show to your users. They allow you to focus on one particular product. Notice that here, there's a clear call to action. I can get a sense about what this product is from the copy on the page and also from this background image. Scrolling down, I can even get more details about the program. To learn more about designing homepages and landing pages, check out the articles that are linked in the Instructor Notes. At the very least, you need to strive for an informative page, and at the best, your homepage should be memorable. It's important to keep in mind that your homepage doesn't have to be static. It should be a work in progress. Here's another version of the Udacity homepage. And notice that it's changed slightly. We have different copy and these images have been condensed together. Your homepage might also be dynamic in that you might be AB testing certain features of it to see what drives users actions. You might also just be trying to refine your value proposition for your users. And even before that homepage, this is what Udacity's homepage looked like once upon a time. As you can see, it's not as informative or clear at answering the questions, what is this and what can I do here? At the end of the day, you want to make a fantastic first impression. It's really up to you to delight users so that way they come to know who you are and what you have to offer. Now it's your turn to do a little investigation of your own. I'd like you to find three homepages for relatively new companies and analyze them. You want to get a feel for what type of information and elements live on their homepages. For each of the homepages you should ask yourself: what elements comprise the homepage, what are the main calls to action, what does that homepage say about the company, its users and the value proposition? And what are the most likely flows from the homepage to other places on the site? In other words, what could you do from the homepage? Finally, what are some of the similarities and differences you see across the homepages you looked at? Write a post that answers these questions and share it on the discussions. Once you're ready, check this box to continue Once users have accessed your homepage or your application, you'll likely want the user to register for an account. But this isn't always the case. You should keep in mind that registration doesn't have to be the next immediate step in your process. You should think carefully about the entire user experience, the product you're offering, and when you want registration to happen, if you want registration to happen at all. Registration on Udacity's site is fairly simple with just a couple fields or you could also login using Facebook or Google. For more detailed examples of sign ups and onboarding, check out useronboard.com, which is linked in the instructor notes. You can walk through examples such as, Gmail to see all the design elements that guide first time users. These details include animations text annotations, tool tips, and cause to action, all of these lead the user to successfully using the product for the first time. Now, there are many ways to build out a successful onboarding experience. And our best piece of advice is to test your ideas with users using wireframes and mockups. We'll cover how you can do this with a design sprint in the next lesson. To get a real sense of why testing is important, check out this article about Yammer sign up flow. The company found very counter-intuitive results by adding just one step to the registration flow. Payment forms are another type of form that you'll likely use in your product. You'll want to keep these simple and easy to use, so that way the user can focus on purchasing the product. You'll also want to provide different payment options. This form looks a little long, but at least there are different options for payment. Gumroad is a startup that does this really well. Gumroad connects sellers of digital products to buyers. You could sell or buy a variety of things in Gumroad. Let's say I wanted to buy a music management book. I could click on I want this, and I get redirected to the simplest payment form. However, don't mistake simplicity for lack of design. The devil is in the details with this form, and there are so many great details. The price for the item is clearly displayed here. Input place holders describe what each field should contain. And even on the credit card, we can see that the format hints at the spacing groups of four numbers. I also need to enter a two digit month, a two digit year, and a CB code. When I start typing in my payment information, the form selects the credit card that I'm using. Don't worry, this isn't my credit card. Many credit card companies have reserved prefixes. Eventually I'll have to enter at CVV code as well, and this form tells me where to find it. For Visa its on the back of the credit card. For other credit cards, such as American Express, we can see that the CV code is on the front of the credit card. Now, the one thing missing from this form, is some indication of trust. There's a lock down here, but I don't really know what this means. Another website, called UXPin, reminds users about security and encryption on their payment form. Some other sites use logos like these to remind users about secure payment methods. These types of details increase conversions and make for great user experiences. They can make your users love not only your product, but also how they buy it. Another big piece of the user experience are notifications. Notifications allow you to communicate with the user, and they can take many different forms, text messages, emails, push notifications, icons, vibrations, banners, and alerts. You'll need to think carefully about how often you notify users and what forms those notifications take, since they contribute to the overall user experience. A graph or matrix like this one can help you think through the importance and urgency of your notifications. As I walk through the upcoming examples, you should think about where notifications might fall on this diagram. In general, you want to avoid sending many messages that have low importance and low urgency. If you're sending a lot of these types of messages, it can make your product feel spammy. Keep in mind that the frequency for a given notification may change over time, and this graph might look different for different personas using the product. You should think about different notifications for different personas as you work on your product. Some might have preferences for one notification over others. In general, there's some key qualities of notifications that you should keep in mind for your users. The first one is control. And it's the most important thing that you want to give users. Little Big Details is a website that showcases a lot of awesome user experience. When it comes to control, Foursquare in Apple gives users lots of control through menus like these. The second is feedback. Other types of notifications involve informing the user about tasks that they are performing. This is really just about good design in user experience. The feedback provided is dependent on the product. And by providing great feedback, you can make users feel like you're looking out for them while making the product more usable. For example, Twitter will try and provide feedback if you send the same tweet twice. Slack, a messaging app also provides great feedback to users. It provides a confirmation when sending a message to a channel that has people in different time zones. And Amazon provides feedback about whether someone may have bought you an item on your Wish List. All of these notifications are related to feedback loops for users to successfully complete tasks. The third is customization. It's a more subtle aspect of notifications for your users. You might do this based on time, task, location or some other attribute that's tied to the user. Facebook for example, shows a different part of the world to users, depending on the user's location. Finally, you can develop notifications that lead users to form a habit of using your product depending on the frequency and any rewards you might give them. You can tap into what Nir Eyal describes as variable rewards. GitHub provides variable rewards to its users by showing a different Octocat each time the user has no new notifications. Tumblr sends emails with playful texts when a user follows someone or when someone else follows that user. And, Coffee Meets Bagel, which is a dating application, uses digital currency to reward users for tapping into the dating app. Each of these qualities contributes to the user experience and their perception of your product. What makes good notification? That's a great question. So a lot of times when I teach people about the hook model, they say, okay, I get the trigger phase, we need to prompt people to action, but how do we make sure that we don't spam people? How do we know we're not sending them too many of these triggers that they become ineffective? And there's a secret here. The secret is that we have to closely couple the external trigger, the notification, the message that tells the user what to do with the internal trigger. The internal trigger is this situation, the emotion, the routine, the place, whatever it is that prompts the user to act on their own accord. So the closer we can couple these two things, right? The closer we can couple the notification with the sensation or the urge of this is what I need in my day. That's magic. That's the difference between magic and SPAM, is context. So that's the key. If you can closely couple those two, and that, of course, starts with an examination, doing a bit of a narrative on your user to figure out when are they most likely to need this product throughout their day. So don't just willy-nilly send them notifications all day long. But couple those notifications with a time and place when your user is most likely to actually need the solution. So there's a delightful moment and you couple it with authentication. Right. Well it's a moment when the user has this need. So for example, let's say I'm building an app that plays music, right? A music service or a news service, right? A great time to couple that need is when I had the existing habit of turning on my radio. Right. So if you could use geolocation or other data or time of day data, or appointment calendar information, something that the user can tell you about how they behave day to day, so that you can appropriately target that trigger at the moment in time where it feels like magic. Wow, I was just about to turn on my radio, I think I'll use this app instead. The last thing that I want to cover is that you make sure that you get feedback from users every step of the way. Feedback takes a lot of different forms, and you've already seen how you can conduct user research to inform your business idea. You might try incorporating a survey into your product. You could send these out each week or month to collect feedback, or you might even try and embed them in some way into your product. Social media is another great way to monitor early usage of your product, and have customers connect to your brand. App ratings, or user ratings, or website ratings, are another way to understand quantitatively, and qualitatively what users think of your product. One app, which is called Circa News provides the following guidance on ratings. First, they recommend that you just build a great product. If you don't build a great product, users aren't going to give you good ratings in the first place. Secondly, don't annoy the users. You should really only ask them to rate your product if they've had a good experience and they've used the product for a little bit. And finally, Circa News recommends that you ask nicely, and maybe even reward your users for rating the app. For more details about their advice, check out the article, which is linked in the instructor notes. Finally, you should make customer support everyone's job. You might have a dedicated email or chat service that lets users talk directly to employees. Former CCO, and co-founder of Kayak, Paul English, went so far as putting the very loud phone in the middle of the engineers. He reasoned that if the same calls kept coming in, then the team would work quickly to resolve the problems. This would likely resolve the same problems that other users were facing. No matter which strategy you use, you should think about when you'll intercept users and how you will respond to them. Your actions and improvements to your product can speak just as loudly as individual follow ups. But do remember that these experiences also contribute to the user's experience and their perception of the product. So Pete, what kind of design principles or design thinking goes into the product of Optimizely? Sure. So two things come to mind that I think has served us well from the beginning. When we started Optimizely, to see our competitor's products, you had to go through a multi-step sale cycle, which was really frustrating. And so, we had no name. We had no reputation, we had no sales people either. And so we built our product in such a way that anybody could go to Optimizely.com and enter their website, and immediately get the feeling for what it was like to use our product. And I like think of that as putting our product where our mouth is. You know? And that forced us to design something that was easy enough to use that anybody could get it. Because the product was the sales person, initially. And the second one I think that really, really served us well was this idea of enabling the novice, but empowering the expert. And that comes through. When you look at our product, we built a visual editor. So, whether you're looking at a website or a mobile application, you can use your mouse. You can drag things around. You can change text. You can do a lot of simple things without having to understand code at all. But we're engineers, and we were never really all that trustful of wizzy wig editors like that. We don't typically use Microsoft Word for that reason. And so, to satisfy our own itch there, we also made it possible for anybody to go under the hood and see exactly the code that we were generating as a result of all this visual stuff. And that made it possible for a marketer to go in and use it, but also their web developer to go in and see exactly what was going on. We found that that's one of our most consistently used features, to our surprise. Hi I'm with Kaushik who's a co-founder of Locket. And you're actually one of the co-founders with Yunha, who I spoke to earlier. Right. Yeah, and could you talk to me a little bit about the design process, and how you go about testing with users, and how do you make sure that you're building the right things for your users? Well, our product is mainly a lock screen product. So we have to be very, very careful what kind of things we put on lock screen, what colors we choose, what kind of things we are actually modifying or notifying on the lock screen. Because this screen is seen by a user almost 100 to 150 times a day so it is very near to the user. And he has to make sure that he really likes that screen. And it's non-intrusive. So we take care of things like, very simple design. We also make sure that he can quickly access what he wants to access, and we also keep things like timers and weather icons on the lock screen in right places, so he can very naturally go look at that, instead of actually searching for it. And the color of the ring on the lock screen is also very carefully chosen because we want to make sure he does not find it very intrusive or taking away his space or he doesn't like it. All those things are taken into consideration. Fonts and styles are also taken care of over there, but apart from that, because the lock screen is something which you look at when you first go into your phone. There are places where you wouldn't want your neighbors to look at what is on your lock screen and all these things. So taking care of that, as well, is a very important thing. All these things put together make the design process at Locket a little more complex than any other place. But however, we able test all the features and make sure we pick up right things and that's how the design process goes at Locket. You've seen a lot of different parts of user experience for specific products. Now I'd like you to find a relatively new product and try it out and document all of your thoughts about the user experience. This can be anything from the home page, to emails, to checkout, to interactions on the site. You want to build an eye for amazing products, and the best way to do that is to see how others have done it in the past. So, write a post that describes the tasks you attempt in the product, how the product did and did not help you, how you felt along the way, and any design elements you feel contributed to your experience. Once you've written your post and shared it on the discussions, check this box to continue. We're here with Nadya Direkova, a staff designer at Google and a design print master will run more design print more than anyone else in the company. Thank you for joining us. Thank you for having me. So, when should an entrepreneur think of design and user experience when building their product? That's a great question. The answer is right away, I don't believe that there is a successful product that separate from being a product or something that's carefully designed. So as soon as someone's thinking about starting a company, it's useful to think about what is it they want to bring to the world, and that starts the design process. Right, and when you don't have a designer or you can't afford a designer what do you do? So we'd like to believe that anyone can have some of the skills that a designer has. Note the skills in Photoshop actually rendering beautiful mocks. But the kinds of questions that the designer asks, we're hoping to cover some of these today so that you can learn, what are the design skills that can help you quickly tackle your product and the chief results with your team, even if you're not a designer. You'll hear more about design spreads from Nadia in the next lesson. So, Product Hunt has been blowing up. What do you think made them so successful? So, Product Hunt is an interesting story because my contributing author on the book is a guy by the name of Ryan Hoover, who was working a job at a startup that he was okay with. He wasn't super happy about. But Ryan emailed me one day and said, hey, I've been reading your articles on TechCrunch, and I like this consumer psychology stuff. How can I help you? So we got together for lunch one day, and I said, look, I've got all these articles. I've been thinking about putting them together in a book. Do you think you could kind of help me make them into this cohesive book, as opposed to a bunch disparate articles? And he did. We worked on it for several months, and he did a fantastic job. I really enjoyed working with him. Well, there's nobody who understand the hook model second to me better than Ryan. And the next thing that Ryan did after we worked on this book was to start Product Hunt. And he designed Product Hunt from the get-go with the hook model in mind. Now the company is doing phenomenally well. I'm lucky enough to be an investor. So full disclosure, I happen to be a fan for a number of reasons. But, yeah, the app is doing incredibly well because it was designed with this hook at the early days of the product design. And of course, Ryan and his team get 110% of the credit for this. I have the easy part of just talking about the theory, but they had to actually implement it. But I think they saved themselves a lot of time and found the right thing sooner by using the model. And now I as a new entrepreneur can do the same? Right, so again, I am a little biased here. But I think it starts by taking some time to figure out your hook. Before you've laid down any code, before you've done any wire frames, just to think about what the core experience is that you want to turn into a habit. And then ask yourself, do you have the fundamental characteristics of a habit forming technology, by number one, have you identified the internal trigger? Do you know your users' itch? Number two, what's the external trigger that gives the user some piece of information to do the intended action? Number three, what's the intended behavior, and how can it be made as simple as possible? Number four, the variable reward is how are you giving the user what they want, scratching their itch, and yet leaving them wanting more. And then finally, the investment phase, the fifth question, is what's the bit of work that the user does to prompt the next action, to load the next trigger, and to store value in the product. And if you can answer those five questions, and you have this core hook in your mind, you can design accordingly. And it becomes much easier to build the right thing sooner. Can I use the same model on existing products? Sure. So, it's a little bit more difficult because as you know, once you've built a product, it's kind of hard to change it, right? You've done all the architecting. People have worked hundreds of hours on it. It's harder to change and so, what oftentimes I see people doing is I'll get emails from an entrepreneur or a product manager. And they'll say to me look, we've been struggling with this product, and until we read your book, we couldn't figure out why people weren't using it. Right, we put so much effort into building it, and we didn't know what was going on. A few customers were telling us they really liked it, but even they weren't using it. So then the book can become a diagnostic tool where you can figure out oh, this is why people aren't coming back. We haven't identified the right internal trigger. The external trigger isn't effective. The action is too difficult. The reward isn't very rewarding. Or we're not asking people for the investment at the right time. So then it becomes a diagnostic tool, and then you can of course correct from there. So what hooks does Product Hunt have? Sure, so I think Product Hunt has a great hook. It's something that people use on a daily basis. I think their hook is very reliant on this external trigger of getting an email. So you get this daily email from Product Hunt that says hey, here's the latest and greatest in technology products. The action then is to open the email and to reveal the variable reward. Now, the variable reward is this uncertainty about, well what is it? What is the latest and greatest, right? You're looking through all these various products to see one that might be interesting to you. You click on one of those products. If you go to the Product Hunt discussion page, there's all these discussions happening about people talking with the founders of these products. There's this great community formed around these products. And the more you interact with that community by commenting, by sharing things to that community, by creating collections, all of these things load the next trigger and store value. So the next time it won't be your daily digest anymore. Now it'll be an email from oh, this is your friend who you trust, who just posted something to Product Hunt prompting you to come back again, right? That's a piece of information that you've given the company that can now send you through that four steps of the hook once again. The more you use the product, and this is where I think investors think the company can grow outside of just technology, is that it learns your tastes. It learns what you're into. And so hopefully over time that hook expands into all different kinds of interesting industry areas. So understanding me and giving me more relevant results. Right, exactly. That's part of this investment phase. In this lesson you learned about your target users and how to build great experience for them. A great user experience is really good design. It's something that is functional and emotionally satisfying. I showed you many examples of the components that go into a great design. There's so much more to learn than mentioned here, and we hope you have some basics for what to think about in the design of your own product. In the next lesson, you will learn how to use Zionsprints to test the riskiest assumptions in your product.