Alright, you're in trouble Sara. You've gotta, you gotta get the 64 over. Yeah, I'm working on it. I have to get the, the 16 up to 64 status so I can. oh. Oh, I might actually lose this. You're going to lose. Oh, no. Sara, this looks bad. This is looking pretty bad. Wait, before you lose on camera, let's do our introduction. No, look. Okay. Well, I'm going to say hi. Well, slightly better. All right, fine. Hi, I'm Andy. And I'm Sarah. And I'm addicted to 2048. No, I'm actually an Udacity instructor Who's also addicted to 2048 [LAUGH]. Who's also addicted to 2048. Yeah, and I am Sarah. I am a software engineer and, of course, a developer here. And as I have mentioned, a lot of people at our office are really addicted to this game and we decided it would be a good way to start experimenting with short courses, making really small course that hopefully, a lot of people will get a lot of enjoyment out of. Yeah. So this course isn't going to teach you how to play the game. It's not even going to teach you how to program the game. Instead, we're, we're going to talk about how to modify the existing code to make it your own. Right. And I actually went through this experience on my own about a week ago. I'm a pretty novice programmer. I've learned what I know through Udacity classes actually on the job and going through this code base and looking at how the HTML and the CSS and the JavaScript interacted. That was a really valuable experience. So I'm actually really excited to share this with you guys and make our own versions of 2048. Yeah. So the thing that makes this project especially useful as a teaching aid here is that it's an open source project, meaning that anybody can look at all the code. They can take it and modify it. They could push their changes back to the original but most people are just sort of making their own like fun thing. In fact, there are a couple of them that have made it pretty big. Should we take a look? Yeah. Let's look at a couple of those. All right. So, this is the Doge version that Sarah can't stop playing. It's polite to I need points. So, this is based on Still scoring. The internet mean the Doge dog um,and this is just one of you know, a ton of different modifications of this game that is out here and you will have one yourself. How long do you think it took the guys who made this to do this? Honestly, for experienced programmers, probably like ten minutes. [LAUGH] That's, that's so cool. How long do you think it will take our students to have their own version working? Maybe a little more than ten minutes. Maybe like an hour. [LAUGH] Okay,but to even just to make some little changes how long? I could be doing that in minutes ,yeah. Okay,so literally, this stuff isn't that hard. That was, what was the most mind blowing to me when I started going over how this all works and you'll have your own version in ten minutes, so keep watching. So Andy, when you were looking at the source code how did, how'd you get started? I probably didn't do the right way, whatever that is. I just Googled 2048 source code. Okay. Found myself on GitHub. I felt very confused, but I clicked around a bit, found some code, copied and pasted, made some changes and then- Right. Ta-da. [LAUGH]. Is there a better way I'm guessing? yeah. But we'll talk about that a little bit more detail later but for now let's just get a quick look at the code. Okay. Right here in the browser. So since we're in Chrome, we can just right click, and go to Inspect Element. Okay. And that brings up the development tools. Oh, okay. This is all the code that I had played with in the wrong way. That's cool. Yeah. So this is the, this is the HTML here. So that gives the basic structure for the page. Okay. And then over here, we've got the CSS, which gives the page it's styling, the sort of look and feel. Okay. Cool. So, the HTML from when I was going over this. This has things like, we have Head, which is the Header and the Body, which is basically the whole document. And then you keep going, and we have, oh that's the Heading. We have Above Game, Game Container and so on. If you just hover over these things, it will show you what part of the page that elements refers to. And can I modify this right in the browser? Yeah. So if I were to delete? Yeah. Yikes, okay, I'm going to refresh cause I don't want to break anything Sounds good. Okay so what about what's going on over here? So this is basically telling us you know, what, what color things should be. What the, the exact positioning of things should be. huh. So for example, it gives the color for the background, of the main background of the page here. And what does this mean? I, I see HTML, and I see Body over here. I see HTML. I see Body here. Yeah. So, this is basically saying this rule applies to HTML elements that basically are called those things. So anything that starts with HTML or body, are going to have those rules apprised to them. Okay, and so if I click on this background thing, and I change it to. Oh that is so cool. Okay. Nice. So imagine I am trying to figure out what's going on here. Mm hm. How should I spend the next five minutes of my time? Just, you know, pull up the page, right click Inspect Element, sort of look around the page. Uh-huh. Figure out, you know, maybe like delete some things to see what corresponds to what on the page. Okay. Well, I'll give it a shot. Alright. Cool. [SOUND] Alright, so if I want to do some class changing, I can right click and inspect element. And then let's see, I can open up this container. And, [INAUDIBLE] some heading above game. Yeah there it is. So I'm going to turn restart button into game intro. [SOUND] And it moved over to the left so what's, what's going on there? Yeah so the class that was there previously was telling the CSS what rules to use. So we change it to a different class. So now, it's using those rules instead of the rules that Gabrielle [UNKNOWN] originally wanted. Okay, cool. Okay. Before we get in too much further into this, we should actually talk about what we're doing so this class is going to have two lessons. Mm-hm. Lesson one is on HTML and CSS, which are basically, how does this webpage work or how does it look, I should say. Yeah and then, lesson two will be on the JavaScript, which is sort of more how, how it works, how, the elements on the page are controlled, how, things change when you interact with the page. Right and so if you're an experienced programmer with a decent amount of experience who doesn't wan to learn the basics of HTML and CSS, you can go ahead and skip to, lesson two. But it would still be super valuable to have you in the forums, since the new programmers will definitely benefit from your knowledge. Yeah. Nothing like having some experienced help around, like Sarah, to help you in programming. So,we made some changes in the browser itself. But we can't share those changes. Right or save them. Right so to do that I guess we're going to have to be a little more sophisticated than just working the browser. We're going to need to get a code editor and we need to get the code and how are we going to get the code? So, the code is stored on GitHub so we will need GitHub accounts and we'll need to actually figure out how to get the code from GitHub. And you, depending on your background in programming you may already have a code you may like, you may know nothing about GitHub or you may be an expert, so answer this next question it'll sort of guide you, there might be some videos that you can skip and we don't want to waste anyone's time. So, we talked about needing a text editor. Which one, give any preferences? Which one should we use? I personally use Sublime. I mean, there's, there's lots of good choices out there but. Okay. Sublime is what I use. So, and is that available in Windows, Mac, both? It's on both, yeah. Okay. So I think I actually use Sublime two. Sublime two, okay. This is, this is a slightly older version so. Okay cool, so I'm going to download for OS X, and I mentioned that if I had a Windows machine I would get something similar. Yup. And we will let that do it's thing. Alright, so we just downloaded it and I am going to search for it now, for some reason it didn't open automatically. And I am going to drag it over to applications. And now we're in Applications and if she scroll down, we've got Sublime. So let's open it up. Oop, there it is. Fine, that's it? We're ready to start going? We're ready. Okay, cool. Okay. So, we have out text editor. We're ready to make changes to code, but we need to get it. And from the searching I did earlier, I gather we're going to use GitHub. Yep. And what is that? What is GitHub? It's a version control system that lets you keep track of changes that you make to your code and let's people collaborate easily. Okay, I know, I mean, at Udacity you engineers are using it, and what are you guys doing with GitHub? Yeah, so basically at Udacity we have one, like, main master branch that everybody uses as sort of the, the source of truth. And then people will make branches to that their own separate branches that they then make changes on. And then submit pull requests back to everybody else, and everybody else can, can look at it. Usually there's one particular code reviewer who will approve the change or say, you know, maybe you need, you know, you should change this here or there. Okay. Change this variable and, whatever. Okay. So for our purposes, we're not going to be, like, merging anything back into Right. The original code. What are we going to do? Yeah. So, for our purposes, we're just going to check out the main branch, make some changes, and leave it at that. That's going to be our own new thing now. Yeah. Okay, cool, so let's install GitHub. Sounds good. Let's make our GitHub account. Okay. So I'm going to call it 2048-class. Okay, and then I'll do the free play, and I"m sure that's fine. Right? Yeah. That doesn't seem to do anything, but I don't want to enter my credit card number Hm. Maybe I can, okay set up my account. Let's see. Yeah, let's just see if we can go to the account. It looks like it's set up. I don't know. I guess we don't need to put in a credit card. Alright, so we have an account. What's, what do we do next? Well so we, first we need to install Git. And so there, there are two ways to access Git. What is, what is Git? It's the version control system itself. Okay. So GitHub is just a place to store Git repos, repositories. So we actually need the, the software on our computer to, to actually make the Git commits and run all the Git commands. Okay. So, should I, does Git have software like that? So there, there is a get hub specific UI that could handles Git for you, and it installs Git when you install it. So. Okay. We can go ahead and use the Git gooey. So I'm going to just search for that. What I, what should I search for? GitHub? Gui? yeah, that'll probably get us there. Get us there. [LAUGH] Okay, I'll do GitHub for Mac. Yeah, we want the one for Mac. Okay, easy enough. There it goes. Alright, so we've downloaded it, unzipped it. Now, let's install. Alright. Alright, so we've installed it. We opened it, and now we have this folder that says My Repositories. Yep. So now we actually need to get our repository Okay. To put in there. Alright, so we have installed, GitHub locally, which gives us a place to put our files. Mm-hm. We have an account, which gives us a place online to have our files. How do we get them to talk to each other? Okay. Well, we're going to need to, sign in. So, let's go to Preferences. Okay. Alright. So, yeah we want to Allow that. Sure. So that was something about how is sort of makes sure that it's us. Okay, so now we can access any repositories that we have here, but we don't have any yet. Right so, Go back. Were going to need to go actually get the repository Okay. The original repository from GitHub. What should I do? Search for that [CROSSTALK]. Yes [BLANK_AUDIO] Okay. Alright, so we, so we found his repository. Okay. So there are two options here. We could clone it, which means that we would just have a local version of his repository. Or, we can Fork it which means that we make our own copy of the repository that we can then put on our local machine. Okay, and what should we do? Since I don't think we, we want to make any changes to his repository, I think we want to fork it so that we have our own totally separate one. Okay. [SOUND] I like. It's forking it. I like it. So I'm going to Refresh, and there we go. Alright, so now we have our own copy. That is cool. So these are all those files that I had copied and pasted before. The JavaScript files, the Style files, and then this Index file. Very cool. Yeah. So now if we go back over here and refresh, it shows up. Awesome. And we can clone it to our local machine. Alright, so we now have a copy of the repository on our machine. Okay, great. Alright, so we have our code. We have our editor. Let's open up the code in the editor. We can just pull this over from Finder and have this nice little sidebar. That is cool. I had no idea you could do that. Okay, so these are all our files. This is looking familiar now. I played around with these before. Okay. So this, these are all JavaScript files. I don't want to look at them right now. Alright. The one that seemed most important was the index file. Mm-hm, yeah. So this is the HTML that we saw in the browser earlier. Yeah. And so, so right, this is the HTML. This is that great container with the rows and the cells. Mm-hm. I had some different tiles. I made a Udacity flavored version of this app. Okay. I want to get them in there. So, basically, I want these different, the two tile, the four tile- Mm-hm. To be something different. Okay, so just replace the pictures. Yeah, should we do that in here or is that going to happen in the CSS? Well, let's see. Do we see anything in here about the pictures themselves? I don't know. Alright, so let's try looking. So, you open up Style. Yeah, so we've got a couple of different CSS. So, the one we were playing with before was the main, so maybe that's the place to go. Yeah, that's probably, probably the best place to look. Okay, so I'm going to search around for tiles and make some changes? Alright. Cool. Alright, Sara, I made some CSS changes, how can I, what's the best way to see what they look like? Alright, so if we just open up the HTML file, so this is in the, the main directory. Uh-huh. This index.html file is what we were looking at earlier, so we just going to open that up, it will open up in your default browser. Alright, but this is the game we made. And now we have our images instead of the numbers. And, this is, this game is actually much harder when there's images. because you don't know what's next. Yeah, I don't know what numbers I'm doing, I just know that I want the faces and so these are just U.S. presidents. It's the first thing that came to mind, but I mean, there's tons of cool things you can do and the way I did this, was I went into the CSS file. So we're in main.css and I went to all these places, where it's talking about the actual tile properties. So, what is the two tile look like, the four tile, and so on? And I sort of just overrode the background, I think this was referring to some color. Yeah, so the original background was for each of these a different color instead of. Instead of an image. Instead of an image. So, we actually, if we were doing this for real, we'd probably want to remove all those, all those backgrounds. I think Andy wanted to be able to revert back if you wanted to. I'm still not comfortable with versing control. I know you can just do that on the fly but I kind of like doing this, I'm sorry. But yeah so, I have, I made this folder called Tile Sets, Presidents and then I just called the different images two, four, et cetera. And this dot,dot slash? Mm-hm. So, what's going on here if I'm, tell me if I'm thinking about this right. Index.HTML lives somewhere in my computer. Mm-hm. Yeah, inside this 2048 directory. Okay, and so the dot dot means go back up a directory. Yeah, because this, this style file that we're in is under Style. So it's going back to the directory. So, we go back up 2048. And then it found. And then go to the tile-sets directory which is just under 2048. Okay, and if you open that, that's where you get our presidents and you have all those files. Yeah. Cool, now what are you going to do? I don't know. I don't know. I don't know an answer. Let's keep playing around. Alright, so now we have a way to, to look at our modified version using a file on our local machine, but it would be really nice if we could you know, share this with our friends without passing them all of the files that we modified and having them loaded up on their computer. So what we did was we made this shareable version hosted on GitHub. Yeah, and GitHub does this automatically, it's pretty cool, it's this feature called gh-pages. And we, Sara and I just went through the whole process of making that happen and it was actually a little frustrating, not for any good reason, mostly because we were impatient. So there is a link in the instructor comments of this video that will give you great documentation for how to make your own page. The only advice I think we would give. Be patient. Yes. There's a part where it says it may take ten minutes. It really means that, so don't, don't think anything's going wrong if your page isn't loading as fast as you think. Yep. But, once you have your, your page up, you should go to the forum, share your link and I'm really excited to see what everyone makes. Yeah. Okay so, we've looked at the CSS, we've looked at the HTML files. Mm-hm. But there's a lot more going on in here. So how, I mean, how do you think about approaching a new program like this? Well, so there's always going to be some files, these guys that have a point of for, of being there but they aren't really essential to understanding the functionality of the program. Okay. So, I sort of ignore those guys and go straight for the, you know, the things that really change how the program looks and how it operates. Okay. So, if we look here in the JavaScript, we'll see a bunch of, a bunch of files including some that are, you know, sort of less useful when it comes to understanding how the programs works. Okay. So like, here we are in the JavaScript file we have here. Add in frame, underscore poly-fill. Okay, so this, this guy isn't really going to give you a lot of information about how the game functions. How do you know that? You can just sort of look. There's not really a lot happening here that has to do with, like, the tiles on the, on the page moving around or anything like that. It's just sort of something you have to get a feel for. So this, this guy seems to be doing something, it's creating a game manager, which sounds like something to do with the game. So that's probably defined in here. Okay, and looks like it is. And it looks like this guy has a lot of functions that do stuff with the game. So this, this is probably a good place to start looking. Okay. At what the overall structure of the program looks like. And then just keep going from there until you're satisfied that you understand things? Okay, so I know you took some time to make a pretty thing. I want to pull it up. I'm lying. This is my handwriting. I did it for you, sorry. [LAUGH] But these are the big, these are the big files that you were, the most important in terms of function of the game. The index, the main file, the whole JavaScript folder. With a couple of exceptions. Yeah. Things that weren't quite as important. The poly fill functions Mm-hm. Or files especially. And then these seven, these seven files so if, if you were going to do, I am sorry these seven JavaScript files, yeah. So if we were going to add an Undo button, I mean, where is the majority of the work going to take place? Would it be in the Index, would it be in the Main, or would it be somewhere in these JavaScript files? Yeah, so, so we'd certainly need to do some stuff in the HTML file and the CSS file to make the button itself. But as for how it actually works, most of that's going to go in, in the In the JavaScript. JavaScript files. Because this is more substantial than just changing how it looks. It's- Right. Really. because, because the button has to actually do something. Okay and that's what we'll do and listen two. Mm-hm. Okay,but for now we'll stick with more of the HTML and CSS. Yeah. Cool. Okay, so we talked about, you know, HTML talks, talks about where these different things are on the page, or actually what's on the page. CSS is the where and the how does it look? Yeah, pretty much. And the JavaScript just, like, how does this whole thing fit together. How does, when I click this, what machinery does that enact to make that happen? Right, yeah. So, if you wanted a static page you could just have the HTML and CSS, and you wouldn't need JavaScript. Like a blog or something? Yeah. Okay. But if you actually want to be able to interact with things. I mean, you can have some interactions with HTML alone. Mm-hm. But if, especially if you want things to, to move without reloading the page. You basically want it. You want to use some JavaScript. All right. And this together, I mean, I've heard the terms, you know, front end, back end. This is the front end of a webpage. Yeah, so, so this really doesn't really have a back end. There's no sending information back to a central server or anything like that. Okay. This is all run on the client computer. Okay, which means me if I'm working it. Yeah. So, when, when you load the page all of these all of these assets get loaded into your browser. You, you basically download all of these files. Mm-hm. And then it just goes on your computer. Okay. There's There's no talking back and fourth. It's all, it's all there. Right. So, good. It's helpful [LAUGH]. I've never had anyone just to explain this to me before. So, with the index like HTML. I did have a hard time when I was, you know, browsing this at first. I don't know HTML and it was, it was confusing. So, maybe we can talk a bit about how to, how to read this. Sure. So yeah, every aetional document starts with html. << Okay. << Browsers are very forgiving. They will often just like try to make something work, even if you don't have the appropriate structure. But, it's best to follow it [CROSSTALK]. So then you've got your heading. << Header, heading, okay. << Yeah, so this is stuff that's not really, necessarily displayed on the page. So you've got the title, you've got some some sort of like loading of attributes. Okay, so wait. This linking style/main. That's where it gets the CSS that we were modifying earlier? Yeah. This stuff seems to be about like mobile. Okay. Stuff, so it's not super relevant to figuring out how things work. At least on the web page. And then we've got the beginning of the body, which is really like what's shown on the page. Okay, and so, I mean this is, every time I look at html, I just see this wave of, you know, like indent and less. More indented and less indented. How, how are you, what do you thinking about when you're seeing this? Yeah. So basically I want to look for two things that are at the same indentation level. And that tells me that, that's, so this is the beginning of the block, and this is the end of the block. Okay. You also get this little closing guy, to say, you know, I opened this div and now I closed this div. You know, what is a div, why is it called a div, like... I actually don't know why it's called a div, but. Right. Divs are sort of the basic building block of websites. They're, they're just sort of a thing. A a container for stuff. [LAUGH] they're, they're sort of special kinds of things, like A is usually a, a link. Okay You've got forms. What about, so, can you go back up a bit. Mm-hm. I mean, they all have this thing, this class. Class container, class heading. So is that class just for the, so when I'm writing the CSS file, and I want to say everything that's a container is blue. Is that what it's for? Pretty much, yeah. the, the JavaScript can also use these classes. Okay. It's, it's basically just a shorthand for saying like, these are, these are similar things they should have, they should look the same. You could have more specific rules for like just a single one with an ID. Mm-hm. But mostly yeah, it's for, it's for the CSS. You could just have all of the styles in line, but that's... That's messy. Yes. So that would be like, every time I had a, what I wanted to be container, I'd have to say. You'd have to have all. Yeah. Okay. Yeah. I don't want to do that. Okay so, paper divs. What are these H1's? That's a header. Okay P, what's P? Paragraph. Okay I just sort of mixed the spacing around it. Standardized. But it seems like the Div is the more, like the really structural thing, and this is the P's and the A's are just sort of like... Things that go inside Divs usually, yeah. So, so Divs can just be like a blob of text. They can be a container that holds a bunch of different blobs of text. It's really, sort of like the basic building block of HTML. Okay. Right. Let me play around a bit and see if I can, you know, make some changes. All right. Thanks. Okay, so I'm going to make a double 2048. There's going to be one grid up here and one grid down here and there's going to be, it's just going to be a disaster of tiles. All right, let's see what happens. So, I'm going to copy everything from game container which is two levels in. Mm-hm. So, I'm going to highlight down, and then this is the closing div. Mm-hm. And it's two levels in, so I'm going to copy and paste. Save it. All right, let's see what happened. Okay, so, here we are. Let's reload the page. All right. And, okay, whoa, [LAUGH] that is not what I wanted. [LAUGH] I was hoping that there would be way more tile movement. But it looks like just the top tiles are going. Yep. That's unfortunate, but I guess I shouldn't have expected too much. Any idea what happened here? Not without looking at the code a little bit more. All right, well, maybe we'll do that in lesson two. All right. Alright, so that was helpful with the HTML. Can you do something similar and tell me how you think about reading a CSS file? Alright, sure. Let's go look at it. Alright, so we've got the CSS file. So CSS stands for cascading style sheets. Okay. The cascading part is, sort of, you can define things in multiple different ways, and it will always be the last definition that, that gets used. Okay. What's going on, like, with these sorts of things? Yeah, so, so we've got HTML and body. So, all of these rules will be applied to any element that starts with HTML or body. And then this rule will apply just to the ones with body, and you'll notice it's one of the same attributes between the two of them so. So, this margin is going to supersede that one? Yeah. Yeah, it'll over ride it. Okay, cool. Okay, so and this could say Div for example? This could be just any HTML thing. Yeah. So, you could define styles for all Divs. That would be kind of weird because there are so many Divs that it would just be kind of, kind of strange. But, so here we've got inputs. Those are like boxes that you type stuff in. Now this is different. This is green. Yeah. So, so this guy is talking about a class. Okay. So, these other ones, where they don't have dots in front of them, those are the main, the element themselves. Mm-hm. So the thing right after the open angle bracket. Mm-hm. When its got a dot, it's talking about the, the part that says class equals. So, this one is referring to this particular class. Heading class, okay. Mm-hm. Cool. And then, here, we've got an element dot class name, so it's only that kind of element's class names. So if. Okay. If we'd had a Div with a, with a class title, this rule wouldn't be applied to it. Okay It's only going to be applied to heading once. So, what about these? So, what's going on with these like, at dash webkit dash keyframes? What is this? This looks like it's probably some kind of animation or like, maybe a hover over, something. Okay. What do webkit and moz, what do those things mean? Yeah, so this is, this is clearly referring to different kinds of browsers. So it's probably like different ways of doing things based on which browser you're in. Oh, so is this, so when our front end engineers are all complaining about, you know, lack of browser specification, they're complaining about having to write these things? Yeah, or, or probably more like this sort of thing. Okay. I can, I can see why that'd be annoying. Yeah. Alright. It gets super annoying. And is that about it? I mean, there's elements. We've got classes. We've got this blue stuff, which is just the rules you're applying, the font size, the height. Is that about all that's going on? Yeah, pretty much. I mean you, you can do more complicated stuff in CSS, but it's sort of preferable not to. [LAUGH] You mostly want the CSS file to be as simple as possible. And just, sort of, give the basic positioning and like coloring and all of that, and then have the JavaScript deal with everything else. Okay. Alright. well, I'm going to actually try and do that thing that you said I shouldn't do. I going to try and change the, some of the styling of all the Divs and see if that does anything interesting. Alright. Okay. Alright, Sara, I did what you said I should never do, I styled a div. Alright. So, I gave it, I gave all div's black backgrounds, and I don't even really know what this does, but I said margin 100, what I'm guessing means pixels? Pixels, yes I saw that, you know. So some of these are going to get overridden by specific rules on like name divs that have class names, but. Sara, you said I shouldn't do it. No. Are you willing to put your money where, where your mouth is? It's going to look funny. Yeah? Oh, crap. [LAUGH] It looks really. Hey, I'm still. Hey, you're still playing. I'm still doing well actually. You're combing things somehow. Yeah. Oh, my goodness. Oh, there they are. You can probably see how to combine them here. Maybe. Wow. That's interesting. Okay, so. [LAUGH] I guess, don't style your divs, is probably good advice. Yeah. So, thank you Sara. This was helpful. It's pretty nice to know that HTML and CSS aren't actually all that complicated. So thank you for lifting the veil on that. Yeah. Definitely there's definitely more to it than just what we did here. It would definitely take more practice and familiarity to start you know building pages of this complexity, but I You mean from scratch I bet is a little harder? Yeah a little bit. But it's cool to be able to modify open source projects. Yeah and it's nice to be able to actually just, you know look at the source for any page you know you could just, any Change Google to Boogle. Yeah. If you wanted, you could I don't think I want to. You could just look at [LAUGH] Any, any page that, that you're visiting, you can always just look at the source code and see what they're doing and learn a little bit that way. See what, what standards there are out there. Cool. Yeah. I can't wait to see all the projects that the students in this class come up with. I'm sure they'll be some Yeah. It'll be awesome. Some good ones. And next time, we're going to make [INAUDIBLE] button. Yeah. So we'll, we'll look at the JavaScript in more detail. And add in the functionality and then throw a button on the HTML. Cool. Alright. See you then.